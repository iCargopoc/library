{"version":3,"file":"index.modern.js","sources":["../src/common/extDataGrid.js","../src/utilities/utils.js","../src/functions/DatePicker.js","../src/common/ErrorConstants.js","../src/common/ErrorMessage.js","../src/overlays/column_chooser/ItemTypes.js","../src/overlays/column_chooser/columnItem.js","../src/overlays/column_chooser/columnsList.js","../src/overlays/column_chooser/Chooser.js","../src/overlays/sorting/ItemTypes.js","../src/overlays/sorting/SortItem.js","../src/overlays/sorting/SortingList.js","../src/overlays/sorting/Sorting.js","../src/overlays/export_data/ExportData.js","../src/index.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport { Toolbar, Data, Filters } from \"react-data-grid-addons\";\r\n\r\nclass ExtDataGrid extends ReactDataGrid {\r\n  componentDidMount() {\r\n    this._mounted = true;\r\n    this.dataGridComponent = document.getElementsByClassName(\r\n      \"react-grid-Viewport\"\r\n    )[0]; //assumes only one react datagrid component exists\r\n    window.addEventListener(\"resize\", this.metricsUpdated);\r\n    if (this.props.cellRangeSelection) {\r\n      this.dataGridComponent.addEventListener(\"mouseup\", this.onWindowMouseUp);\r\n    }\r\n    this.metricsUpdated();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._mounted = false;\r\n    window.removeEventListener(\"resize\", this.metricsUpdated);\r\n    this.dataGridComponent.removeEventListener(\"mouseup\", this.onWindowMouseUp);\r\n  }\r\n}\r\n\r\nexport default ExtDataGrid;\r\n","export const applyFormula = (obj, columnName) => {\r\n  let item = obj[columnName].toString();\r\n  if (item && item.charAt(0) === \"=\") {\r\n    var operation = item.split(\"(\");\r\n    var value = operation[1]\r\n      .substring(0, operation[1].length - 1)\r\n      .split(/[,:]/);\r\n    switch (operation[0]) {\r\n      case \"=SUM\":\r\n      case \"=ADD\":\r\n      case \"=sum\":\r\n      case \"=add\":\r\n        obj[columnName] = value.reduce(function (a, b) {\r\n          return Number(a) + Number(b);\r\n        });\r\n        break;\r\n      case \"=MUL\":\r\n      case \"=mul\":\r\n        obj[columnName] = value.reduce(function (a, b) {\r\n          return Number(a) * Number(b);\r\n        });\r\n        break;\r\n      case \"=SUB\":\r\n      case \"=sub\":\r\n      case \"=DIFF\":\r\n      case \"=diff\":\r\n        obj[columnName] = value.reduce(function (a, b) {\r\n          return Number(a) - Number(b);\r\n        });\r\n        break;\r\n      case \"=min\":\r\n      case \"=MIN\":\r\n        obj[columnName] = Math.min.apply(Math, value);\r\n        break;\r\n      case \"=max\":\r\n      case \"=MAX\":\r\n        obj[columnName] = Math.max.apply(Math, value);\r\n        break;\r\n      default:\r\n        console.log(\"No Calculation\");\r\n    }\r\n  }\r\n  return obj;\r\n};","import React from 'react';\r\n\r\nexport default class DatePicker extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: new Date(),\r\n      };\r\n      //the variable to store component reference\r\n      this.input = null;\r\n  \r\n      this.getInputNode = this.getInputNode.bind(this);\r\n      this.getValue = this.getValue.bind(this);\r\n      this.onValueChanged = this.onValueChanged.bind(this);\r\n    }\r\n  \r\n    //returning the component with the reference, input\r\n    getInputNode() {\r\n      return this.input;\r\n    }\r\n    //returning updated object with the date value in the required format\r\n    getValue() {\r\n      var updated = {};\r\n      let date;\r\n      date = new Date(this.state.value);\r\n      const dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\", month: \"short\", day: \"2-digit\" });\r\n      const [{ value: month }, , { value: day }, , { value: year }] = dateTimeFormat.formatToParts(date);\r\n      updated[this.props.column.key] = `${day}-${month}-${year}`;\r\n      return updated;\r\n  \r\n    }\r\n  \r\n    onValueChanged(ev) {\r\n      this.setState({ value: ev.target.value });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <input\r\n            type=\"date\"\r\n            ref={(ref) => {\r\n              this.input = ref;\r\n            }}\r\n            value={this.state.value}\r\n            onChange={this.onValueChanged}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }","export const SEARCH_NOT_FOUNT_ERROR = \"No Records found!\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { SEARCH_NOT_FOUNT_ERROR } from \"./ErrorConstants\";\r\n\r\nconst ErrorMessage = (props) => {\r\n\r\n  const [status, setStatus] = useState(props.status);\r\n  useEffect(\r\n    () => {\r\n      setStatus(props.status)\r\n    }\r\n    , [props.status]);\r\n  if (status === \"invalid\") {\r\n    return (\r\n      <div id=\"errorMsg\">\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {SEARCH_NOT_FOUNT_ERROR}\r\n        </div>\r\n        <div className=\"notification-close\" >\r\n          <FontAwesomeIcon icon={faTimes}\r\n            onClick={(e) => {\r\n              props.closeWarningStatus();\r\n              props.clearSearchValue();\r\n            }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else return <div></div>;\r\n};\r\nexport default ErrorMessage;\r\n","export const ItemTypes = {\r\n    COLUMN: \"column\"\r\n};\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst style = {\r\n\tcursor: \"move\",\r\n};\r\n\r\nconst ColumnItem = ({ id, text, moveColumn, findColumn }) => {\r\n\tconst originalIndex = findColumn(id).index;\r\n\r\n\tconst [{ isDragging }, drag] = useDrag({\r\n\t\titem: { type: ItemTypes.COLUMN, id, originalIndex },\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: monitor.isDragging(),\r\n\t\t}),\r\n\t\tend: (dropResult, monitor) => {\r\n\t\t\tconst { id: droppedId, originalIndex } = monitor.getItem();\r\n\t\t\tconst didDrop = monitor.didDrop();\r\n\t\t\tif (!didDrop) {\r\n\t\t\t\tmoveColumn(droppedId, originalIndex);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tconst [, drop] = useDrop({\r\n\t\taccept: ItemTypes.COLUMN,\r\n\t\tcanDrop: () => false,\r\n\t\thover({ id: draggedId }) {\r\n\t\t\tif (draggedId !== id) {\r\n\t\t\t\tconst { index: overIndex } = findColumn(id);\r\n\t\t\t\tmoveColumn(draggedId, overIndex);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tconst opacity = isDragging ? 0.1 : 1;\r\n\r\n\treturn (\r\n\t\t<div ref={(node) => drag(drop(node))} style={{ ...style, opacity }}>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ColumnItem;\r\n","import React, { useState } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport update from \"immutability-helper\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport ColumnItem from \"./columnItem\";\r\n\r\nconst ColumnsList = (props) => {\r\n\tconst [columns, setColumns] = useState([...props.columnsArray]);\r\n\r\n\tconst moveColumn = (id, atIndex) => {\r\n\r\n\t\tconst { column, index } = findColumn(id);\r\n\t\tsetColumns(\r\n\t\t\tupdate(columns, {\r\n\t\t\t\t$splice: [\r\n\t\t\t\t\t[index, 1],\r\n\t\t\t\t\t[atIndex, 0, column],\r\n\t\t\t\t],\r\n\t\t\t})\r\n\t\t);\r\n\t\tlet values = [];\r\n\t\tlet temp = [];\r\n\t\ttemp = update(columns, {\r\n\t\t\t$splice: [\r\n\t\t\t\t[index, 1],\r\n\t\t\t\t[atIndex, 0, column],\r\n\t\t\t],\r\n\t\t})\r\n\t\ttemp.forEach((item) => {\r\n\t\t\tvalues.push(item.id)\r\n\t\t})\r\n\t\t//console.log(values)\r\n\t\tprops.handleReorderList(values);\r\n\t};\r\n\r\n\tconst findColumn = (id) => {\r\n\t\tconst column = columns.filter((c) => `${c.id}` === id)[0];\r\n\t\treturn {\r\n\t\t\tcolumn,\r\n\t\t\tindex: columns.indexOf(column),\r\n\t\t};\r\n\t};\r\n\r\n\tconst [, drop] = useDrop({ accept: ItemTypes.COLUMN });\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetColumns(props.columnsArray);\r\n\t}, [props.columnsArray]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div ref={drop} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t<ColumnItem\r\n\t\t\t\t\t\tkey={column.id}\r\n\t\t\t\t\t\tid={`${column.id}`}\r\n\t\t\t\t\t\ttext={column.text}\r\n\t\t\t\t\t\tmoveColumn={moveColumn}\r\n\t\t\t\t\t\tfindColumn={findColumn}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default ColumnsList;\r\n","import React from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { TouchBackend } from \"react-dnd-touch-backend\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faAlignJustify } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ColumnsList from \"./columnsList\";\r\n\r\nclass ColumnReordering extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnReorderEntityList: this.props.headerKeys,\r\n      columnSelectList: this.props.columns.map((item) => item.name),\r\n      leftPinnedColumList: this.props.existingPinnedHeadersList,\r\n      isAllSelected: true,\r\n      maxLeftPinnedColumn: this.props.maxLeftPinnedColumn,\r\n    };\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.closeColumnReOrdering();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to reset the coloumn list onClick of Reset button\r\n   */\r\n  resetColumnReorderList = () => {\r\n    this.setState({\r\n      columnReorderEntityList: this.props.columns.map((item) => item.name),\r\n      leftPinnedColumList: [],\r\n      isAllSelected: true,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Method to Select all options in the coloumn list onClick of Select All button\r\n   */\r\n  selectAllToColumnReOrderList = () => {\r\n    this.resetColumnReorderList();\r\n    var existingColumnReorderEntityList = this.state.columnReorderEntityList;\r\n    var isExistingAllSelect = this.state.isAllSelected;\r\n    if (!isExistingAllSelect) {\r\n      existingColumnReorderEntityList = this.props.columns.map(\r\n        (item) => item.name\r\n      );\r\n      isExistingAllSelect = true;\r\n    } else {\r\n      existingColumnReorderEntityList = [];\r\n      isExistingAllSelect = false;\r\n    }\r\n    this.setState({\r\n      columnReorderEntityList: existingColumnReorderEntityList,\r\n      isAllSelected: isExistingAllSelect,\r\n      leftPinnedColumList: [],\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Method To add a column to columnReorderEntityList when selected.\r\n   * @param {String} typeToBeAdded\r\n   */\r\n  addToColumnReorderEntityList = (typeToBeAdded) => {\r\n    var existingColumnReorderEntityList = this.state.columnReorderEntityList;\r\n    var existingLeftPinnedList = this.state.leftPinnedColumList;\r\n    if (!existingColumnReorderEntityList.includes(typeToBeAdded)) {\r\n      var indexOfInsertion = this.state.columnSelectList.findIndex(\r\n        (item) => item === typeToBeAdded\r\n      );\r\n      while (indexOfInsertion > 0) {\r\n        if (\r\n          existingColumnReorderEntityList.includes(\r\n            this.state.columnSelectList[indexOfInsertion - 1]\r\n          )\r\n        ) {\r\n          if (\r\n            !existingLeftPinnedList.includes(\r\n              this.state.columnSelectList[indexOfInsertion - 1]\r\n            )\r\n          ) {\r\n            indexOfInsertion = existingColumnReorderEntityList.findIndex(\r\n              (item) =>\r\n                item === this.state.columnSelectList[indexOfInsertion - 1]\r\n            );\r\n            indexOfInsertion = indexOfInsertion + 1;\r\n            break;\r\n          } else {\r\n            indexOfInsertion = indexOfInsertion - 1;\r\n          }\r\n        } else {\r\n          indexOfInsertion = indexOfInsertion - 1;\r\n        }\r\n      }\r\n      existingColumnReorderEntityList.splice(\r\n        indexOfInsertion,\r\n        0,\r\n        typeToBeAdded\r\n      );\r\n    } else {\r\n      existingColumnReorderEntityList = existingColumnReorderEntityList.filter(\r\n        (item) => {\r\n          if (item !== typeToBeAdded) return item;\r\n        }\r\n      );\r\n      if (existingLeftPinnedList.includes(typeToBeAdded)) {\r\n        existingLeftPinnedList = existingLeftPinnedList.filter(\r\n          (item) => item !== typeToBeAdded\r\n        );\r\n      }\r\n    }\r\n    this.setState({\r\n      columnReorderEntityList: existingColumnReorderEntityList,\r\n      isAllSelected: false,\r\n      leftPinnedColumList: existingLeftPinnedList,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Method to handle the like-search on key stroke.\r\n   * @param {Event} e\r\n   */\r\n  filterColumnReorderList = (e) => {\r\n    var searchKey = String(e.target.value).toLowerCase();\r\n    var existingList = this.props.columns.map((item) => item.name);\r\n    let filtererdColumnReorderList = [];\r\n    if (searchKey.length > 0) {\r\n      filtererdColumnReorderList = existingList.filter((item) => {\r\n        return item.toLowerCase().includes(searchKey);\r\n      });\r\n    } else {\r\n      filtererdColumnReorderList = this.props.columns.map((item) => item.name);\r\n    }\r\n    this.setState({\r\n      columnSelectList: filtererdColumnReorderList,\r\n    });\r\n  };\r\n\r\n  createColumnsArrayFromProps = (colsList) => {\r\n    return colsList.map((item) => {\r\n      return {\r\n        id: item,\r\n        text: (\r\n          <div className=\"column__reorder\" key={item}>\r\n            <div className=\"\">\r\n              <FontAwesomeIcon icon={faAlignJustify}></FontAwesomeIcon>\r\n            </div>\r\n            <div className=\"column__reorder__name\">{item}</div>\r\n            <div className=\"column__wrap\">\r\n              <div className=\"column__checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={this.state.leftPinnedColumList.includes(item)}\r\n                  disabled={\r\n                    this.state.maxLeftPinnedColumn -\r\n                      this.state.leftPinnedColumList.length <=\r\n                    0\r\n                      ? this.state.leftPinnedColumList.includes(item)\r\n                        ? false\r\n                        : true\r\n                      : false\r\n                  }\r\n                  onChange={() => this.reArrangeLeftPinnedColumn(item)}\r\n                ></input>\r\n              </div>\r\n              <div className=\"column__txt\">Pin Left</div>\r\n            </div>\r\n          </div>\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Method to handle the position of columns Names when left pinned in coloumn selector view.\r\n   * @param {String} columHeaderName\r\n   */\r\n  reArrangeLeftPinnedColumn = (columHeaderName) => {\r\n    var existingLeftPinnedList = this.state.leftPinnedColumList;\r\n    var existingColumnReorderEntityList = this.state.columnReorderEntityList;\r\n    if (!existingLeftPinnedList.includes(columHeaderName)) {\r\n      existingLeftPinnedList.unshift(columHeaderName);\r\n    } else {\r\n      existingLeftPinnedList = existingLeftPinnedList.filter(\r\n        (item) => item !== columHeaderName\r\n      );\r\n    }\r\n    this.setState({\r\n      leftPinnedColumList: existingLeftPinnedList,\r\n    });\r\n\r\n    existingLeftPinnedList.map((item) => {\r\n      existingColumnReorderEntityList = existingColumnReorderEntityList.filter(\r\n        (subItem) => subItem !== item\r\n      );\r\n      existingColumnReorderEntityList.unshift(item);\r\n    });\r\n    this.setState({\r\n      columnReorderEntityList: existingColumnReorderEntityList,\r\n    });\r\n  };\r\n  handleReorderList = (reordered) => {\r\n    this.props.handleheaderNameList(reordered);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"columns--grid\" ref={this.setWrapperRef}>\r\n        <div className=\"column__grid\">\r\n          <div className=\"column__chooser\">\r\n            <div className=\"column__header\">\r\n              <div className=\"\">\r\n                <strong>Column Chooser</strong>\r\n              </div>\r\n            </div>\r\n            <div className=\"column__body\">\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search column\"\r\n                  className=\"custom__ctrl\"\r\n                  onChange={this.filterColumnReorderList}\r\n                ></input>\r\n              </div>\r\n              <div className=\"column__wrap column__headertxt\">\r\n                <div className=\"column__checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={() => this.selectAllToColumnReOrderList()}\r\n                    checked={\r\n                      this.state.columnReorderEntityList.length ===\r\n                      this.props.columns.length\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"column__txt\">Select all</div>\r\n              </div>\r\n              {this.state.columnSelectList.map((item) => {\r\n                return (\r\n                  <div className=\"column__wrap\" key={item}>\r\n                    <div className=\"column__checkbox\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.columnReorderEntityList.includes(\r\n                          item\r\n                        )}\r\n                        onChange={() => this.addToColumnReorderEntityList(item)}\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">{item}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"column__settings\">\r\n            <div className=\"column__header\">\r\n              <div className=\"column__headerTxt\">\r\n                <strong>Column Setting</strong>\r\n              </div>\r\n              <div className=\"column__close\">\r\n                <FontAwesomeIcon\r\n                  className=\"icon-close\"\r\n                  icon={faTimes}\r\n                  onClick={() => this.props.closeColumnReOrdering()}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <div className=\"column__header\">\r\n              <div className=\"column__headerTxt\">\r\n                <strong>\r\n                  &nbsp; &nbsp; Selected Column Count :{\" \"}\r\n                  {this.state.columnReorderEntityList.length}\r\n                </strong>\r\n              </div>\r\n              <div className=\"column__headerTxt\">\r\n                {this.state.maxLeftPinnedColumn -\r\n                  this.state.leftPinnedColumList.length >\r\n                0 ? (\r\n                  <strong>\r\n                    &nbsp; &nbsp; Left Pinned Column Count Remaining :{\" \"}\r\n                    {this.state.maxLeftPinnedColumn -\r\n                      this.state.leftPinnedColumList.length}\r\n                  </strong>\r\n                ) : (\r\n                  <strong style={{ color: \"red\" }}>\r\n                    &nbsp; &nbsp; Maximum Count Of Left Pin Columns REACHED\r\n                  </strong>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"column__body\">\r\n              <DndProvider\r\n                backend={TouchBackend}\r\n                options={{ enableMouseEvents: true }}\r\n              >\r\n                <ColumnsList\r\n                  columnsArray={this.createColumnsArrayFromProps(\r\n                    this.state.columnReorderEntityList\r\n                  )}\r\n                  handleReorderList={this.handleReorderList}\r\n                />\r\n              </DndProvider>\r\n            </div>\r\n            <div className=\"column__footer\">\r\n              <div className=\"column__btns\">\r\n                <button\r\n                  className=\"btns\"\r\n                  onClick={() => this.resetColumnReorderList()}\r\n                >\r\n                  Reset\r\n                </button>\r\n                <button\r\n                  className=\"btns\"\r\n                  onClick={() => this.props.closeColumnReOrdering()}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btns btns__save\"\r\n                  onClick={() =>\r\n                    this.props.updateTableAsPerRowChooser(\r\n                      this.state.columnReorderEntityList,\r\n                      this.state.leftPinnedColumList\r\n                    )\r\n                  }\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColumnReordering;\r\n","export const ItemTypes = {\r\n  CARD: \"sort\",\r\n};\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst style = {\r\n  cursor: \"move\",\r\n};\r\n\r\nconst Card = ({ id, text, moveCard, findCard }) => {\r\n  const originalIndex = findCard(id).index;\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ItemTypes.CARD, id, originalIndex },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n    end: (dropResult, monitor) => {\r\n      const { id: droppedId, originalIndex } = monitor.getItem();\r\n      const didDrop = monitor.didDrop();\r\n      if (!didDrop) {\r\n        moveCard(droppedId, originalIndex);\r\n      }\r\n    },\r\n  });\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    canDrop: () => false,\r\n    hover({ id: draggedId }) {\r\n      if (draggedId !== id) {\r\n        const { index: overIndex } = findCard(id);\r\n        moveCard(draggedId, overIndex);\r\n      }\r\n    },\r\n  });\r\n\r\n  const opacity = isDragging ? 0.5 : 1;\r\n\r\n  return (\r\n    <div ref={(node) => drag(drop(node))} style={{ ...style, opacity }}>\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport Card from \"./SortItem\";\r\nimport update from \"immutability-helper\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst SortingList = (props) => {\r\n  const [cards, setCards] = useState([...props.sortsArray]);\r\n\r\n  const moveCard = (id, atIndex) => {\r\n    const { card, index } = findCard(id);\r\n    setCards(\r\n      update(cards, {\r\n        $splice: [\r\n          [index, 1],\r\n          [atIndex, 0, card],\r\n        ],\r\n      })\r\n    );\r\n  };\r\n\r\n  const findCard = (id) => {\r\n    const card = cards.filter((c) => `${c.id}` === id)[0];\r\n    return {\r\n      card,\r\n      index: cards.indexOf(card),\r\n    };\r\n  };\r\n\r\n  const [, drop] = useDrop({ accept: ItemTypes.CARD });\r\n\r\n  React.useEffect(() => {\r\n    setCards(props.sortsArray);\r\n  }, [props.sortsArray]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div ref={drop} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {cards.map((card) => (\r\n          <Card\r\n            key={card.id}\r\n            id={`${card.id}`}\r\n            text={card.text}\r\n            moveCard={moveCard}\r\n            findCard={findCard}\r\n          />\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SortingList;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faAlignJustify,\r\n  faTrash,\r\n  faPlus,\r\n  faCopy,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { TouchBackend } from \"react-dnd-touch-backend\";\r\nimport SortingList from \"./SortingList\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      rowList: [true],\r\n      rows: [],\r\n      sortingOrderList: [\r\n        {\r\n          sortBy: \"Flight #\",\r\n          order: \"Ascending\",\r\n          sortOn: \"Value\",\r\n        },\r\n      ],\r\n      errorMessage: false,\r\n    };\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.closeSorting();\r\n    }\r\n  }\r\n\r\n  add = () => {\r\n    let rowList = [...this.state.rowList];\r\n    rowList.push(true);\r\n    var existingSortingOrderList = this.state.sortingOrderList;\r\n    existingSortingOrderList.push({\r\n      sortBy: \"Flight #\",\r\n      order: \"Ascending\",\r\n      sortOn: \"Value\",\r\n    });\r\n    this.setState({\r\n      rowList,\r\n      sortingOrderList: existingSortingOrderList,\r\n    });\r\n  };\r\n\r\n  copy = (i) => {\r\n    let rowList = [...this.state.sortingOrderList];\r\n    rowList.push(JSON.parse(JSON.stringify(rowList[i])));\r\n    this.setState({ sortingOrderList: rowList });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({ sortingOrderList: [] });\r\n  };\r\n\r\n  remove = (i) => {\r\n    let sortingOrderList = [...this.state.sortingOrderList];\r\n    sortingOrderList.splice(i, 1);\r\n    this.setState({ sortingOrderList });\r\n  };\r\n\r\n  createColumnsArrayFromProps = (rowsValue) => {\r\n    return rowsValue.map((row, index) => {\r\n      return {\r\n        id: index,\r\n        text: (\r\n          <div className=\"sort__bodyContent\" key={index}>\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>&nbsp;</div>\r\n              </div>\r\n\r\n              <div className=\"sort__icon\">\r\n                <FontAwesomeIcon icon={faAlignJustify}></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>Sort by</div>\r\n              </div>\r\n\r\n              <div className=\"sort__file\">\r\n                <select\r\n                  className=\"custom__ctrl\"\r\n                  name={\"sortBy\"}\r\n                  onChange={(e) =>\r\n                    this.captureSortingFeildValues(e, index, \"sortBy\")\r\n                  }\r\n                  value={row.sortBy}\r\n                >\r\n                  {this.props.columnFieldValue.map((item, index) => (\r\n                    <option key={index}>{item}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>Sort on</div>\r\n              </div>\r\n\r\n              <div className=\"sort__file\">\r\n                <select\r\n                  className=\"custom__ctrl\"\r\n                  name={\"sortOn\"}\r\n                  onChange={(e) =>\r\n                    this.captureSortingFeildValues(e, index, \"sortOn\")\r\n                  }\r\n                  value={row.sortOn}\r\n                >\r\n                  <option>Value</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>Order</div>\r\n              </div>\r\n\r\n              <div className=\"sort__file\">\r\n                <select\r\n                  className=\"custom__ctrl\"\r\n                  name={\"order\"}\r\n                  onChange={(e) =>\r\n                    this.captureSortingFeildValues(e, index, \"order\")\r\n                  }\r\n                  value={row.order}\r\n                >\r\n                  <option>Ascending</option>\r\n                  <option>Descending</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>&nbsp;</div>\r\n              </div>\r\n\r\n              <div className=\"sort__icon\">\r\n                <FontAwesomeIcon\r\n                  icon={faCopy}\r\n                  title=\"Copy\"\r\n                  onClick={() => this.copy(index)}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>&nbsp;</div>\r\n              </div>\r\n\r\n              <div className=\"sort__icon\">\r\n                <FontAwesomeIcon\r\n                  icon={faTrash}\r\n                  title=\"Delete\"\r\n                  onClick={() => this.remove(index)}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  captureSortingFeildValues = (event, index, sortingKey) => {\r\n    var sortingObj = {\r\n      //``\r\n    };\r\n\r\n    var existingSortingOrderList = this.state.sortingOrderList;\r\n\r\n    if (sortingKey === \"sortBy\") {\r\n      existingSortingOrderList[index][\"sortBy\"] = event.target.value;\r\n    }\r\n    if (sortingKey === \"order\") {\r\n      existingSortingOrderList[index][\"order\"] = event.target.value;\r\n    }\r\n    if (\r\n      existingSortingOrderList[index][\"sortOn\"] === \"\" ||\r\n      existingSortingOrderList[index][\"sortOn\"] === undefined\r\n    ) {\r\n      existingSortingOrderList[index][\"sortOn\"] = \"Value\";\r\n    }\r\n    this.setState({\r\n      sortingOrderList: existingSortingOrderList,\r\n    });\r\n  };\r\n\r\n  updateTableAsPerSortCondition = () => {\r\n    const unique = new Set();\r\n    const showError = this.state.sortingOrderList.some(\r\n      (element) => unique.size === unique.add(element.sortBy).size\r\n    );\r\n    showError\r\n      ? this.setState({\r\n          errorMessage: true,\r\n        })\r\n      : this.setState({\r\n          errorMessage: false,\r\n        });\r\n    console.log(\"FILTER SORT LIST OF OBJECTS \", this.state.sortingOrderList);\r\n    this.props.setTableAsPerSortingParams(this.state.sortingOrderList);\r\n  };\r\n\r\n  render() {\r\n    let { rowList } = this.state.rowList;\r\n    return (\r\n      <div className=\"sorts--grid\" ref={this.setWrapperRef}>\r\n        <div className=\"sort__grid\">\r\n          <div className=\"sort__settings\">\r\n            <div className=\"sort__header\">\r\n              <div className=\"sort__headerTxt\">\r\n                <strong>Sort </strong>\r\n              </div>\r\n\r\n              <div className=\"sort__close\">\r\n                <FontAwesomeIcon\r\n                  className=\"icon-close\"\r\n                  icon={faTimes}\r\n                  onClick={() => this.props.closeSorting()}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sort__body\">\r\n              <DndProvider\r\n                backend={TouchBackend}\r\n                options={{ enableMouseEvents: true }}\r\n              >\r\n                <SortingList\r\n                  sortsArray={this.createColumnsArrayFromProps(\r\n                    this.state.sortingOrderList\r\n                  )}\r\n                />\r\n              </DndProvider>\r\n              <div className=\"sort-warning\">\r\n                {this.state.errorMessage ? (\r\n                  <span\r\n                    style={{ display: this.state.clickTag }}\r\n                    className=\"alert alert-danger\"\r\n                  >\r\n                    Sort types opted are same, Please choose different one.\r\n                  </span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__new\">\r\n              <div className=\"sort__section\">\r\n                <FontAwesomeIcon\r\n                  icon={faPlus}\r\n                  className=\"sort__icon\"\r\n                ></FontAwesomeIcon>\r\n\r\n                <div className=\"sort__txt\" onClick={() => this.add()}>\r\n                  New Sort\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__footer\">\r\n              <div className=\"sort__btns\">\r\n                <button className=\"btns\" onClick={this.clearAll}>\r\n                  Clear All\r\n                </button>\r\n\r\n                <button\r\n                  className=\"btns btns__save\"\r\n                  onClick={() => this.updateTableAsPerSortCondition()}\r\n                >\r\n                  Ok\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faFilePdf,\r\n  faFileExcel,\r\n  faFileCsv,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nlet downLaodFileType = [];\r\nclass ExportData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnValueList: this.props.columnsList,\r\n      columnEntityList: [],\r\n      isAllSelected: false,\r\n      downLaodFileType: [],\r\n      filteredRow: [],\r\n      warning: \"\",\r\n      clickTag: \"none\",\r\n    };\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    this.selectDownLoadType = this.selectDownLoadType.bind(this);\r\n    this.exportValidation = this.exportValidation.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.closeExport();\r\n    }\r\n  }\r\n\r\n  resetColumnExportList = () => {\r\n    this.setState({\r\n      columnEntityList: [],\r\n      isAllSelected: false,\r\n    });\r\n  };\r\n\r\n  selectAllToColumnList = () => {\r\n    this.resetColumnExportList();\r\n    this.setState({\r\n      columnEntityList: !this.state.isAllSelected ? this.props.columnsList : [],\r\n      isAllSelected: !this.state.isAllSelected,\r\n    });\r\n  };\r\n\r\n  addToColumnEntityList = (typeToBeAdded) => {\r\n    var existingColumnEntityList = this.state.columnEntityList;\r\n    if (!existingColumnEntityList.includes(typeToBeAdded)) {\r\n      existingColumnEntityList.push(typeToBeAdded);\r\n    } else {\r\n      existingColumnEntityList = existingColumnEntityList.filter((item) => {\r\n        return item !== typeToBeAdded;\r\n      });\r\n    }\r\n    this.setState({\r\n      columnEntityList: existingColumnEntityList,\r\n      isAllSelected: false,\r\n    });\r\n  };\r\n\r\n  selectDownLoadType = (event) => {\r\n    if (\r\n      event.target.checked &&\r\n      !this.state.downLaodFileType.includes(event.target.value)\r\n    ) {\r\n      downLaodFileType.push(event.target.value);\r\n      this.setState({ downLaodFileType });\r\n    } else {\r\n      downLaodFileType.map(function (value, index) {\r\n        if (value === event.target.value) {\r\n          downLaodFileType = downLaodFileType.splice(index, value);\r\n        }\r\n      });\r\n      this.setState({ downLaodFileType });\r\n    }\r\n  };\r\n\r\n  exportRowData = () => {\r\n    const columnVlaueList = this.state.columnEntityList;\r\n    if (columnVlaueList.length > 0 && this.state.downLaodFileType.length > 0) {\r\n      this.props.rows.forEach((row) => {\r\n        const keys = Object.getOwnPropertyNames(row);\r\n        var filteredColumnVal = {};\r\n        keys.forEach(function (key) {\r\n          columnVlaueList.forEach((columnName) => {\r\n            if (columnName.key === key) filteredColumnVal[key] = row[key];\r\n          });\r\n        });\r\n        this.state.filteredRow.push(filteredColumnVal);\r\n      });\r\n\r\n      this.state.downLaodFileType.map((item) => {\r\n        if (item === \"pdf\") this.downloadPDF();\r\n        else if (item === \"excel\") this.downloadXLSFile();\r\n        else this.downloadCSVFile();\r\n      });\r\n    }\r\n  };\r\n\r\n  downloadPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"landscape\"; // portrait or landscape\r\n\r\n    const marginLeft = 300;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"iCargo Report\";\r\n    const headers = [\r\n      this.state.columnEntityList.map((column) => {\r\n        return column.name;\r\n      }),\r\n    ];\r\n    var dataValues = [];\r\n    this.props.rows.forEach((row) => {\r\n      const keys = Object.keys(row);\r\n      var filteredColumnVal = [];\r\n      this.state.columnEntityList.forEach((columnName) => {\r\n        keys.forEach((key) => {\r\n          if (columnName.key === key) filteredColumnVal.push(row[key]);\r\n        });\r\n      });\r\n      dataValues.push(filteredColumnVal);\r\n    });\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: dataValues,\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"report.pdf\");\r\n  };\r\n\r\n  downloadCSVFile = () => {\r\n    const fileType =\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".csv\";\r\n    const fileName = \"CSVDownload\";\r\n    const ws = XLSX.utils.json_to_sheet(this.state.filteredRow);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"csv\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  downloadXLSFile = () => {\r\n    const fileType =\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".xlsx\";\r\n    const fileName = \"XLSXDownload\";\r\n    const ws = XLSX.utils.json_to_sheet(this.state.filteredRow);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  columnSearchLogic = (e) => {\r\n    const searchKey = String(e.target.value).toLowerCase();\r\n    let filteredRows = this.props.columnsList.filter((item) => {\r\n      return item.name.toLowerCase().includes(searchKey);\r\n    });\r\n    if (!filteredRows.length) {\r\n      this.setState({ columnValueList: this.props.columnsList });\r\n    } else {\r\n      this.setState({ columnValueList: filteredRows });\r\n    }\r\n  };\r\n\r\n  exportValidation = () => {\r\n    let columnLength = this.state.columnEntityList.length;\r\n    let fileLength = this.state.downLaodFileType.length;\r\n    if (columnLength > 0 && fileLength > 0) {\r\n      this.exportRowData();\r\n      this.setState({ clickTag: \"none\" });\r\n    } else if (columnLength === 0) {\r\n      this.setState({ warning: \"Column\" });\r\n      this.setState({ clickTag: \"\" });\r\n    } else if (fileLength === 0) {\r\n      this.setState({ warning: \"File Type\" });\r\n      this.setState({ clickTag: \"\" });\r\n    }\r\n    if (columnLength === 0 && fileLength === 0) {\r\n      this.setState({ warning: \"File Type & Column\" });\r\n      this.setState({ clickTag: \"\" });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"exports--grid\" ref={this.setWrapperRef}>\r\n        <div className=\"export__grid\">\r\n          <div className=\"export__chooser\">\r\n            <div className=\"export__header\">\r\n              <div className=\"\">\r\n                <strong>Export Data</strong>\r\n              </div>\r\n            </div>\r\n            <div className=\"export__body\">\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search export\"\r\n                  className=\"custom__ctrl\"\r\n                  onChange={this.columnSearchLogic}\r\n                ></input>\r\n              </div>\r\n              <div className=\"export__wrap export__headertxt\">\r\n                <div className=\"export__checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={() => this.selectAllToColumnList()}\r\n                    checked={this.state.isAllSelected}\r\n                  />\r\n                </div>\r\n                <div className=\"export__txt\">Select All</div>\r\n              </div>\r\n              {this.state.columnValueList.length > 0\r\n                ? this.state.columnValueList.map((column, index) => {\r\n                    return (\r\n                      <div className=\"export__wrap\" key={column.key}>\r\n                        <div className=\"export__checkbox\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={this.state.columnEntityList.includes(\r\n                              column\r\n                            )}\r\n                            onChange={() => this.addToColumnEntityList(column)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"export__txt\">{column.name}</div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                : \"\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"export__settings\">\r\n            <div className=\"export__header\">\r\n              <div className=\"export__headerTxt\"></div>\r\n              <div className=\"export__close\">\r\n                <FontAwesomeIcon\r\n                  icon={faTimes}\r\n                  className=\"icon-close\"\r\n                  onClick={this.props.closeExport}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <div className=\"export__as\">Export as</div>\r\n            <div className=\"export__body\">\r\n              <div className=\"export__reorder\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"pdf\"\r\n                    value=\"pdf\"\r\n                    onChange={this.selectDownLoadType}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"export__file\">\r\n                  <FontAwesomeIcon\r\n                    icon={faFilePdf}\r\n                    className=\"temp\"\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"export__reorder\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"excel\"\r\n                    value=\"excel\"\r\n                    onChange={this.selectDownLoadType}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"export__file\">\r\n                  <FontAwesomeIcon\r\n                    icon={faFileExcel}\r\n                    className=\"temp\"\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"export__reorder\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"csv\"\r\n                    value=\"csv\"\r\n                    onChange={this.selectDownLoadType}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"export__file\">\r\n                  <FontAwesomeIcon\r\n                    icon={faFileCsv}\r\n                    className=\"temp\"\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"exportWarning\">\r\n                <span\r\n                  style={{ display: this.state.clickTag }}\r\n                  className=\"alert alert-danger\"\r\n                >\r\n                  You haven't selected <strong>{this.state.warning}</strong>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"export__footer\">\r\n              <div className=\"export__btns\">\r\n                <button\r\n                  className=\"btns\"\r\n                  onClick={() => this.props.closeExport()}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btns btns__save\"\r\n                  onClick={(e) => {\r\n                    this.exportValidation();\r\n                  }}\r\n                >\r\n                  Export\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ExportData;\r\n","import React, { Component } from \"react\";\r\nimport ExtDataGrid from \"./common/extDataGrid\";\r\nimport { Toolbar, Data, Filters, Editors } from \"react-data-grid-addons\";\r\nimport { range } from \"lodash\";\r\nimport { applyFormula } from \"./utilities/utils\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport DatePicker from \"./functions/DatePicker.js\";\r\n//import {onRowsSelected} from \"../components/functions/OnRowsSelected.js\"\r\nimport {\r\n  faSortAmountDown,\r\n  faColumns,\r\n  // faSyncAlt,\r\n  faShareAlt,\r\n  // faAlignLeft,\r\n  // faFilter,\r\n  faSortDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ErrorMessage from \"./common/ErrorMessage\";\r\nimport ColumnReordering from \"./overlays/column_chooser/Chooser\";\r\nimport Sorting from \"./overlays/sorting/Sorting\";\r\nimport ExportData from \"./overlays/export_data/ExportData\";\r\n\r\nconst {\r\n  DraggableHeader: { DraggableContainer },\r\n} = require(\"react-data-grid-addons\");\r\n\r\nconst { DropDownEditor } = Editors;\r\n\r\nconst defaultParsePaste = (str) => str.split(/\\r\\n|\\n|\\r/).map((row) => row.split(\"\\t\"));\r\nconst selectors = Data.Selectors;\r\nlet swapList = [];\r\nconst { AutoCompleteFilter, NumericFilter } = Filters;\r\nclass spreadsheet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const airportCodes = [];\r\n    this.props.airportCodes.forEach((item) => {\r\n      airportCodes.push({ id: item, value: item });\r\n    });\r\n    this.state = {\r\n      warningStatus: \"\",\r\n      height: 680,\r\n      displayNoRows: \"none\",\r\n      searchIconDisplay: \"\",\r\n      searchValue: \"\",\r\n      filter: {},\r\n      rows: this.props.rows,\r\n      selectedIndexes: [],\r\n      junk: {},\r\n      topLeft: {},\r\n      columnReorderingComponent: null,\r\n      exportComponent: null,\r\n      filteringRows: this.props.rows,\r\n      tempRows: this.props.rows,\r\n      sortingPanelComponent: null,\r\n      count: this.props.rows.length,\r\n      columns: this.props.columns.map((item) => {\r\n        if (item.editor === \"DatePicker\") {\r\n          item.editor = DatePicker;\r\n        } else if (item.editor === \"DropDown\") {\r\n          item.editor = <DropDownEditor options={airportCodes} />;\r\n        } else if (item.editor === \"Text\") {\r\n          item.editor = \"text\";\r\n        } else {\r\n          item.editor = null;\r\n        }\r\n        if (item.filterType === \"numeric\") {\r\n          item.filterRenderer = NumericFilter;\r\n        }\r\n        else {\r\n          item.filterRenderer = AutoCompleteFilter;\r\n        }\r\n        return item;\r\n      }),\r\n    };\r\n    document.addEventListener(\"copy\", this.handleCopy);\r\n    document.addEventListener(\"paste\", this.handlePaste);\r\n    this.handleSearchValue = this.handleSearchValue.bind(this);\r\n    this.clearSearchValue = this.clearSearchValue.bind(this);\r\n    this.handleFilterChange = this.handleFilterChange.bind(this);\r\n\r\n    this.formulaAppliedCols = this.props.columns.filter((item) => {\r\n      return item.formulaApplicable;\r\n    });\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    //Fix for column re-order and pin left issue (functionality was working only after doing a window re-size)\r\n    const resizeEvent = document.createEvent(\"HTMLEvents\");\r\n    resizeEvent.initEvent(\"resize\", true, false);\r\n    window.dispatchEvent(resizeEvent);\r\n  }\r\n  updateRows = (startIdx, newRows) => {\r\n    this.setState((state) => {\r\n      const rows = state.rows.slice();\r\n      for (let i = 0; i < newRows.length; i++) {\r\n        if (startIdx + i < rows.length) {\r\n          rows[startIdx + i] = {\r\n            ...rows[startIdx + i],\r\n            ...newRows[i],\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        rows,\r\n      };\r\n    });\r\n  }\r\n\r\n  rowGetter = (i) => {\r\n    const { rows } = this.state;\r\n    return rows[i];\r\n  };\r\n\r\n  handleCopy = (e) => {\r\n    e.preventDefault();\r\n    const { topLeft, botRight } = this.state;\r\n    const text = range(topLeft.rowIdx, botRight.rowIdx + 1)\r\n      .map((rowIdx) =>\r\n        this.state.columns\r\n          .slice(topLeft.colIdx - 1, botRight.colIdx)\r\n          .map((col) => this.rowGetter(rowIdx)[col.key])\r\n          .join(\"\\t\")\r\n      )\r\n      .join(\"\\n\");\r\n    e.clipboardData.setData(\"text/plain\", text);\r\n  };\r\n\r\n  handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const { topLeft } = this.state;\r\n    const newRows = [];\r\n    const pasteData = defaultParsePaste(e.clipboardData.getData(\"text/plain\"));\r\n    pasteData.forEach((row) => {\r\n      const rowData = {};\r\n      // Merge the values from pasting and the keys from the columns\r\n      this.state.columns.slice(topLeft.colIdx - 1, topLeft.colIdx - 1 + row.length).forEach((col, j) => {\r\n        rowData[col.key] = row[j];\r\n      });\r\n      newRows.push(rowData);\r\n    });\r\n    this.updateRows(topLeft.rowIdx, newRows);\r\n  };\r\n\r\n  setSelection = (args) => {\r\n    this.setState({\r\n      topLeft: {\r\n        rowIdx: args.topLeft.rowIdx,\r\n        colIdx: args.topLeft.idx,\r\n      },\r\n      botRight: {\r\n        rowIdx: args.bottomRight.rowIdx,\r\n        colIdx: args.bottomRight.idx,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleWarningStatus = () => {\r\n    this.setState({ warningStatus: \"invalid\" })\r\n  }\r\n  closeWarningStatus = () => {\r\n    this.setState({ warningStatus: \"\" })\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setState({\r\n      rows: props.rows,\r\n    });\r\n    this.setState({\r\n      status: props.status,\r\n    });\r\n    this.setState({\r\n      textValue: props.textValue,\r\n    });\r\n    this.setState({ count: props.count });\r\n    this.setState({ warningStatus: props.status })\r\n  }\r\n\r\n  /**\r\n * Method To update the cell/cells with the edited values\r\n * @param {*} fromRow is the row from which this edit is performed\r\n * @param {*} toRow is the row upto which this edit is performed\r\n * @param {*} updated is the value of change\r\n * @param {*} action is type of edit action performed\r\n */\r\n  onGridRowsUpdated = ({ fromRow, toRow, updated, action }) => {\r\n    let columnName = \"\";\r\n    const filter = this.formulaAppliedCols.filter((item) => {\r\n      if (updated[item.key] !== null && updated[item.key] !== undefined) {\r\n        columnName = item.key;\r\n        return true;\r\n      } else return false;\r\n    });\r\n\r\n    if (filter.length > 0) {\r\n      updated = applyFormula(updated, columnName);\r\n    }\r\n\r\n    if (action !== \"COPY_PASTE\") {\r\n      this.setState((state) => {\r\n        const rows = state.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n          rows[i] = {\r\n            ...rows[i],\r\n            ...updated,\r\n          };\r\n        }\r\n\r\n        return {\r\n          rows,\r\n        };\r\n      });\r\n      this.setState((state) => {\r\n        const filteringRows = state.filteringRows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n          filteringRows[i] = {\r\n            ...filteringRows[i],\r\n            ...updated,\r\n          };\r\n        }\r\n\r\n        return {\r\n          filteringRows,\r\n        };\r\n      });\r\n      this.setState((state) => {\r\n        const tempRows = state.tempRows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n          tempRows[i] = {\r\n            ...tempRows[i],\r\n            ...updated,\r\n          };\r\n        }\r\n\r\n        return {\r\n          tempRows,\r\n        };\r\n      });\r\n    }\r\n    if (this.props.updateCellData) {\r\n      this.props.updateCellData(this.state.tempRows[fromRow], this.state.tempRows[toRow], updated, action);\r\n    }\r\n  };\r\n\t/**\r\n\t * Method To bulk/individual select of rows\r\n\t * @param {*} rows is the selected row\r\n\t */\r\n  onRowsSelected = (rows) => {\r\n    this.setState({\r\n      selectedIndexes: this.state.selectedIndexes.concat(rows.map((r) => r.rowIdx)),\r\n    });\r\n    if (this.props.selectBulkData) {\r\n      this.props.selectBulkData(rows);\r\n    }\r\n  };\r\n\t/**\r\n\t * Method To bulk/individual deselect of rows\r\n\t * @param {*} rows is the deselected row\r\n\t */\r\n  onRowsDeselected = (rows) => {\r\n    let rowIndexes = rows.map((r) => r.rowIdx);\r\n    this.setState({\r\n      selectedIndexes: this.state.selectedIndexes.filter((i) => rowIndexes.indexOf(i) === -1),\r\n    });\r\n  };\r\n\r\n\t/**\r\n\t * Method To filter the multiple columns\r\n\t * @param {*} value is the  incoming filtering event\r\n\t */\r\n  handleFilterChange = (value) => {\r\n    let junk = this.state.junk;\r\n    if (!(value.filterTerm == null) && !(value.filterTerm.length <= 0)) {\r\n      junk[value.column.key] = value;\r\n    } else {\r\n      delete junk[value.column.key];\r\n    }\r\n    this.setState({ junk });\r\n    const data = this.getrows(this.state.filteringRows, this.state.junk);\r\n    this.setState({\r\n      rows: data,\r\n      tempRows: data,\r\n      count: data.length,\r\n    });\r\n    if (data.length === 0) {\r\n      this.handleWarningStatus();\r\n    }\r\n    else {\r\n      this.closeWarningStatus();\r\n    }\r\n  };\r\n  getrows = (rows, filters) => {\r\n    if (Object.keys(filters).length <= 0) {\r\n      filters = {};\r\n    }\r\n    selectors.getRows({ rows: [], filters: {} });\r\n    return selectors.getRows({ rows: rows, filters: filters });\r\n  };\r\n\r\n  /**\r\n * Method To render the filter values for filtering rows\r\n * @param {*} rows is the row data to be considered for filtering\r\n * @param {*} columnId is the specific columnId for which the row datas are being considered\r\n */\r\n  getValidFilterValues(rows, columnId) {\r\n    return rows\r\n      .map((r) => r[columnId])\r\n      .filter((item, i, a) => {\r\n        return i === a.indexOf(item);\r\n      });\r\n  }\r\n  /**\r\n* Method To sort the rows for a particular column\r\n* @param {*} data is the row datas to be considered for sorting\r\n* @param {*} sortColumn is the specific column for which the row sort is being triggered\r\n* @param {*} sortDirection is the type of sort\r\n*/\r\n  sortRows = (data, sortColumn, sortDirection) => {\r\n    const comparer = (a, b) => {\r\n      if (sortDirection === \"ASC\") {\r\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\r\n      } else if (sortDirection === \"DESC\") {\r\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\r\n      }\r\n    };\r\n    this.setState({\r\n      rows: [...data].sort(comparer),\r\n    });\r\n    return sortDirection === \"NONE\" ? data : this.state.rows;\r\n  };\r\n  /**\r\n     * Method To swap the columns\r\n     * @param {*} source is source column\r\n     * @param {*} target is the target column \r\n     */\r\n  onHeaderDrop = (source, target) => {\r\n    const stateCopy = Object.assign({}, this.state);\r\n    const columnSourceIndex = this.state.columns.findIndex((i) => i.key === source);\r\n    const columnTargetIndex = this.state.columns.findIndex((i) => i.key === target);\r\n\r\n    stateCopy.columns.splice(columnTargetIndex, 0, stateCopy.columns.splice(columnSourceIndex, 1)[0]);\r\n\r\n    const emptyColumns = Object.assign({}, this.state, {\r\n      columns: [],\r\n    });\r\n    this.setState(emptyColumns);\r\n\r\n    const reorderedColumns = Object.assign({}, this.state, {\r\n      columns: stateCopy.columns,\r\n    });\r\n    this.setState(reorderedColumns);\r\n  }\r\n  /**\r\n    * Method To dynamically swap the column from column chooser\r\n    * @param {*} reordered is the swapped array of columns\r\n    */\r\n  handleheaderNameList = (reordered) => {\r\n    swapList = reordered;\r\n  }\r\n  updateTableAsPerRowChooser = (inComingColumnsHeaderList, pinnedColumnsList) => {\r\n    let existingColumnsHeaderList = this.props.columns;\r\n    existingColumnsHeaderList = existingColumnsHeaderList.filter((item) => {\r\n      return inComingColumnsHeaderList.includes(item.name);\r\n    });\r\n    let rePositionedArray = existingColumnsHeaderList;\r\n    let singleHeaderOneList;\r\n    if (pinnedColumnsList.length > 0) {\r\n      pinnedColumnsList\r\n        .slice(0)\r\n        .reverse()\r\n        .map((item, index) => {\r\n          singleHeaderOneList = existingColumnsHeaderList.filter((subItem) => item === subItem.name);\r\n          rePositionedArray = this.array_move(\r\n            existingColumnsHeaderList,\r\n            existingColumnsHeaderList.indexOf(singleHeaderOneList[0]),\r\n            index\r\n          );\r\n        });\r\n    }\r\n    if (swapList.length > 0) {\r\n      swapList\r\n        .map((item, index) => {\r\n          singleHeaderOneList = existingColumnsHeaderList.filter((subItem) => item === subItem.name);\r\n          rePositionedArray = this.array_move(\r\n            existingColumnsHeaderList,\r\n            existingColumnsHeaderList.indexOf(singleHeaderOneList[0]),\r\n            index\r\n          );\r\n        });\r\n    }\r\n\r\n    existingColumnsHeaderList = rePositionedArray;\r\n\t\t/**\r\n       making all the frozen attribute as false for all the columns and then \r\n       setting items of pinnedColumnsList as frozen = true\r\n       */\r\n    existingColumnsHeaderList.map((headerItem, index) => {\r\n      if (headerItem.frozen !== undefined && headerItem.frozen === true) {\r\n        existingColumnsHeaderList[index][\"frozen\"] = false;\r\n      }\r\n      if (pinnedColumnsList.includes(headerItem.name)) {\r\n        existingColumnsHeaderList[index][\"frozen\"] = true;\r\n      }\r\n    });\r\n\r\n    console.log(\"existingColumnsHeaderList \", existingColumnsHeaderList);\r\n\r\n    this.setState({\r\n      columns: existingColumnsHeaderList,\r\n    });\r\n\r\n    this.closeColumnReOrdering();\r\n    swapList=[];\r\n  };\r\n\r\n\t/**\r\n\t * Method To re-position a particular object in an Array from old_index to new_index\r\n\t * @param {*} arr inComing array\r\n\t * @param {*} old_index initial index\r\n\t * @param {*} new_index final index\r\n\t */\r\n  array_move = (arr, old_index, new_index) => {\r\n    if (new_index >= arr.length) {\r\n      var k = new_index - arr.length + 1;\r\n      while (k--) {\r\n        arr.push(undefined);\r\n      }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    return arr;\r\n  };\r\n\r\n\t/**\r\n\t * Method to render the column Selector Pannel\r\n\t */\r\n  columnReorderingPannel = () => {\r\n    var headerNameList = [];\r\n    var existingPinnedHeadersList = [];\r\n    this.state.columns\r\n      .filter((item) => item.frozen !== undefined && item.frozen === true)\r\n      .map((item) => existingPinnedHeadersList.push(item.name));\r\n    this.state.columns.map((item) => headerNameList.push(item.name));\r\n    this.setState({\r\n      columnReorderingComponent: (\r\n        <ColumnReordering\r\n          maxLeftPinnedColumn={this.props.maxLeftPinnedColumn}\r\n          updateTableAsPerRowChooser={this.updateTableAsPerRowChooser}\r\n          headerKeys={headerNameList}\r\n          closeColumnReOrdering={this.closeColumnReOrdering}\r\n          existingPinnedHeadersList={existingPinnedHeadersList}\r\n          handleheaderNameList={this.handleheaderNameList}\r\n          {...this.props}\r\n        />\r\n      ),\r\n    });\r\n  };\r\n\r\n\t/**\r\n\t * Method to stop the render the column Selector Pannel\r\n\t */\r\n  closeColumnReOrdering = () => {\r\n    this.setState({\r\n      columnReorderingComponent: null,\r\n    });\r\n  };\r\n  handleSearchValue = (value) => {\r\n    this.setState({ searchValue: value });\r\n  };\r\n  clearSearchValue = () => {\r\n    this.setState({ searchValue: \"\" });\r\n    this.setState({ filteringRows: this.state.filteringRows });\r\n  };\r\n\r\n  sortingPanel = () => {\r\n    let columnField = [];\r\n    this.state.columns.map((item) => columnField.push(item.name));\r\n    this.setState({\r\n      sortingPanelComponent: <Sorting setTableAsPerSortingParams={(args) =>this.setTableAsPerSortingParams(args)}\r\n      columnFieldValue={columnField} \r\n      closeSorting={this.closeSorting} />,\r\n    });\r\n  };\r\n\r\n  closeSorting = () => {\r\n    this.setState({\r\n      sortingPanelComponent: null,\r\n    });\r\n  };\r\n\r\n  //Export Data Logic\r\n  exportColumnData = () => {\r\n    this.setState({\r\n      exportComponent: (\r\n        <ExportData rows={this.state.rows} columnsList={this.state.columns} closeExport={this.closeExport} />\r\n      ),\r\n    });\r\n  };\r\n\r\n  closeExport = () => {\r\n    this.setState({\r\n      exportComponent: null,\r\n    });\r\n  };\r\n\r\n  setTableAsPerSortingParams = (tableSortList) => {\r\n   \r\n    var existingRows = this.state.rows;\r\n    var sortingOrderNameList = [];\r\n    tableSortList.map((item, index) => {\r\n      var nameOfItem = \"\";\r\n      Object.keys(this.state.rows[0]).map(rowItem=>{\r\n        if(item.sortBy === \"Flight #\" && rowItem === \"flightno\"){\r\n          nameOfItem = \"flightno\";\r\n        }\r\n        else if(rowItem.toLowerCase() === this.toCamelCase(item.sortBy).toLowerCase()){\r\n          nameOfItem= rowItem;\r\n        }\r\n      })\r\n      console.log(nameOfItem)\r\n      var typeOfItem = this.state.rows[0][\r\n        item.sortBy === \"Flight #\" ? \"flightno\" : nameOfItem\r\n      ];\r\n      if (typeof typeOfItem === \"number\") {\r\n        sortingOrderNameList.push({\r\n          name:nameOfItem,\r\n          primer: parseInt,\r\n          reverse: item.order === \"Ascending\" ? false : true,\r\n        });\r\n      } else {\r\n        sortingOrderNameList.push({\r\n          name: nameOfItem,\r\n          reverse: item.order === \"Ascending\" ? false : true,\r\n        });\r\n      }\r\n    });\r\n    existingRows.sort(sort_by(...sortingOrderNameList));\r\n    this.setState({\r\n      rows: existingRows,\r\n    });\r\n\r\n    this.closeSorting();\r\n  };\r\n\r\n  toCamelCase = (str) => {\r\n    return str\r\n      .replace(/\\s(.)/g, function ($1) {\r\n        return $1.toUpperCase();\r\n      })\r\n      .replace(/\\s/g, \"\")\r\n      .replace(/^(.)/, function ($1) {\r\n        return $1.toLowerCase();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='parentDiv'>\r\n          <div className='totalCount'>\r\n            Showing <strong> {this.state.count} </strong> records\r\n\t\t\t\t\t</div>\r\n          <div className='globalSearch'>\r\n            <i className=\"fa fa-search\"></i>\r\n            <FormControl\r\n              className=\"globalSeachInput\"\r\n              type='text'\r\n              placeholder=\"Search\"\r\n              onChange={(e) => {\r\n                this.handleSearchValue(e.target.value);\r\n                this.props.globalSearchLogic(e, this.state.tempRows);\r\n              }}\r\n              value={this.state.searchValue}\r\n            />\r\n          </div>\r\n          {/* <div className=\"filterIcons\">\r\n            <FontAwesomeIcon icon={faFilter} />\r\n          </div> */}\r\n          <div className='filterIcons' onClick={this.sortingPanel}>\r\n            <FontAwesomeIcon title='Group Sort' icon={faSortAmountDown} />\r\n            <FontAwesomeIcon icon={faSortDown} className='filterArrow' />\r\n          </div>\r\n          {this.state.sortingPanelComponent}\r\n          <div className='filterIcons' onClick={this.columnReorderingPannel}>\r\n            <FontAwesomeIcon title='Column Chooser' icon={faColumns} />\r\n            <FontAwesomeIcon icon={faSortDown} className='filterArrow' />\r\n          </div>\r\n          {this.state.columnReorderingComponent}\r\n          <div className='filterIcons'>\r\n            <FontAwesomeIcon title='Export' icon={faShareAlt} onClick={this.exportColumnData} />\r\n          </div>\r\n          {this.state.exportComponent}\r\n          {/* <div className=\"filterIcons\">\r\n            <FontAwesomeIcon title=\"Reload\" icon={faSyncAlt} />\r\n          </div> */}\r\n          {/* <div className=\"filterIcons\">\r\n            <FontAwesomeIcon icon={faAlignLeft} />\r\n          </div> */}\r\n        </div>\r\n        <ErrorMessage\r\n          className='errorDiv'\r\n          status={this.state.warningStatus}\r\n          closeWarningStatus={(e) => {\r\n            this.props.closeWarningStatus();\r\n            this.closeWarningStatus();\r\n          }}\r\n          clearSearchValue={this.clearSearchValue}\r\n        />\r\n        <DraggableContainer className='gridDiv' onHeaderDrop={this.onHeaderDrop}>\r\n          <ExtDataGrid\r\n            toolbar={<Toolbar enableFilter={true} />}\r\n            getValidFilterValues={(columnKey) => this.getValidFilterValues(this.state.filteringRows, columnKey)}\r\n            minHeight={this.state.height}\r\n            columns={this.state.columns}\r\n            rowGetter={(i) => this.state.rows[i]}\r\n            rowsCount={this.state.rows.length}\r\n            onGridRowsUpdated={this.onGridRowsUpdated}\r\n            enableCellSelect={true}\r\n            onClearFilters={() => {\r\n              this.setState({ junk: {} });\r\n            }}\r\n            onColumnResize={(idx, width) => console.log(`Column ${idx} has been resized to ${width}`)}\r\n            onAddFilter={(filter) => this.handleFilterChange(filter)}\r\n            rowSelection={{\r\n              showCheckbox: true,\r\n              enableShiftSelect: true,\r\n              onRowsSelected: this.onRowsSelected,\r\n              onRowsDeselected: this.onRowsDeselected,\r\n              selectBy: {\r\n                indexes: this.state.selectedIndexes,\r\n              },\r\n            }}\r\n            onGridSort={(sortColumn, sortDirection) => this.sortRows(this.state.filteringRows, sortColumn, sortDirection)}\r\n          // cellRangeSelection={{\r\n          //   onComplete: this.setSelection,\r\n          // }}\r\n          />\r\n        </DraggableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Global Method To Sort The Grid.\r\n */\r\nvar sort_by;\r\n(function () {\r\n  // utility functions\r\n  var default_cmp = function (a, b) {\r\n      if (a == b) return 0;\r\n      return a < b ? -1 : 1;\r\n    },\r\n    getCmpFunc = function (primer, reverse) {\r\n      var cmp = default_cmp;\r\n      if (primer) {\r\n        cmp = function (a, b) {\r\n          return default_cmp(primer(a), primer(b));\r\n        };\r\n      }\r\n      if (reverse) {\r\n        return function (a, b) {\r\n          return -1 * cmp(a, b);\r\n        };\r\n      }\r\n      return cmp;\r\n    };\r\n\r\n  // actual implementation\r\n  sort_by = function () {\r\n    var fields = [],\r\n      n_fields = arguments.length,\r\n      field,\r\n      name,\r\n      reverse,\r\n      cmp;\r\n\r\n    // preprocess sorting options\r\n    for (var i = 0; i < n_fields; i++) {\r\n      field = arguments[i];\r\n      if (typeof field === \"string\") {\r\n        name = field;\r\n        cmp = default_cmp;\r\n      } else {\r\n        name = field.name;\r\n        cmp = getCmpFunc(field.primer, field.reverse);\r\n      }\r\n      fields.push({\r\n        name: name,\r\n        cmp: cmp,\r\n      });\r\n    }\r\n\r\n    return function (A, B) {\r\n      var a, b, name, cmp, result;\r\n      for (var i = 0, l = n_fields; i < l; i++) {\r\n        result = 0;\r\n        field = fields[i];\r\n        name = field.name;\r\n        cmp = field.cmp;\r\n\r\n        result = cmp(A[name], B[name]);\r\n        if (result !== 0) break;\r\n      }\r\n      return result;\r\n    };\r\n  };\r\n})();\r\n\r\nexport default spreadsheet;\r\n"],"names":["ExtDataGrid","ReactDataGrid","componentDidMount","_mounted","dataGridComponent","document","getElementsByClassName","window","addEventListener","metricsUpdated","props","cellRangeSelection","onWindowMouseUp","componentWillUnmount","removeEventListener","applyFormula","obj","columnName","item","toString","charAt","operation","split","value","substring","length","reduce","a","b","Number","Math","min","apply","max","console","log","DatePicker","React","Component","constructor","state","Date","input","getInputNode","bind","getValue","onValueChanged","updated","date","dateTimeFormat","Intl","DateTimeFormat","year","month","day","formatToParts","column","key","ev","setState","target","render","ref","SEARCH_NOT_FOUNT_ERROR","ErrorMessage","status","setStatus","useState","useEffect","faTimes","e","closeWarningStatus","clearSearchValue","ItemTypes","COLUMN","style","cursor","ColumnItem","id","text","moveColumn","findColumn","originalIndex","index","isDragging","drag","useDrag","type","collect","monitor","end","dropResult","droppedId","getItem","didDrop","drop","useDrop","accept","canDrop","hover","draggedId","overIndex","opacity","node","ColumnsList","columns","setColumns","columnsArray","atIndex","update","$splice","values","temp","forEach","push","handleReorderList","filter","c","indexOf","display","flexWrap","map","ColumnReordering","resetColumnReorderList","columnReorderEntityList","name","leftPinnedColumList","isAllSelected","selectAllToColumnReOrderList","existingColumnReorderEntityList","isExistingAllSelect","addToColumnReorderEntityList","typeToBeAdded","existingLeftPinnedList","includes","indexOfInsertion","columnSelectList","findIndex","splice","filterColumnReorderList","searchKey","String","toLowerCase","existingList","filtererdColumnReorderList","createColumnsArrayFromProps","colsList","faAlignJustify","maxLeftPinnedColumn","reArrangeLeftPinnedColumn","columHeaderName","unshift","subItem","reordered","handleheaderNameList","headerKeys","existingPinnedHeadersList","setWrapperRef","handleClickOutside","wrapperRef","event","contains","closeColumnReOrdering","color","TouchBackend","enableMouseEvents","updateTableAsPerRowChooser","CARD","Card","moveCard","findCard","SortingList","cards","setCards","sortsArray","card","App","add","rowList","existingSortingOrderList","sortingOrderList","sortBy","order","sortOn","copy","i","JSON","parse","stringify","clearAll","remove","rowsValue","row","captureSortingFeildValues","columnFieldValue","faCopy","faTrash","sortingKey","undefined","updateTableAsPerSortCondition","unique","Set","showError","some","element","size","errorMessage","setTableAsPerSortingParams","rows","closeSorting","clickTag","faPlus","downLaodFileType","ExportData","resetColumnExportList","columnEntityList","selectAllToColumnList","columnsList","addToColumnEntityList","existingColumnEntityList","selectDownLoadType","checked","exportRowData","columnVlaueList","keys","Object","getOwnPropertyNames","filteredColumnVal","filteredRow","downloadPDF","downloadXLSFile","downloadCSVFile","unit","orientation","marginLeft","doc","jsPDF","setFontSize","title","headers","dataValues","content","startY","head","body","autoTable","save","fileType","fileExtension","fileName","ws","XLSX","json_to_sheet","wb","Sheets","data","SheetNames","excelBuffer","bookType","Blob","FileSaver","columnSearchLogic","filteredRows","columnValueList","exportValidation","columnLength","fileLength","warning","closeExport","faFilePdf","faFileExcel","faFileCsv","DraggableHeader","DraggableContainer","require","DropDownEditor","Editors","defaultParsePaste","str","selectors","Data","Selectors","swapList","AutoCompleteFilter","NumericFilter","Filters","spreadsheet","updateRows","startIdx","newRows","slice","rowGetter","handleCopy","preventDefault","topLeft","botRight","range","rowIdx","colIdx","col","join","clipboardData","setData","handlePaste","pasteData","getData","rowData","j","setSelection","args","idx","bottomRight","handleWarningStatus","warningStatus","onGridRowsUpdated","fromRow","toRow","action","formulaAppliedCols","filteringRows","tempRows","updateCellData","onRowsSelected","selectedIndexes","concat","r","selectBulkData","onRowsDeselected","rowIndexes","handleFilterChange","junk","filterTerm","getrows","count","filters","getRows","sortRows","sortColumn","sortDirection","comparer","sort","onHeaderDrop","source","stateCopy","assign","columnSourceIndex","columnTargetIndex","emptyColumns","reorderedColumns","inComingColumnsHeaderList","pinnedColumnsList","existingColumnsHeaderList","rePositionedArray","singleHeaderOneList","reverse","array_move","headerItem","frozen","arr","old_index","new_index","k","columnReorderingPannel","headerNameList","columnReorderingComponent","handleSearchValue","searchValue","sortingPanel","columnField","sortingPanelComponent","Sorting","exportColumnData","exportComponent","tableSortList","existingRows","sortingOrderNameList","nameOfItem","rowItem","toCamelCase","typeOfItem","primer","parseInt","sort_by","replace","$1","toUpperCase","airportCodes","height","displayNoRows","searchIconDisplay","editor","filterType","filterRenderer","formulaApplicable","componentDidUpdate","prevProps","resizeEvent","createEvent","initEvent","dispatchEvent","componentWillReceiveProps","textValue","getValidFilterValues","columnId","globalSearchLogic","faSortAmountDown","faSortDown","faColumns","faShareAlt","columnKey","width","showCheckbox","enableShiftSelect","selectBy","indexes","default_cmp","getCmpFunc","cmp","fields","n_fields","arguments","field","A","B","result","l"],"mappings":"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"}