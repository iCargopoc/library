{"version":3,"file":"index.js","sources":["../src/common/extDataGrid.js","../src/utilities/utils.js","../src/functions/DatePicker.js","../src/common/ErrorConstants.js","../src/common/ErrorMessage.js","../src/overlays/column_chooser/ItemTypes.js","../src/overlays/column_chooser/columnItem.js","../src/overlays/column_chooser/columnsList.js","../src/overlays/column_chooser/Chooser.js","../src/overlays/sorting/ItemTypes.js","../src/overlays/sorting/SortItem.js","../src/overlays/sorting/SortingList.js","../src/overlays/sorting/Sorting.js","../src/overlays/export_data/ExportData.js","../src/index.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport { Toolbar, Data, Filters } from \"react-data-grid-addons\";\r\n\r\nclass ExtDataGrid extends ReactDataGrid {\r\n  componentDidMount() {\r\n    this._mounted = true;\r\n    this.dataGridComponent = document.getElementsByClassName(\r\n      \"react-grid-Viewport\"\r\n    )[0]; //assumes only one react datagrid component exists\r\n    window.addEventListener(\"resize\", this.metricsUpdated);\r\n    if (this.props.cellRangeSelection) {\r\n      this.dataGridComponent.addEventListener(\"mouseup\", this.onWindowMouseUp);\r\n    }\r\n    this.metricsUpdated();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._mounted = false;\r\n    window.removeEventListener(\"resize\", this.metricsUpdated);\r\n    this.dataGridComponent.removeEventListener(\"mouseup\", this.onWindowMouseUp);\r\n  }\r\n}\r\n\r\nexport default ExtDataGrid;\r\n","export const applyFormula = (obj, columnName) => {\r\n  let item = obj[columnName].toString();\r\n  if (item && item.charAt(0) === \"=\") {\r\n    var operation = item.split(\"(\");\r\n    var value = operation[1]\r\n      .substring(0, operation[1].length - 1)\r\n      .split(/[,:]/);\r\n    switch (operation[0]) {\r\n      case \"=SUM\":\r\n      case \"=ADD\":\r\n      case \"=sum\":\r\n      case \"=add\":\r\n        obj[columnName] = value.reduce(function (a, b) {\r\n          return Number(a) + Number(b);\r\n        });\r\n        break;\r\n      case \"=MUL\":\r\n      case \"=mul\":\r\n        obj[columnName] = value.reduce(function (a, b) {\r\n          return Number(a) * Number(b);\r\n        });\r\n        break;\r\n      case \"=SUB\":\r\n      case \"=sub\":\r\n      case \"=DIFF\":\r\n      case \"=diff\":\r\n        obj[columnName] = value.reduce(function (a, b) {\r\n          return Number(a) - Number(b);\r\n        });\r\n        break;\r\n      case \"=min\":\r\n      case \"=MIN\":\r\n        obj[columnName] = Math.min.apply(Math, value);\r\n        break;\r\n      case \"=max\":\r\n      case \"=MAX\":\r\n        obj[columnName] = Math.max.apply(Math, value);\r\n        break;\r\n      default:\r\n        console.log(\"No Calculation\");\r\n    }\r\n  }\r\n  return obj;\r\n};","import React from 'react';\r\n\r\nexport default class DatePicker extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: new Date(),\r\n      };\r\n      //the variable to store component reference\r\n      this.input = null;\r\n  \r\n      this.getInputNode = this.getInputNode.bind(this);\r\n      this.getValue = this.getValue.bind(this);\r\n      this.onValueChanged = this.onValueChanged.bind(this);\r\n    }\r\n  \r\n    //returning the component with the reference, input\r\n    getInputNode() {\r\n      return this.input;\r\n    }\r\n    //returning updated object with the date value in the required format\r\n    getValue() {\r\n      var updated = {};\r\n      let date;\r\n      date = new Date(this.state.value);\r\n      const dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\", month: \"short\", day: \"2-digit\" });\r\n      const [{ value: month }, , { value: day }, , { value: year }] = dateTimeFormat.formatToParts(date);\r\n      updated[this.props.column.key] = `${day}-${month}-${year}`;\r\n      return updated;\r\n  \r\n    }\r\n  \r\n    onValueChanged(ev) {\r\n      this.setState({ value: ev.target.value });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <input\r\n            type=\"date\"\r\n            ref={(ref) => {\r\n              this.input = ref;\r\n            }}\r\n            value={this.state.value}\r\n            onChange={this.onValueChanged}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }","export const SEARCH_NOT_FOUNT_ERROR = \"No Records found!\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { SEARCH_NOT_FOUNT_ERROR } from \"./ErrorConstants\";\r\n\r\nconst ErrorMessage = (props) => {\r\n\r\n  const [status, setStatus] = useState(props.status);\r\n  useEffect(\r\n    () => {\r\n      setStatus(props.status)\r\n    }\r\n    , [props.status]);\r\n  if (status === \"invalid\") {\r\n    return (\r\n      <div id=\"errorMsg\">\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {SEARCH_NOT_FOUNT_ERROR}\r\n        </div>\r\n        <div className=\"notification-close\" >\r\n          <FontAwesomeIcon icon={faTimes}\r\n            onClick={(e) => {\r\n              props.closeWarningStatus();\r\n              props.clearSearchValue();\r\n            }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else return <div></div>;\r\n};\r\nexport default ErrorMessage;\r\n","export const ItemTypes = {\r\n    COLUMN: \"column\"\r\n};\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst style = {\r\n\tcursor: \"move\",\r\n};\r\n\r\nconst ColumnItem = ({ id, text, moveColumn, findColumn }) => {\r\n\tconst originalIndex = findColumn(id).index;\r\n\r\n\tconst [{ isDragging }, drag] = useDrag({\r\n\t\titem: { type: ItemTypes.COLUMN, id, originalIndex },\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: monitor.isDragging(),\r\n\t\t}),\r\n\t\tend: (dropResult, monitor) => {\r\n\t\t\tconst { id: droppedId, originalIndex } = monitor.getItem();\r\n\t\t\tconst didDrop = monitor.didDrop();\r\n\t\t\tif (!didDrop) {\r\n\t\t\t\tmoveColumn(droppedId, originalIndex);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tconst [, drop] = useDrop({\r\n\t\taccept: ItemTypes.COLUMN,\r\n\t\tcanDrop: () => false,\r\n\t\thover({ id: draggedId }) {\r\n\t\t\tif (draggedId !== id) {\r\n\t\t\t\tconst { index: overIndex } = findColumn(id);\r\n\t\t\t\tmoveColumn(draggedId, overIndex);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tconst opacity = isDragging ? 0.1 : 1;\r\n\r\n\treturn (\r\n\t\t<div ref={(node) => drag(drop(node))} style={{ ...style, opacity }}>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ColumnItem;\r\n","import React, { useState } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport update from \"immutability-helper\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport ColumnItem from \"./columnItem\";\r\n\r\nconst ColumnsList = (props) => {\r\n\tconst [columns, setColumns] = useState([...props.columnsArray]);\r\n\r\n\tconst moveColumn = (id, atIndex) => {\r\n\r\n\t\tconst { column, index } = findColumn(id);\r\n\t\tsetColumns(\r\n\t\t\tupdate(columns, {\r\n\t\t\t\t$splice: [\r\n\t\t\t\t\t[index, 1],\r\n\t\t\t\t\t[atIndex, 0, column],\r\n\t\t\t\t],\r\n\t\t\t})\r\n\t\t);\r\n\t\tlet values = [];\r\n\t\tlet temp = [];\r\n\t\ttemp = update(columns, {\r\n\t\t\t$splice: [\r\n\t\t\t\t[index, 1],\r\n\t\t\t\t[atIndex, 0, column],\r\n\t\t\t],\r\n\t\t})\r\n\t\ttemp.forEach((item) => {\r\n\t\t\tvalues.push(item.id)\r\n\t\t})\r\n\t\t//console.log(values)\r\n\t\tprops.handleReorderList(values);\r\n\t};\r\n\r\n\tconst findColumn = (id) => {\r\n\t\tconst column = columns.filter((c) => `${c.id}` === id)[0];\r\n\t\treturn {\r\n\t\t\tcolumn,\r\n\t\t\tindex: columns.indexOf(column),\r\n\t\t};\r\n\t};\r\n\r\n\tconst [, drop] = useDrop({ accept: ItemTypes.COLUMN });\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetColumns(props.columnsArray);\r\n\t}, [props.columnsArray]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div ref={drop} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t<ColumnItem\r\n\t\t\t\t\t\tkey={column.id}\r\n\t\t\t\t\t\tid={`${column.id}`}\r\n\t\t\t\t\t\ttext={column.text}\r\n\t\t\t\t\t\tmoveColumn={moveColumn}\r\n\t\t\t\t\t\tfindColumn={findColumn}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default ColumnsList;\r\n","import React from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { TouchBackend } from \"react-dnd-touch-backend\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faAlignJustify } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ColumnsList from \"./columnsList\";\r\n\r\nclass ColumnReordering extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnReorderEntityList: this.props.headerKeys,\r\n      columnSelectList: this.props.columns.map((item) => item.name),\r\n      leftPinnedColumList: this.props.existingPinnedHeadersList,\r\n      isAllSelected: true,\r\n      maxLeftPinnedColumn: this.props.maxLeftPinnedColumn,\r\n    };\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.closeColumnReOrdering();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to reset the coloumn list onClick of Reset button\r\n   */\r\n  resetColumnReorderList = () => {\r\n    this.setState({\r\n      columnReorderEntityList: this.props.columns.map((item) => item.name),\r\n      leftPinnedColumList: [],\r\n      isAllSelected: true,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Method to Select all options in the coloumn list onClick of Select All button\r\n   */\r\n  selectAllToColumnReOrderList = () => {\r\n    this.resetColumnReorderList();\r\n    var existingColumnReorderEntityList = this.state.columnReorderEntityList;\r\n    var isExistingAllSelect = this.state.isAllSelected;\r\n    if (!isExistingAllSelect) {\r\n      existingColumnReorderEntityList = this.props.columns.map(\r\n        (item) => item.name\r\n      );\r\n      isExistingAllSelect = true;\r\n    } else {\r\n      existingColumnReorderEntityList = [];\r\n      isExistingAllSelect = false;\r\n    }\r\n    this.setState({\r\n      columnReorderEntityList: existingColumnReorderEntityList,\r\n      isAllSelected: isExistingAllSelect,\r\n      leftPinnedColumList: [],\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Method To add a column to columnReorderEntityList when selected.\r\n   * @param {String} typeToBeAdded\r\n   */\r\n  addToColumnReorderEntityList = (typeToBeAdded) => {\r\n    var existingColumnReorderEntityList = this.state.columnReorderEntityList;\r\n    var existingLeftPinnedList = this.state.leftPinnedColumList;\r\n    if (!existingColumnReorderEntityList.includes(typeToBeAdded)) {\r\n      var indexOfInsertion = this.state.columnSelectList.findIndex(\r\n        (item) => item === typeToBeAdded\r\n      );\r\n      while (indexOfInsertion > 0) {\r\n        if (\r\n          existingColumnReorderEntityList.includes(\r\n            this.state.columnSelectList[indexOfInsertion - 1]\r\n          )\r\n        ) {\r\n          if (\r\n            !existingLeftPinnedList.includes(\r\n              this.state.columnSelectList[indexOfInsertion - 1]\r\n            )\r\n          ) {\r\n            indexOfInsertion = existingColumnReorderEntityList.findIndex(\r\n              (item) =>\r\n                item === this.state.columnSelectList[indexOfInsertion - 1]\r\n            );\r\n            indexOfInsertion = indexOfInsertion + 1;\r\n            break;\r\n          } else {\r\n            indexOfInsertion = indexOfInsertion - 1;\r\n          }\r\n        } else {\r\n          indexOfInsertion = indexOfInsertion - 1;\r\n        }\r\n      }\r\n      existingColumnReorderEntityList.splice(\r\n        indexOfInsertion,\r\n        0,\r\n        typeToBeAdded\r\n      );\r\n    } else {\r\n      existingColumnReorderEntityList = existingColumnReorderEntityList.filter(\r\n        (item) => {\r\n          if (item !== typeToBeAdded) return item;\r\n        }\r\n      );\r\n      if (existingLeftPinnedList.includes(typeToBeAdded)) {\r\n        existingLeftPinnedList = existingLeftPinnedList.filter(\r\n          (item) => item !== typeToBeAdded\r\n        );\r\n      }\r\n    }\r\n    this.setState({\r\n      columnReorderEntityList: existingColumnReorderEntityList,\r\n      isAllSelected: false,\r\n      leftPinnedColumList: existingLeftPinnedList,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Method to handle the like-search on key stroke.\r\n   * @param {Event} e\r\n   */\r\n  filterColumnReorderList = (e) => {\r\n    var searchKey = String(e.target.value).toLowerCase();\r\n    var existingList = this.props.columns.map((item) => item.name);\r\n    let filtererdColumnReorderList = [];\r\n    if (searchKey.length > 0) {\r\n      filtererdColumnReorderList = existingList.filter((item) => {\r\n        return item.toLowerCase().includes(searchKey);\r\n      });\r\n    } else {\r\n      filtererdColumnReorderList = this.props.columns.map((item) => item.name);\r\n    }\r\n    this.setState({\r\n      columnSelectList: filtererdColumnReorderList,\r\n    });\r\n  };\r\n\r\n  createColumnsArrayFromProps = (colsList) => {\r\n    return colsList.map((item) => {\r\n      return {\r\n        id: item,\r\n        text: (\r\n          <div className=\"column__reorder\" key={item}>\r\n            <div className=\"\">\r\n              <FontAwesomeIcon icon={faAlignJustify}></FontAwesomeIcon>\r\n            </div>\r\n            <div className=\"column__reorder__name\">{item}</div>\r\n            <div className=\"column__wrap\">\r\n              <div className=\"column__checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={this.state.leftPinnedColumList.includes(item)}\r\n                  disabled={\r\n                    this.state.maxLeftPinnedColumn -\r\n                      this.state.leftPinnedColumList.length <=\r\n                    0\r\n                      ? this.state.leftPinnedColumList.includes(item)\r\n                        ? false\r\n                        : true\r\n                      : false\r\n                  }\r\n                  onChange={() => this.reArrangeLeftPinnedColumn(item)}\r\n                ></input>\r\n              </div>\r\n              <div className=\"column__txt\">Pin Left</div>\r\n            </div>\r\n          </div>\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Method to handle the position of columns Names when left pinned in coloumn selector view.\r\n   * @param {String} columHeaderName\r\n   */\r\n  reArrangeLeftPinnedColumn = (columHeaderName) => {\r\n    var existingLeftPinnedList = this.state.leftPinnedColumList;\r\n    var existingColumnReorderEntityList = this.state.columnReorderEntityList;\r\n    if (!existingLeftPinnedList.includes(columHeaderName)) {\r\n      existingLeftPinnedList.unshift(columHeaderName);\r\n    } else {\r\n      existingLeftPinnedList = existingLeftPinnedList.filter(\r\n        (item) => item !== columHeaderName\r\n      );\r\n    }\r\n    this.setState({\r\n      leftPinnedColumList: existingLeftPinnedList,\r\n    });\r\n\r\n    existingLeftPinnedList.map((item) => {\r\n      existingColumnReorderEntityList = existingColumnReorderEntityList.filter(\r\n        (subItem) => subItem !== item\r\n      );\r\n      existingColumnReorderEntityList.unshift(item);\r\n    });\r\n    this.setState({\r\n      columnReorderEntityList: existingColumnReorderEntityList,\r\n    });\r\n  };\r\n  handleReorderList = (reordered) => {\r\n    this.props.handleheaderNameList(reordered);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"columns--grid\" ref={this.setWrapperRef}>\r\n        <div className=\"column__grid\">\r\n          <div className=\"column__chooser\">\r\n            <div className=\"column__header\">\r\n              <div className=\"\">\r\n                <strong>Column Chooser</strong>\r\n              </div>\r\n            </div>\r\n            <div className=\"column__body\">\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search column\"\r\n                  className=\"custom__ctrl\"\r\n                  onChange={this.filterColumnReorderList}\r\n                ></input>\r\n              </div>\r\n              <div className=\"column__wrap column__headertxt\">\r\n                <div className=\"column__checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={() => this.selectAllToColumnReOrderList()}\r\n                    checked={\r\n                      this.state.columnReorderEntityList.length ===\r\n                      this.props.columns.length\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"column__txt\">Select all</div>\r\n              </div>\r\n              {this.state.columnSelectList.map((item) => {\r\n                return (\r\n                  <div className=\"column__wrap\" key={item}>\r\n                    <div className=\"column__checkbox\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.columnReorderEntityList.includes(\r\n                          item\r\n                        )}\r\n                        onChange={() => this.addToColumnReorderEntityList(item)}\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">{item}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"column__settings\">\r\n            <div className=\"column__header\">\r\n              <div className=\"column__headerTxt\">\r\n                <strong>Column Setting</strong>\r\n              </div>\r\n              <div className=\"column__close\">\r\n                <FontAwesomeIcon\r\n                  className=\"icon-close\"\r\n                  icon={faTimes}\r\n                  onClick={() => this.props.closeColumnReOrdering()}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <div className=\"column__header\">\r\n              <div className=\"column__headerTxt\">\r\n                <strong>\r\n                  &nbsp; &nbsp; Selected Column Count :{\" \"}\r\n                  {this.state.columnReorderEntityList.length}\r\n                </strong>\r\n              </div>\r\n              <div className=\"column__headerTxt\">\r\n                {this.state.maxLeftPinnedColumn -\r\n                  this.state.leftPinnedColumList.length >\r\n                0 ? (\r\n                  <strong>\r\n                    &nbsp; &nbsp; Left Pinned Column Count Remaining :{\" \"}\r\n                    {this.state.maxLeftPinnedColumn -\r\n                      this.state.leftPinnedColumList.length}\r\n                  </strong>\r\n                ) : (\r\n                  <strong style={{ color: \"red\" }}>\r\n                    &nbsp; &nbsp; Maximum Count Of Left Pin Columns REACHED\r\n                  </strong>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"column__body\">\r\n              <DndProvider\r\n                backend={TouchBackend}\r\n                options={{ enableMouseEvents: true }}\r\n              >\r\n                <ColumnsList\r\n                  columnsArray={this.createColumnsArrayFromProps(\r\n                    this.state.columnReorderEntityList\r\n                  )}\r\n                  handleReorderList={this.handleReorderList}\r\n                />\r\n              </DndProvider>\r\n            </div>\r\n            <div className=\"column__footer\">\r\n              <div className=\"column__btns\">\r\n                <button\r\n                  className=\"btns\"\r\n                  onClick={() => this.resetColumnReorderList()}\r\n                >\r\n                  Reset\r\n                </button>\r\n                <button\r\n                  className=\"btns\"\r\n                  onClick={() => this.props.closeColumnReOrdering()}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btns btns__save\"\r\n                  onClick={() =>\r\n                    this.props.updateTableAsPerRowChooser(\r\n                      this.state.columnReorderEntityList,\r\n                      this.state.leftPinnedColumList\r\n                    )\r\n                  }\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColumnReordering;\r\n","export const ItemTypes = {\r\n  CARD: \"sort\",\r\n};\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst style = {\r\n  cursor: \"move\",\r\n};\r\n\r\nconst Card = ({ id, text, moveCard, findCard }) => {\r\n  const originalIndex = findCard(id).index;\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ItemTypes.CARD, id, originalIndex },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n    end: (dropResult, monitor) => {\r\n      const { id: droppedId, originalIndex } = monitor.getItem();\r\n      const didDrop = monitor.didDrop();\r\n      if (!didDrop) {\r\n        moveCard(droppedId, originalIndex);\r\n      }\r\n    },\r\n  });\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    canDrop: () => false,\r\n    hover({ id: draggedId }) {\r\n      if (draggedId !== id) {\r\n        const { index: overIndex } = findCard(id);\r\n        moveCard(draggedId, overIndex);\r\n      }\r\n    },\r\n  });\r\n\r\n  const opacity = isDragging ? 0.5 : 1;\r\n\r\n  return (\r\n    <div ref={(node) => drag(drop(node))} style={{ ...style, opacity }}>\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport Card from \"./SortItem\";\r\nimport update from \"immutability-helper\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst SortingList = (props) => {\r\n  const [cards, setCards] = useState([...props.sortsArray]);\r\n\r\n  const moveCard = (id, atIndex) => {\r\n    const { card, index } = findCard(id);\r\n    setCards(\r\n      update(cards, {\r\n        $splice: [\r\n          [index, 1],\r\n          [atIndex, 0, card],\r\n        ],\r\n      })\r\n    );\r\n  };\r\n\r\n  const findCard = (id) => {\r\n    const card = cards.filter((c) => `${c.id}` === id)[0];\r\n    return {\r\n      card,\r\n      index: cards.indexOf(card),\r\n    };\r\n  };\r\n\r\n  const [, drop] = useDrop({ accept: ItemTypes.CARD });\r\n\r\n  React.useEffect(() => {\r\n    setCards(props.sortsArray);\r\n  }, [props.sortsArray]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div ref={drop} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {cards.map((card) => (\r\n          <Card\r\n            key={card.id}\r\n            id={`${card.id}`}\r\n            text={card.text}\r\n            moveCard={moveCard}\r\n            findCard={findCard}\r\n          />\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SortingList;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faAlignJustify,\r\n  faTrash,\r\n  faPlus,\r\n  faCopy,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { TouchBackend } from \"react-dnd-touch-backend\";\r\nimport SortingList from \"./SortingList\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      rowList: [true],\r\n      rows: [],\r\n      sortingOrderList: [\r\n        {\r\n          sortBy: \"Flight #\",\r\n          order: \"Ascending\",\r\n          sortOn: \"Value\",\r\n        },\r\n      ],\r\n      errorMessage: false,\r\n    };\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.closeSorting();\r\n    }\r\n  }\r\n\r\n  add = () => {\r\n    let rowList = [...this.state.rowList];\r\n    rowList.push(true);\r\n    var existingSortingOrderList = this.state.sortingOrderList;\r\n    existingSortingOrderList.push({\r\n      sortBy: \"Flight #\",\r\n      order: \"Ascending\",\r\n      sortOn: \"Value\",\r\n    });\r\n    this.setState({\r\n      rowList,\r\n      sortingOrderList: existingSortingOrderList,\r\n    });\r\n  };\r\n\r\n  copy = (i) => {\r\n    let rowList = [...this.state.sortingOrderList];\r\n    rowList.push(JSON.parse(JSON.stringify(rowList[i])));\r\n    this.setState({ sortingOrderList: rowList });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({ sortingOrderList: [] });\r\n  };\r\n\r\n  remove = (i) => {\r\n    let sortingOrderList = [...this.state.sortingOrderList];\r\n    sortingOrderList.splice(i, 1);\r\n    this.setState({ sortingOrderList });\r\n  };\r\n\r\n  createColumnsArrayFromProps = (rowsValue) => {\r\n    return rowsValue.map((row, index) => {\r\n      return {\r\n        id: index,\r\n        text: (\r\n          <div className=\"sort__bodyContent\" key={index}>\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>&nbsp;</div>\r\n              </div>\r\n\r\n              <div className=\"sort__icon\">\r\n                <FontAwesomeIcon icon={faAlignJustify}></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>Sort by</div>\r\n              </div>\r\n\r\n              <div className=\"sort__file\">\r\n                <select\r\n                  className=\"custom__ctrl\"\r\n                  name={\"sortBy\"}\r\n                  onChange={(e) =>\r\n                    this.captureSortingFeildValues(e, index, \"sortBy\")\r\n                  }\r\n                  value={row.sortBy}\r\n                >\r\n                  {this.props.columnFieldValue.map((item, index) => (\r\n                    <option key={index}>{item}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>Sort on</div>\r\n              </div>\r\n\r\n              <div className=\"sort__file\">\r\n                <select\r\n                  className=\"custom__ctrl\"\r\n                  name={\"sortOn\"}\r\n                  onChange={(e) =>\r\n                    this.captureSortingFeildValues(e, index, \"sortOn\")\r\n                  }\r\n                  value={row.sortOn}\r\n                >\r\n                  <option>Value</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>Order</div>\r\n              </div>\r\n\r\n              <div className=\"sort__file\">\r\n                <select\r\n                  className=\"custom__ctrl\"\r\n                  name={\"order\"}\r\n                  onChange={(e) =>\r\n                    this.captureSortingFeildValues(e, index, \"order\")\r\n                  }\r\n                  value={row.order}\r\n                >\r\n                  <option>Ascending</option>\r\n                  <option>Descending</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>&nbsp;</div>\r\n              </div>\r\n\r\n              <div className=\"sort__icon\">\r\n                <FontAwesomeIcon\r\n                  icon={faCopy}\r\n                  title=\"Copy\"\r\n                  onClick={() => this.copy(index)}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>&nbsp;</div>\r\n              </div>\r\n\r\n              <div className=\"sort__icon\">\r\n                <FontAwesomeIcon\r\n                  icon={faTrash}\r\n                  title=\"Delete\"\r\n                  onClick={() => this.remove(index)}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  captureSortingFeildValues = (event, index, sortingKey) => {\r\n    var sortingObj = {\r\n      //``\r\n    };\r\n\r\n    var existingSortingOrderList = this.state.sortingOrderList;\r\n\r\n    if (sortingKey === \"sortBy\") {\r\n      existingSortingOrderList[index][\"sortBy\"] = event.target.value;\r\n    }\r\n    if (sortingKey === \"order\") {\r\n      existingSortingOrderList[index][\"order\"] = event.target.value;\r\n    }\r\n    if (\r\n      existingSortingOrderList[index][\"sortOn\"] === \"\" ||\r\n      existingSortingOrderList[index][\"sortOn\"] === undefined\r\n    ) {\r\n      existingSortingOrderList[index][\"sortOn\"] = \"Value\";\r\n    }\r\n    this.setState({\r\n      sortingOrderList: existingSortingOrderList,\r\n    });\r\n  };\r\n\r\n  updateTableAsPerSortCondition = () => {\r\n    const unique = new Set();\r\n    const showError = this.state.sortingOrderList.some(\r\n      (element) => unique.size === unique.add(element.sortBy).size\r\n    );\r\n    showError\r\n      ? this.setState({\r\n          errorMessage: true,\r\n        })\r\n      : this.setState({\r\n          errorMessage: false,\r\n        });\r\n    console.log(\"FILTER SORT LIST OF OBJECTS \", this.state.sortingOrderList);\r\n    this.props.setTableAsPerSortingParams(this.state.sortingOrderList);\r\n  };\r\n\r\n  render() {\r\n    let { rowList } = this.state.rowList;\r\n    return (\r\n      <div className=\"sorts--grid\" ref={this.setWrapperRef}>\r\n        <div className=\"sort__grid\">\r\n          <div className=\"sort__settings\">\r\n            <div className=\"sort__header\">\r\n              <div className=\"sort__headerTxt\">\r\n                <strong>Sort </strong>\r\n              </div>\r\n\r\n              <div className=\"sort__close\">\r\n                <FontAwesomeIcon\r\n                  className=\"icon-close\"\r\n                  icon={faTimes}\r\n                  onClick={() => this.props.closeSorting()}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sort__body\">\r\n              <DndProvider\r\n                backend={TouchBackend}\r\n                options={{ enableMouseEvents: true }}\r\n              >\r\n                <SortingList\r\n                  sortsArray={this.createColumnsArrayFromProps(\r\n                    this.state.sortingOrderList\r\n                  )}\r\n                />\r\n              </DndProvider>\r\n              <div className=\"sort-warning\">\r\n                {this.state.errorMessage ? (\r\n                  <span\r\n                    style={{ display: this.state.clickTag }}\r\n                    className=\"alert alert-danger\"\r\n                  >\r\n                    Sort types opted are same, Please choose different one.\r\n                  </span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__new\">\r\n              <div className=\"sort__section\">\r\n                <FontAwesomeIcon\r\n                  icon={faPlus}\r\n                  className=\"sort__icon\"\r\n                ></FontAwesomeIcon>\r\n\r\n                <div className=\"sort__txt\" onClick={() => this.add()}>\r\n                  New Sort\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__footer\">\r\n              <div className=\"sort__btns\">\r\n                <button className=\"btns\" onClick={this.clearAll}>\r\n                  Clear All\r\n                </button>\r\n\r\n                <button\r\n                  className=\"btns btns__save\"\r\n                  onClick={() => this.updateTableAsPerSortCondition()}\r\n                >\r\n                  Ok\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faFilePdf,\r\n  faFileExcel,\r\n  faFileCsv,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nlet downLaodFileType = [];\r\nclass ExportData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnValueList: this.props.columnsList,\r\n      columnEntityList: [],\r\n      isAllSelected: false,\r\n      downLaodFileType: [],\r\n      filteredRow: [],\r\n      warning: \"\",\r\n      clickTag: \"none\",\r\n    };\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    this.selectDownLoadType = this.selectDownLoadType.bind(this);\r\n    this.exportValidation = this.exportValidation.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.closeExport();\r\n    }\r\n  }\r\n\r\n  resetColumnExportList = () => {\r\n    this.setState({\r\n      columnEntityList: [],\r\n      isAllSelected: false,\r\n    });\r\n  };\r\n\r\n  selectAllToColumnList = () => {\r\n    this.resetColumnExportList();\r\n    this.setState({\r\n      columnEntityList: !this.state.isAllSelected ? this.props.columnsList : [],\r\n      isAllSelected: !this.state.isAllSelected,\r\n    });\r\n  };\r\n\r\n  addToColumnEntityList = (typeToBeAdded) => {\r\n    var existingColumnEntityList = this.state.columnEntityList;\r\n    if (!existingColumnEntityList.includes(typeToBeAdded)) {\r\n      existingColumnEntityList.push(typeToBeAdded);\r\n    } else {\r\n      existingColumnEntityList = existingColumnEntityList.filter((item) => {\r\n        return item !== typeToBeAdded;\r\n      });\r\n    }\r\n    this.setState({\r\n      columnEntityList: existingColumnEntityList,\r\n      isAllSelected: false,\r\n    });\r\n  };\r\n\r\n  selectDownLoadType = (event) => {\r\n    if (\r\n      event.target.checked &&\r\n      !this.state.downLaodFileType.includes(event.target.value)\r\n    ) {\r\n      downLaodFileType.push(event.target.value);\r\n      this.setState({ downLaodFileType });\r\n    } else {\r\n      downLaodFileType.map(function (value, index) {\r\n        if (value === event.target.value) {\r\n          downLaodFileType = downLaodFileType.splice(index, value);\r\n        }\r\n      });\r\n      this.setState({ downLaodFileType });\r\n    }\r\n  };\r\n\r\n  exportRowData = () => {\r\n    const columnVlaueList = this.state.columnEntityList;\r\n    if (columnVlaueList.length > 0 && this.state.downLaodFileType.length > 0) {\r\n      this.props.rows.forEach((row) => {\r\n        const keys = Object.getOwnPropertyNames(row);\r\n        var filteredColumnVal = {};\r\n        keys.forEach(function (key) {\r\n          columnVlaueList.forEach((columnName) => {\r\n            if (columnName.key === key) filteredColumnVal[key] = row[key];\r\n          });\r\n        });\r\n        this.state.filteredRow.push(filteredColumnVal);\r\n      });\r\n\r\n      this.state.downLaodFileType.map((item) => {\r\n        if (item === \"pdf\") this.downloadPDF();\r\n        else if (item === \"excel\") this.downloadXLSFile();\r\n        else this.downloadCSVFile();\r\n      });\r\n    }\r\n  };\r\n\r\n  downloadPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"landscape\"; // portrait or landscape\r\n\r\n    const marginLeft = 300;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"iCargo Report\";\r\n    const headers = [\r\n      this.state.columnEntityList.map((column) => {\r\n        return column.name;\r\n      }),\r\n    ];\r\n    var dataValues = [];\r\n    this.props.rows.forEach((row) => {\r\n      const keys = Object.keys(row);\r\n      var filteredColumnVal = [];\r\n      this.state.columnEntityList.forEach((columnName) => {\r\n        keys.forEach((key) => {\r\n          if (columnName.key === key) filteredColumnVal.push(row[key]);\r\n        });\r\n      });\r\n      dataValues.push(filteredColumnVal);\r\n    });\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: dataValues,\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"report.pdf\");\r\n  };\r\n\r\n  downloadCSVFile = () => {\r\n    const fileType =\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".csv\";\r\n    const fileName = \"CSVDownload\";\r\n    const ws = XLSX.utils.json_to_sheet(this.state.filteredRow);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"csv\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  downloadXLSFile = () => {\r\n    const fileType =\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".xlsx\";\r\n    const fileName = \"XLSXDownload\";\r\n    const ws = XLSX.utils.json_to_sheet(this.state.filteredRow);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  columnSearchLogic = (e) => {\r\n    const searchKey = String(e.target.value).toLowerCase();\r\n    let filteredRows = this.props.columnsList.filter((item) => {\r\n      return item.name.toLowerCase().includes(searchKey);\r\n    });\r\n    if (!filteredRows.length) {\r\n      this.setState({ columnValueList: this.props.columnsList });\r\n    } else {\r\n      this.setState({ columnValueList: filteredRows });\r\n    }\r\n  };\r\n\r\n  exportValidation = () => {\r\n    let columnLength = this.state.columnEntityList.length;\r\n    let fileLength = this.state.downLaodFileType.length;\r\n    if (columnLength > 0 && fileLength > 0) {\r\n      this.exportRowData();\r\n      this.setState({ clickTag: \"none\" });\r\n    } else if (columnLength === 0) {\r\n      this.setState({ warning: \"Column\" });\r\n      this.setState({ clickTag: \"\" });\r\n    } else if (fileLength === 0) {\r\n      this.setState({ warning: \"File Type\" });\r\n      this.setState({ clickTag: \"\" });\r\n    }\r\n    if (columnLength === 0 && fileLength === 0) {\r\n      this.setState({ warning: \"File Type & Column\" });\r\n      this.setState({ clickTag: \"\" });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"exports--grid\" ref={this.setWrapperRef}>\r\n        <div className=\"export__grid\">\r\n          <div className=\"export__chooser\">\r\n            <div className=\"export__header\">\r\n              <div className=\"\">\r\n                <strong>Export Data</strong>\r\n              </div>\r\n            </div>\r\n            <div className=\"export__body\">\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search export\"\r\n                  className=\"custom__ctrl\"\r\n                  onChange={this.columnSearchLogic}\r\n                ></input>\r\n              </div>\r\n              <div className=\"export__wrap export__headertxt\">\r\n                <div className=\"export__checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={() => this.selectAllToColumnList()}\r\n                    checked={this.state.isAllSelected}\r\n                  />\r\n                </div>\r\n                <div className=\"export__txt\">Select All</div>\r\n              </div>\r\n              {this.state.columnValueList.length > 0\r\n                ? this.state.columnValueList.map((column, index) => {\r\n                    return (\r\n                      <div className=\"export__wrap\" key={column.key}>\r\n                        <div className=\"export__checkbox\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={this.state.columnEntityList.includes(\r\n                              column\r\n                            )}\r\n                            onChange={() => this.addToColumnEntityList(column)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"export__txt\">{column.name}</div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                : \"\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"export__settings\">\r\n            <div className=\"export__header\">\r\n              <div className=\"export__headerTxt\"></div>\r\n              <div className=\"export__close\">\r\n                <FontAwesomeIcon\r\n                  icon={faTimes}\r\n                  className=\"icon-close\"\r\n                  onClick={this.props.closeExport}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <div className=\"export__as\">Export as</div>\r\n            <div className=\"export__body\">\r\n              <div className=\"export__reorder\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"pdf\"\r\n                    value=\"pdf\"\r\n                    onChange={this.selectDownLoadType}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"export__file\">\r\n                  <FontAwesomeIcon\r\n                    icon={faFilePdf}\r\n                    className=\"temp\"\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"export__reorder\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"excel\"\r\n                    value=\"excel\"\r\n                    onChange={this.selectDownLoadType}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"export__file\">\r\n                  <FontAwesomeIcon\r\n                    icon={faFileExcel}\r\n                    className=\"temp\"\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"export__reorder\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"csv\"\r\n                    value=\"csv\"\r\n                    onChange={this.selectDownLoadType}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"export__file\">\r\n                  <FontAwesomeIcon\r\n                    icon={faFileCsv}\r\n                    className=\"temp\"\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"exportWarning\">\r\n                <span\r\n                  style={{ display: this.state.clickTag }}\r\n                  className=\"alert alert-danger\"\r\n                >\r\n                  You haven't selected <strong>{this.state.warning}</strong>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"export__footer\">\r\n              <div className=\"export__btns\">\r\n                <button\r\n                  className=\"btns\"\r\n                  onClick={() => this.props.closeExport()}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btns btns__save\"\r\n                  onClick={(e) => {\r\n                    this.exportValidation();\r\n                  }}\r\n                >\r\n                  Export\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ExportData;\r\n","import React, { Component } from \"react\";\r\nimport ExtDataGrid from \"./common/extDataGrid\";\r\nimport { Toolbar, Data, Filters, Editors } from \"react-data-grid-addons\";\r\nimport { range } from \"lodash\";\r\nimport { applyFormula } from \"./utilities/utils\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport DatePicker from \"./functions/DatePicker.js\";\r\n//import {onRowsSelected} from \"../components/functions/OnRowsSelected.js\"\r\nimport {\r\n  faSortAmountDown,\r\n  faColumns,\r\n  // faSyncAlt,\r\n  faShareAlt,\r\n  // faAlignLeft,\r\n  // faFilter,\r\n  faSortDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ErrorMessage from \"./common/ErrorMessage\";\r\nimport ColumnReordering from \"./overlays/column_chooser/Chooser\";\r\nimport Sorting from \"./overlays/sorting/Sorting\";\r\nimport ExportData from \"./overlays/export_data/ExportData\";\r\n\r\nconst {\r\n  DraggableHeader: { DraggableContainer },\r\n} = require(\"react-data-grid-addons\");\r\n\r\nconst { DropDownEditor } = Editors;\r\n\r\nconst defaultParsePaste = (str) => str.split(/\\r\\n|\\n|\\r/).map((row) => row.split(\"\\t\"));\r\nconst selectors = Data.Selectors;\r\nlet swapList = [];\r\nconst { AutoCompleteFilter, NumericFilter } = Filters;\r\nclass spreadsheet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const airportCodes = [];\r\n    this.props.airportCodes.forEach((item) => {\r\n      airportCodes.push({ id: item, value: item });\r\n    });\r\n    this.state = {\r\n      warningStatus: \"\",\r\n      height: 680,\r\n      displayNoRows: \"none\",\r\n      searchIconDisplay: \"\",\r\n      searchValue: \"\",\r\n      filter: {},\r\n      rows: this.props.rows,\r\n      selectedIndexes: [],\r\n      junk: {},\r\n      topLeft: {},\r\n      columnReorderingComponent: null,\r\n      exportComponent: null,\r\n      filteringRows: this.props.rows,\r\n      tempRows: this.props.rows,\r\n      sortingPanelComponent: null,\r\n      count: this.props.rows.length,\r\n      columns: this.props.columns.map((item) => {\r\n        if (item.editor === \"DatePicker\") {\r\n          item.editor = DatePicker;\r\n        } else if (item.editor === \"DropDown\") {\r\n          item.editor = <DropDownEditor options={airportCodes} />;\r\n        } else if (item.editor === \"Text\") {\r\n          item.editor = \"text\";\r\n        } else {\r\n          item.editor = null;\r\n        }\r\n        if (item.filterType === \"numeric\") {\r\n          item.filterRenderer = NumericFilter;\r\n        }\r\n        else {\r\n          item.filterRenderer = AutoCompleteFilter;\r\n        }\r\n        return item;\r\n      }),\r\n    };\r\n    document.addEventListener(\"copy\", this.handleCopy);\r\n    document.addEventListener(\"paste\", this.handlePaste);\r\n    this.handleSearchValue = this.handleSearchValue.bind(this);\r\n    this.clearSearchValue = this.clearSearchValue.bind(this);\r\n    this.handleFilterChange = this.handleFilterChange.bind(this);\r\n\r\n    this.formulaAppliedCols = this.props.columns.filter((item) => {\r\n      return item.formulaApplicable;\r\n    });\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    //Fix for column re-order and pin left issue (functionality was working only after doing a window re-size)\r\n    const resizeEvent = document.createEvent(\"HTMLEvents\");\r\n    resizeEvent.initEvent(\"resize\", true, false);\r\n    window.dispatchEvent(resizeEvent);\r\n  }\r\n  updateRows = (startIdx, newRows) => {\r\n    this.setState((state) => {\r\n      const rows = state.rows.slice();\r\n      for (let i = 0; i < newRows.length; i++) {\r\n        if (startIdx + i < rows.length) {\r\n          rows[startIdx + i] = {\r\n            ...rows[startIdx + i],\r\n            ...newRows[i],\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        rows,\r\n      };\r\n    });\r\n  }\r\n\r\n  rowGetter = (i) => {\r\n    const { rows } = this.state;\r\n    return rows[i];\r\n  };\r\n\r\n  handleCopy = (e) => {\r\n    e.preventDefault();\r\n    const { topLeft, botRight } = this.state;\r\n    const text = range(topLeft.rowIdx, botRight.rowIdx + 1)\r\n      .map((rowIdx) =>\r\n        this.state.columns\r\n          .slice(topLeft.colIdx - 1, botRight.colIdx)\r\n          .map((col) => this.rowGetter(rowIdx)[col.key])\r\n          .join(\"\\t\")\r\n      )\r\n      .join(\"\\n\");\r\n    e.clipboardData.setData(\"text/plain\", text);\r\n  };\r\n\r\n  handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const { topLeft } = this.state;\r\n    const newRows = [];\r\n    const pasteData = defaultParsePaste(e.clipboardData.getData(\"text/plain\"));\r\n    pasteData.forEach((row) => {\r\n      const rowData = {};\r\n      // Merge the values from pasting and the keys from the columns\r\n      this.state.columns.slice(topLeft.colIdx - 1, topLeft.colIdx - 1 + row.length).forEach((col, j) => {\r\n        rowData[col.key] = row[j];\r\n      });\r\n      newRows.push(rowData);\r\n    });\r\n    this.updateRows(topLeft.rowIdx, newRows);\r\n  };\r\n\r\n  setSelection = (args) => {\r\n    this.setState({\r\n      topLeft: {\r\n        rowIdx: args.topLeft.rowIdx,\r\n        colIdx: args.topLeft.idx,\r\n      },\r\n      botRight: {\r\n        rowIdx: args.bottomRight.rowIdx,\r\n        colIdx: args.bottomRight.idx,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleWarningStatus = () => {\r\n    this.setState({ warningStatus: \"invalid\" })\r\n  }\r\n  closeWarningStatus = () => {\r\n    this.setState({ warningStatus: \"\" })\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setState({\r\n      rows: props.rows,\r\n    });\r\n    this.setState({\r\n      status: props.status,\r\n    });\r\n    this.setState({\r\n      textValue: props.textValue,\r\n    });\r\n    this.setState({ count: props.count });\r\n    this.setState({ warningStatus: props.status })\r\n  }\r\n\r\n  /**\r\n * Method To update the cell/cells with the edited values\r\n * @param {*} fromRow is the row from which this edit is performed\r\n * @param {*} toRow is the row upto which this edit is performed\r\n * @param {*} updated is the value of change\r\n * @param {*} action is type of edit action performed\r\n */\r\n  onGridRowsUpdated = ({ fromRow, toRow, updated, action }) => {\r\n    let columnName = \"\";\r\n    const filter = this.formulaAppliedCols.filter((item) => {\r\n      if (updated[item.key] !== null && updated[item.key] !== undefined) {\r\n        columnName = item.key;\r\n        return true;\r\n      } else return false;\r\n    });\r\n\r\n    if (filter.length > 0) {\r\n      updated = applyFormula(updated, columnName);\r\n    }\r\n\r\n    if (action !== \"COPY_PASTE\") {\r\n      this.setState((state) => {\r\n        const rows = state.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n          rows[i] = {\r\n            ...rows[i],\r\n            ...updated,\r\n          };\r\n        }\r\n\r\n        return {\r\n          rows,\r\n        };\r\n      });\r\n      this.setState((state) => {\r\n        const filteringRows = state.filteringRows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n          filteringRows[i] = {\r\n            ...filteringRows[i],\r\n            ...updated,\r\n          };\r\n        }\r\n\r\n        return {\r\n          filteringRows,\r\n        };\r\n      });\r\n      this.setState((state) => {\r\n        const tempRows = state.tempRows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n          tempRows[i] = {\r\n            ...tempRows[i],\r\n            ...updated,\r\n          };\r\n        }\r\n\r\n        return {\r\n          tempRows,\r\n        };\r\n      });\r\n    }\r\n    if (this.props.updateCellData) {\r\n      this.props.updateCellData(this.state.tempRows[fromRow], this.state.tempRows[toRow], updated, action);\r\n    }\r\n  };\r\n\t/**\r\n\t * Method To bulk/individual select of rows\r\n\t * @param {*} rows is the selected row\r\n\t */\r\n  onRowsSelected = (rows) => {\r\n    this.setState({\r\n      selectedIndexes: this.state.selectedIndexes.concat(rows.map((r) => r.rowIdx)),\r\n    });\r\n    if (this.props.selectBulkData) {\r\n      this.props.selectBulkData(rows);\r\n    }\r\n  };\r\n\t/**\r\n\t * Method To bulk/individual deselect of rows\r\n\t * @param {*} rows is the deselected row\r\n\t */\r\n  onRowsDeselected = (rows) => {\r\n    let rowIndexes = rows.map((r) => r.rowIdx);\r\n    this.setState({\r\n      selectedIndexes: this.state.selectedIndexes.filter((i) => rowIndexes.indexOf(i) === -1),\r\n    });\r\n  };\r\n\r\n\t/**\r\n\t * Method To filter the multiple columns\r\n\t * @param {*} value is the  incoming filtering event\r\n\t */\r\n  handleFilterChange = (value) => {\r\n    let junk = this.state.junk;\r\n    if (!(value.filterTerm == null) && !(value.filterTerm.length <= 0)) {\r\n      junk[value.column.key] = value;\r\n    } else {\r\n      delete junk[value.column.key];\r\n    }\r\n    this.setState({ junk });\r\n    const data = this.getrows(this.state.filteringRows, this.state.junk);\r\n    this.setState({\r\n      rows: data,\r\n      tempRows: data,\r\n      count: data.length,\r\n    });\r\n    if (data.length === 0) {\r\n      this.handleWarningStatus();\r\n    }\r\n    else {\r\n      this.closeWarningStatus();\r\n    }\r\n  };\r\n  getrows = (rows, filters) => {\r\n    if (Object.keys(filters).length <= 0) {\r\n      filters = {};\r\n    }\r\n    selectors.getRows({ rows: [], filters: {} });\r\n    return selectors.getRows({ rows: rows, filters: filters });\r\n  };\r\n\r\n  /**\r\n * Method To render the filter values for filtering rows\r\n * @param {*} rows is the row data to be considered for filtering\r\n * @param {*} columnId is the specific columnId for which the row datas are being considered\r\n */\r\n  getValidFilterValues(rows, columnId) {\r\n    return rows\r\n      .map((r) => r[columnId])\r\n      .filter((item, i, a) => {\r\n        return i === a.indexOf(item);\r\n      });\r\n  }\r\n  /**\r\n* Method To sort the rows for a particular column\r\n* @param {*} data is the row datas to be considered for sorting\r\n* @param {*} sortColumn is the specific column for which the row sort is being triggered\r\n* @param {*} sortDirection is the type of sort\r\n*/\r\n  sortRows = (data, sortColumn, sortDirection) => {\r\n    const comparer = (a, b) => {\r\n      if (sortDirection === \"ASC\") {\r\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\r\n      } else if (sortDirection === \"DESC\") {\r\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\r\n      }\r\n    };\r\n    this.setState({\r\n      rows: [...data].sort(comparer),\r\n    });\r\n    return sortDirection === \"NONE\" ? data : this.state.rows;\r\n  };\r\n  /**\r\n     * Method To swap the columns\r\n     * @param {*} source is source column\r\n     * @param {*} target is the target column \r\n     */\r\n  onHeaderDrop = (source, target) => {\r\n    const stateCopy = Object.assign({}, this.state);\r\n    const columnSourceIndex = this.state.columns.findIndex((i) => i.key === source);\r\n    const columnTargetIndex = this.state.columns.findIndex((i) => i.key === target);\r\n\r\n    stateCopy.columns.splice(columnTargetIndex, 0, stateCopy.columns.splice(columnSourceIndex, 1)[0]);\r\n\r\n    const emptyColumns = Object.assign({}, this.state, {\r\n      columns: [],\r\n    });\r\n    this.setState(emptyColumns);\r\n\r\n    const reorderedColumns = Object.assign({}, this.state, {\r\n      columns: stateCopy.columns,\r\n    });\r\n    this.setState(reorderedColumns);\r\n  }\r\n  /**\r\n    * Method To dynamically swap the column from column chooser\r\n    * @param {*} reordered is the swapped array of columns\r\n    */\r\n  handleheaderNameList = (reordered) => {\r\n    swapList = reordered;\r\n  }\r\n  updateTableAsPerRowChooser = (inComingColumnsHeaderList, pinnedColumnsList) => {\r\n    let existingColumnsHeaderList = this.props.columns;\r\n    existingColumnsHeaderList = existingColumnsHeaderList.filter((item) => {\r\n      return inComingColumnsHeaderList.includes(item.name);\r\n    });\r\n    let rePositionedArray = existingColumnsHeaderList;\r\n    let singleHeaderOneList;\r\n    if (pinnedColumnsList.length > 0) {\r\n      pinnedColumnsList\r\n        .slice(0)\r\n        .reverse()\r\n        .map((item, index) => {\r\n          singleHeaderOneList = existingColumnsHeaderList.filter((subItem) => item === subItem.name);\r\n          rePositionedArray = this.array_move(\r\n            existingColumnsHeaderList,\r\n            existingColumnsHeaderList.indexOf(singleHeaderOneList[0]),\r\n            index\r\n          );\r\n        });\r\n    }\r\n    if (swapList.length > 0) {\r\n      swapList\r\n        .map((item, index) => {\r\n          singleHeaderOneList = existingColumnsHeaderList.filter((subItem) => item === subItem.name);\r\n          rePositionedArray = this.array_move(\r\n            existingColumnsHeaderList,\r\n            existingColumnsHeaderList.indexOf(singleHeaderOneList[0]),\r\n            index\r\n          );\r\n        });\r\n    }\r\n\r\n    existingColumnsHeaderList = rePositionedArray;\r\n\t\t/**\r\n       making all the frozen attribute as false for all the columns and then \r\n       setting items of pinnedColumnsList as frozen = true\r\n       */\r\n    existingColumnsHeaderList.map((headerItem, index) => {\r\n      if (headerItem.frozen !== undefined && headerItem.frozen === true) {\r\n        existingColumnsHeaderList[index][\"frozen\"] = false;\r\n      }\r\n      if (pinnedColumnsList.includes(headerItem.name)) {\r\n        existingColumnsHeaderList[index][\"frozen\"] = true;\r\n      }\r\n    });\r\n\r\n    console.log(\"existingColumnsHeaderList \", existingColumnsHeaderList);\r\n\r\n    this.setState({\r\n      columns: existingColumnsHeaderList,\r\n    });\r\n\r\n    this.closeColumnReOrdering();\r\n    swapList=[];\r\n  };\r\n\r\n\t/**\r\n\t * Method To re-position a particular object in an Array from old_index to new_index\r\n\t * @param {*} arr inComing array\r\n\t * @param {*} old_index initial index\r\n\t * @param {*} new_index final index\r\n\t */\r\n  array_move = (arr, old_index, new_index) => {\r\n    if (new_index >= arr.length) {\r\n      var k = new_index - arr.length + 1;\r\n      while (k--) {\r\n        arr.push(undefined);\r\n      }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    return arr;\r\n  };\r\n\r\n\t/**\r\n\t * Method to render the column Selector Pannel\r\n\t */\r\n  columnReorderingPannel = () => {\r\n    var headerNameList = [];\r\n    var existingPinnedHeadersList = [];\r\n    this.state.columns\r\n      .filter((item) => item.frozen !== undefined && item.frozen === true)\r\n      .map((item) => existingPinnedHeadersList.push(item.name));\r\n    this.state.columns.map((item) => headerNameList.push(item.name));\r\n    this.setState({\r\n      columnReorderingComponent: (\r\n        <ColumnReordering\r\n          maxLeftPinnedColumn={this.props.maxLeftPinnedColumn}\r\n          updateTableAsPerRowChooser={this.updateTableAsPerRowChooser}\r\n          headerKeys={headerNameList}\r\n          closeColumnReOrdering={this.closeColumnReOrdering}\r\n          existingPinnedHeadersList={existingPinnedHeadersList}\r\n          handleheaderNameList={this.handleheaderNameList}\r\n          {...this.props}\r\n        />\r\n      ),\r\n    });\r\n  };\r\n\r\n\t/**\r\n\t * Method to stop the render the column Selector Pannel\r\n\t */\r\n  closeColumnReOrdering = () => {\r\n    this.setState({\r\n      columnReorderingComponent: null,\r\n    });\r\n  };\r\n  handleSearchValue = (value) => {\r\n    this.setState({ searchValue: value });\r\n  };\r\n  clearSearchValue = () => {\r\n    this.setState({ searchValue: \"\" });\r\n    this.setState({ filteringRows: this.state.filteringRows });\r\n  };\r\n\r\n  sortingPanel = () => {\r\n    let columnField = [];\r\n    this.state.columns.map((item) => columnField.push(item.name));\r\n    this.setState({\r\n      sortingPanelComponent: <Sorting setTableAsPerSortingParams={(args) =>this.setTableAsPerSortingParams(args)}\r\n      columnFieldValue={columnField} \r\n      closeSorting={this.closeSorting} />,\r\n    });\r\n  };\r\n\r\n  closeSorting = () => {\r\n    this.setState({\r\n      sortingPanelComponent: null,\r\n    });\r\n  };\r\n\r\n  //Export Data Logic\r\n  exportColumnData = () => {\r\n    this.setState({\r\n      exportComponent: (\r\n        <ExportData rows={this.state.rows} columnsList={this.state.columns} closeExport={this.closeExport} />\r\n      ),\r\n    });\r\n  };\r\n\r\n  closeExport = () => {\r\n    this.setState({\r\n      exportComponent: null,\r\n    });\r\n  };\r\n\r\n  setTableAsPerSortingParams = (tableSortList) => {\r\n   \r\n    var existingRows = this.state.rows;\r\n    var sortingOrderNameList = [];\r\n    tableSortList.map((item, index) => {\r\n      var nameOfItem = \"\";\r\n      Object.keys(this.state.rows[0]).map(rowItem=>{\r\n        if(item.sortBy === \"Flight #\" && rowItem === \"flightno\"){\r\n          nameOfItem = \"flightno\";\r\n        }\r\n        else if(rowItem.toLowerCase() === this.toCamelCase(item.sortBy).toLowerCase()){\r\n          nameOfItem= rowItem;\r\n        }\r\n      })\r\n      console.log(nameOfItem)\r\n      var typeOfItem = this.state.rows[0][\r\n        item.sortBy === \"Flight #\" ? \"flightno\" : nameOfItem\r\n      ];\r\n      if (typeof typeOfItem === \"number\") {\r\n        sortingOrderNameList.push({\r\n          name:nameOfItem,\r\n          primer: parseInt,\r\n          reverse: item.order === \"Ascending\" ? false : true,\r\n        });\r\n      } else {\r\n        sortingOrderNameList.push({\r\n          name: nameOfItem,\r\n          reverse: item.order === \"Ascending\" ? false : true,\r\n        });\r\n      }\r\n    });\r\n    existingRows.sort(sort_by(...sortingOrderNameList));\r\n    this.setState({\r\n      rows: existingRows,\r\n    });\r\n\r\n    this.closeSorting();\r\n  };\r\n\r\n  toCamelCase = (str) => {\r\n    return str\r\n      .replace(/\\s(.)/g, function ($1) {\r\n        return $1.toUpperCase();\r\n      })\r\n      .replace(/\\s/g, \"\")\r\n      .replace(/^(.)/, function ($1) {\r\n        return $1.toLowerCase();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='parentDiv'>\r\n          <div className='totalCount'>\r\n            Showing <strong> {this.state.count} </strong> records\r\n\t\t\t\t\t</div>\r\n          <div className='globalSearch'>\r\n            <i className=\"fa fa-search\"></i>\r\n            <FormControl\r\n              className=\"globalSeachInput\"\r\n              type='text'\r\n              placeholder=\"Search\"\r\n              onChange={(e) => {\r\n                this.handleSearchValue(e.target.value);\r\n                this.props.globalSearchLogic(e, this.state.tempRows);\r\n              }}\r\n              value={this.state.searchValue}\r\n            />\r\n          </div>\r\n          {/* <div className=\"filterIcons\">\r\n            <FontAwesomeIcon icon={faFilter} />\r\n          </div> */}\r\n          <div className='filterIcons' onClick={this.sortingPanel}>\r\n            <FontAwesomeIcon title='Group Sort' icon={faSortAmountDown} />\r\n            <FontAwesomeIcon icon={faSortDown} className='filterArrow' />\r\n          </div>\r\n          {this.state.sortingPanelComponent}\r\n          <div className='filterIcons' onClick={this.columnReorderingPannel}>\r\n            <FontAwesomeIcon title='Column Chooser' icon={faColumns} />\r\n            <FontAwesomeIcon icon={faSortDown} className='filterArrow' />\r\n          </div>\r\n          {this.state.columnReorderingComponent}\r\n          <div className='filterIcons'>\r\n            <FontAwesomeIcon title='Export' icon={faShareAlt} onClick={this.exportColumnData} />\r\n          </div>\r\n          {this.state.exportComponent}\r\n          {/* <div className=\"filterIcons\">\r\n            <FontAwesomeIcon title=\"Reload\" icon={faSyncAlt} />\r\n          </div> */}\r\n          {/* <div className=\"filterIcons\">\r\n            <FontAwesomeIcon icon={faAlignLeft} />\r\n          </div> */}\r\n        </div>\r\n        <ErrorMessage\r\n          className='errorDiv'\r\n          status={this.state.warningStatus}\r\n          closeWarningStatus={(e) => {\r\n            this.props.closeWarningStatus();\r\n            this.closeWarningStatus();\r\n          }}\r\n          clearSearchValue={this.clearSearchValue}\r\n        />\r\n        <DraggableContainer className='gridDiv' onHeaderDrop={this.onHeaderDrop}>\r\n          <ExtDataGrid\r\n            toolbar={<Toolbar enableFilter={true} />}\r\n            getValidFilterValues={(columnKey) => this.getValidFilterValues(this.state.filteringRows, columnKey)}\r\n            minHeight={this.state.height}\r\n            columns={this.state.columns}\r\n            rowGetter={(i) => this.state.rows[i]}\r\n            rowsCount={this.state.rows.length}\r\n            onGridRowsUpdated={this.onGridRowsUpdated}\r\n            enableCellSelect={true}\r\n            onClearFilters={() => {\r\n              this.setState({ junk: {} });\r\n            }}\r\n            onColumnResize={(idx, width) => console.log(`Column ${idx} has been resized to ${width}`)}\r\n            onAddFilter={(filter) => this.handleFilterChange(filter)}\r\n            rowSelection={{\r\n              showCheckbox: true,\r\n              enableShiftSelect: true,\r\n              onRowsSelected: this.onRowsSelected,\r\n              onRowsDeselected: this.onRowsDeselected,\r\n              selectBy: {\r\n                indexes: this.state.selectedIndexes,\r\n              },\r\n            }}\r\n            onGridSort={(sortColumn, sortDirection) => this.sortRows(this.state.filteringRows, sortColumn, sortDirection)}\r\n          // cellRangeSelection={{\r\n          //   onComplete: this.setSelection,\r\n          // }}\r\n          />\r\n        </DraggableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Global Method To Sort The Grid.\r\n */\r\nvar sort_by;\r\n(function () {\r\n  // utility functions\r\n  var default_cmp = function (a, b) {\r\n      if (a == b) return 0;\r\n      return a < b ? -1 : 1;\r\n    },\r\n    getCmpFunc = function (primer, reverse) {\r\n      var cmp = default_cmp;\r\n      if (primer) {\r\n        cmp = function (a, b) {\r\n          return default_cmp(primer(a), primer(b));\r\n        };\r\n      }\r\n      if (reverse) {\r\n        return function (a, b) {\r\n          return -1 * cmp(a, b);\r\n        };\r\n      }\r\n      return cmp;\r\n    };\r\n\r\n  // actual implementation\r\n  sort_by = function () {\r\n    var fields = [],\r\n      n_fields = arguments.length,\r\n      field,\r\n      name,\r\n      reverse,\r\n      cmp;\r\n\r\n    // preprocess sorting options\r\n    for (var i = 0; i < n_fields; i++) {\r\n      field = arguments[i];\r\n      if (typeof field === \"string\") {\r\n        name = field;\r\n        cmp = default_cmp;\r\n      } else {\r\n        name = field.name;\r\n        cmp = getCmpFunc(field.primer, field.reverse);\r\n      }\r\n      fields.push({\r\n        name: name,\r\n        cmp: cmp,\r\n      });\r\n    }\r\n\r\n    return function (A, B) {\r\n      var a, b, name, cmp, result;\r\n      for (var i = 0, l = n_fields; i < l; i++) {\r\n        result = 0;\r\n        field = fields[i];\r\n        name = field.name;\r\n        cmp = field.cmp;\r\n\r\n        result = cmp(A[name], B[name]);\r\n        if (result !== 0) break;\r\n      }\r\n      return result;\r\n    };\r\n  };\r\n})();\r\n\r\nexport default spreadsheet;\r\n"],"names":["ExtDataGrid","componentDidMount","_mounted","dataGridComponent","document","getElementsByClassName","window","addEventListener","metricsUpdated","props","cellRangeSelection","onWindowMouseUp","componentWillUnmount","removeEventListener","ReactDataGrid","applyFormula","obj","columnName","item","toString","charAt","operation","split","value","substring","length","reduce","a","b","Number","Math","min","apply","max","console","log","DatePicker","state","Date","input","getInputNode","bind","getValue","onValueChanged","updated","date","dateTimeFormat","Intl","DateTimeFormat","year","month","day","formatToParts","column","key","ev","setState","target","render","React","ref","Component","SEARCH_NOT_FOUNT_ERROR","ErrorMessage","useState","status","setStatus","useEffect","FontAwesomeIcon","faTimes","e","closeWarningStatus","clearSearchValue","ItemTypes","COLUMN","style","cursor","ColumnItem","id","text","moveColumn","findColumn","originalIndex","index","useDrag","type","collect","monitor","isDragging","end","dropResult","getItem","droppedId","didDrop","drag","useDrop","accept","canDrop","hover","draggedId","overIndex","drop","opacity","node","ColumnsList","columnsArray","columns","setColumns","atIndex","update","$splice","values","temp","forEach","push","handleReorderList","filter","c","indexOf","display","flexWrap","map","ColumnReordering","resetColumnReorderList","columnReorderEntityList","name","leftPinnedColumList","isAllSelected","selectAllToColumnReOrderList","existingColumnReorderEntityList","isExistingAllSelect","addToColumnReorderEntityList","typeToBeAdded","existingLeftPinnedList","includes","indexOfInsertion","columnSelectList","findIndex","splice","filterColumnReorderList","searchKey","String","toLowerCase","existingList","filtererdColumnReorderList","createColumnsArrayFromProps","colsList","faAlignJustify","maxLeftPinnedColumn","reArrangeLeftPinnedColumn","columHeaderName","unshift","subItem","reordered","handleheaderNameList","headerKeys","existingPinnedHeadersList","setWrapperRef","handleClickOutside","wrapperRef","event","contains","closeColumnReOrdering","color","DndProvider","TouchBackend","enableMouseEvents","updateTableAsPerRowChooser","CARD","Card","moveCard","findCard","SortingList","sortsArray","cards","setCards","card","App","add","rowList","existingSortingOrderList","sortingOrderList","sortBy","order","sortOn","copy","i","JSON","parse","stringify","clearAll","remove","rowsValue","row","captureSortingFeildValues","columnFieldValue","faCopy","faTrash","sortingKey","undefined","updateTableAsPerSortCondition","unique","Set","showError","some","element","size","errorMessage","setTableAsPerSortingParams","rows","closeSorting","clickTag","faPlus","downLaodFileType","ExportData","resetColumnExportList","columnEntityList","selectAllToColumnList","columnsList","addToColumnEntityList","existingColumnEntityList","selectDownLoadType","checked","exportRowData","columnVlaueList","keys","Object","getOwnPropertyNames","filteredColumnVal","filteredRow","downloadPDF","downloadXLSFile","downloadCSVFile","unit","orientation","marginLeft","doc","jsPDF","setFontSize","title","headers","dataValues","content","startY","head","body","autoTable","save","fileType","fileExtension","fileName","ws","XLSX","json_to_sheet","wb","Sheets","data","SheetNames","excelBuffer","bookType","Blob","FileSaver","columnSearchLogic","filteredRows","columnValueList","exportValidation","columnLength","fileLength","warning","closeExport","faFilePdf","faFileExcel","faFileCsv","require","DraggableContainer","DraggableHeader","DropDownEditor","Editors","defaultParsePaste","str","selectors","Data","Selectors","swapList","AutoCompleteFilter","Filters","NumericFilter","spreadsheet","updateRows","startIdx","newRows","slice","rowGetter","handleCopy","preventDefault","topLeft","botRight","range","rowIdx","colIdx","col","join","clipboardData","setData","handlePaste","pasteData","getData","rowData","j","setSelection","args","idx","bottomRight","handleWarningStatus","warningStatus","onGridRowsUpdated","fromRow","toRow","action","formulaAppliedCols","filteringRows","tempRows","updateCellData","onRowsSelected","selectedIndexes","concat","r","selectBulkData","onRowsDeselected","rowIndexes","handleFilterChange","junk","filterTerm","getrows","count","filters","getRows","sortRows","sortColumn","sortDirection","comparer","sort","onHeaderDrop","source","stateCopy","assign","columnSourceIndex","columnTargetIndex","emptyColumns","reorderedColumns","inComingColumnsHeaderList","pinnedColumnsList","existingColumnsHeaderList","rePositionedArray","singleHeaderOneList","reverse","array_move","headerItem","frozen","arr","old_index","new_index","k","columnReorderingPannel","headerNameList","columnReorderingComponent","handleSearchValue","searchValue","sortingPanel","columnField","sortingPanelComponent","Sorting","exportColumnData","exportComponent","tableSortList","existingRows","sortingOrderNameList","nameOfItem","rowItem","toCamelCase","typeOfItem","primer","parseInt","sort_by","replace","$1","toUpperCase","airportCodes","height","displayNoRows","searchIconDisplay","editor","filterType","filterRenderer","formulaApplicable","componentDidUpdate","prevProps","resizeEvent","createEvent","initEvent","dispatchEvent","componentWillReceiveProps","textValue","getValidFilterValues","columnId","FormControl","globalSearchLogic","faSortAmountDown","faSortDown","faColumns","faShareAlt","Toolbar","columnKey","width","showCheckbox","enableShiftSelect","selectBy","indexes","default_cmp","getCmpFunc","cmp","fields","n_fields","arguments","field","A","B","result","l"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIMA;;;;;;;;;SACJC,oBAAA,6BAAoB;AAClB,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKC,iBAAL,GAAyBC,QAAQ,CAACC,sBAAT,CACvB,qBADuB,EAEvB,CAFuB,CAAzB;AAGAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,cAAvC;;AACA,QAAI,KAAKC,KAAL,CAAWC,kBAAf,EAAmC;AACjC,WAAKP,iBAAL,CAAuBI,gBAAvB,CAAwC,SAAxC,EAAmD,KAAKI,eAAxD;AACD;;AACD,SAAKH,cAAL;AACD;;SAEDI,uBAAA,gCAAuB;AACrB,SAAKV,QAAL,GAAgB,KAAhB;AACAI,IAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,cAA1C;AACA,SAAKL,iBAAL,CAAuBU,mBAAvB,CAA2C,SAA3C,EAAsD,KAAKF,eAA3D;AACD;;;EAjBuBG;;ACJnB,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,UAAN,EAAqB;AAC/C,MAAIC,IAAI,GAAGF,GAAG,CAACC,UAAD,CAAH,CAAgBE,QAAhB,EAAX;;AACA,MAAID,IAAI,IAAIA,IAAI,CAACE,MAAL,CAAY,CAAZ,MAAmB,GAA/B,EAAoC;AAClC,QAAIC,SAAS,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,CAAhB;AACA,QAAIC,KAAK,GAAGF,SAAS,CAAC,CAAD,CAAT,CACTG,SADS,CACC,CADD,EACIH,SAAS,CAAC,CAAD,CAAT,CAAaI,MAAb,GAAsB,CAD1B,EAETH,KAFS,CAEH,MAFG,CAAZ;;AAGA,YAAQD,SAAS,CAAC,CAAD,CAAjB;AACE,WAAK,MAAL;AACA,WAAK,MAAL;AACA,WAAK,MAAL;AACA,WAAK,MAAL;AACEL,QAAAA,GAAG,CAACC,UAAD,CAAH,GAAkBM,KAAK,CAACG,MAAN,CAAa,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC7C,iBAAOC,MAAM,CAACF,CAAD,CAAN,GAAYE,MAAM,CAACD,CAAD,CAAzB;AACD,SAFiB,CAAlB;AAGA;;AACF,WAAK,MAAL;AACA,WAAK,MAAL;AACEZ,QAAAA,GAAG,CAACC,UAAD,CAAH,GAAkBM,KAAK,CAACG,MAAN,CAAa,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC7C,iBAAOC,MAAM,CAACF,CAAD,CAAN,GAAYE,MAAM,CAACD,CAAD,CAAzB;AACD,SAFiB,CAAlB;AAGA;;AACF,WAAK,MAAL;AACA,WAAK,MAAL;AACA,WAAK,OAAL;AACA,WAAK,OAAL;AACEZ,QAAAA,GAAG,CAACC,UAAD,CAAH,GAAkBM,KAAK,CAACG,MAAN,CAAa,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC7C,iBAAOC,MAAM,CAACF,CAAD,CAAN,GAAYE,MAAM,CAACD,CAAD,CAAzB;AACD,SAFiB,CAAlB;AAGA;;AACF,WAAK,MAAL;AACA,WAAK,MAAL;AACEZ,QAAAA,GAAG,CAACC,UAAD,CAAH,GAAkBa,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeF,IAAf,EAAqBP,KAArB,CAAlB;AACA;;AACF,WAAK,MAAL;AACA,WAAK,MAAL;AACEP,QAAAA,GAAG,CAACC,UAAD,CAAH,GAAkBa,IAAI,CAACG,GAAL,CAASD,KAAT,CAAeF,IAAf,EAAqBP,KAArB,CAAlB;AACA;;AACF;AACEW,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAhCJ;AAkCD;;AACD,SAAOnB,GAAP;AACD,CA3CM;;ICEcoB;;;AACjB,sBAAY3B,KAAZ,EAAmB;AAAA;;AACjB,wCAAMA,KAAN;AACA,UAAK4B,KAAL,GAAa;AACXd,MAAAA,KAAK,EAAE,IAAIe,IAAJ;AADI,KAAb;AAIA,UAAKC,KAAL,GAAa,IAAb;AAEA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB;AACA,UAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,+BAAtB;AAViB;AAWlB;;;;SAGDD,eAAA,wBAAe;AACb,WAAO,KAAKD,KAAZ;AACD;;SAEDG,WAAA,oBAAW;AACT,QAAIE,OAAO,GAAG,EAAd;AACA,QAAIC,IAAJ;AACAA,IAAAA,IAAI,GAAG,IAAIP,IAAJ,CAAS,KAAKD,KAAL,CAAWd,KAApB,CAAP;AACA,QAAMuB,cAAc,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,KAAK,EAAE,OAA1B;AAAmCC,MAAAA,GAAG,EAAE;AAAxC,KAAjC,CAAvB;;AAJS,gCAKuDL,cAAc,CAACM,aAAf,CAA6BP,IAA7B,CALvD;AAAA,QAKOK,KALP,4BAKA3B,KALA;AAAA,QAK2B4B,GAL3B,4BAKoB5B,KALpB;AAAA,QAK6C0B,IAL7C,4BAKsC1B,KALtC;;AAMTqB,IAAAA,OAAO,CAAC,KAAKnC,KAAL,CAAW4C,MAAX,CAAkBC,GAAnB,CAAP,GAAoCH,GAApC,SAA2CD,KAA3C,SAAoDD,IAApD;AACA,WAAOL,OAAP;AAED;;SAEDD,iBAAA,wBAAeY,EAAf,EAAmB;AACjB,SAAKC,QAAL,CAAc;AAAEjC,MAAAA,KAAK,EAAEgC,EAAE,CAACE,MAAH,CAAUlC;AAAnB,KAAd;AACD;;SAEDmC,SAAA,kBAAS;AAAA;;AACP,wBACEC,uDACEA;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,GAAG,EAAE,aAACC,IAAD,EAAS;AACZ,QAAA,MAAI,CAACrB,KAAL,GAAaqB,IAAb;AACD,OAJH;AAKE,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWd,KALpB;AAME,MAAA,QAAQ,EAAE,KAAKoB;AANjB,MADF,CADF;AAYD;;;EA/CmCgB,cAAK,CAACE;;ACFvC,IAAMC,sBAAsB,GAAG,mBAA/B;;ACKP,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACtD,KAAD,EAAW;AAAA,kBAEFuD,cAAQ,CAACvD,KAAK,CAACwD,MAAP,CAFN;AAAA,MAEvBA,MAFuB;AAAA,MAEfC,SAFe;;AAG9BC,EAAAA,eAAS,CACP,YAAM;AACJD,IAAAA,SAAS,CAACzD,KAAK,CAACwD,MAAP,CAAT;AACD,GAHM,EAIL,CAACxD,KAAK,CAACwD,MAAP,CAJK,CAAT;;AAKA,MAAIA,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACEN;AAAK,MAAA,EAAE,EAAC;AAAR,oBACEA;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,IAAI,EAAC;AAAzC,OACGG,sBADH,CADF,eAIEH;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,6BAACS,gCAAD;AAAiB,MAAA,IAAI,EAAEC,yBAAvB;AACE,MAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACd7D,QAAAA,KAAK,CAAC8D,kBAAN;AACA9D,QAAAA,KAAK,CAAC+D,gBAAN;AACD;AAJH,MADF,CAJF,CADF;AAcD,GAfD,MAeO,oBAAOb,yCAAP;AACR,CAxBD;;ACLO,IAAMc,SAAS,GAAG;AACrBC,EAAAA,MAAM,EAAE;AADa,CAAlB;;ACIP,IAAMC,KAAK,GAAG;AACbC,EAAAA,MAAM,EAAE;AADK,CAAd;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA0C;AAAA,MAAvCC,EAAuC,QAAvCA,EAAuC;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,MAA7BC,UAA6B,QAA7BA,UAA6B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC5D,MAAMC,aAAa,GAAGD,UAAU,CAACH,EAAD,CAAV,CAAeK,KAArC;;AAD4D,iBAG7BC,gBAAO,CAAC;AACtClE,IAAAA,IAAI,EAAE;AAAEmE,MAAAA,IAAI,EAAEZ,SAAS,CAACC,MAAlB;AAA0BI,MAAAA,EAAE,EAAFA,EAA1B;AAA8BI,MAAAA,aAAa,EAAbA;AAA9B,KADgC;AAEtCI,IAAAA,OAAO,EAAE,iBAACC,OAAD;AAAA,aAAc;AACtBC,QAAAA,UAAU,EAAED,OAAO,CAACC,UAAR;AADU,OAAd;AAAA,KAF6B;AAKtCC,IAAAA,GAAG,EAAE,aAACC,UAAD,EAAaH,OAAb,EAAyB;AAAA,6BACYA,OAAO,CAACI,OAAR,EADZ;AAAA,UACjBC,SADiB,oBACrBd,EADqB;AAAA,UACNI,aADM,oBACNA,aADM;;AAE7B,UAAMW,OAAO,GAAGN,OAAO,CAACM,OAAR,EAAhB;;AACA,UAAI,CAACA,OAAL,EAAc;AACbb,QAAAA,UAAU,CAACY,SAAD,EAAYV,aAAZ,CAAV;AACA;AACD;AAXqC,GAAD,CAHsB;AAAA,MAGnDM,UAHmD,eAGnDA,UAHmD;AAAA,MAGrCM,IAHqC;;AAAA,iBAiB3CC,gBAAO,CAAC;AACxBC,IAAAA,MAAM,EAAEvB,SAAS,CAACC,MADM;AAExBuB,IAAAA,OAAO,EAAE;AAAA,aAAM,KAAN;AAAA,KAFe;AAGxBC,IAAAA,KAHwB,wBAGC;AAAA,UAAbC,SAAa,SAAjBrB,EAAiB;;AACxB,UAAIqB,SAAS,KAAKrB,EAAlB,EAAsB;AAAA,0BACQG,UAAU,CAACH,EAAD,CADlB;AAAA,YACNsB,SADM,eACbjB,KADa;;AAErBH,QAAAA,UAAU,CAACmB,SAAD,EAAYC,SAAZ,CAAV;AACA;AACD;AARuB,GAAD,CAjBoC;AAAA,MAiBnDC,IAjBmD;;AA4B5D,MAAMC,OAAO,GAAGd,UAAU,GAAG,GAAH,GAAS,CAAnC;AAEA,sBACC7B;AAAK,IAAA,GAAG,EAAE,aAAC4C,IAAD;AAAA,aAAUT,IAAI,CAACO,IAAI,CAACE,IAAD,CAAL,CAAd;AAAA,KAAV;AAAsC,IAAA,KAAK,eAAO5B,KAAP;AAAc2B,MAAAA,OAAO,EAAPA;AAAd;AAA3C,KACEvB,IADF,CADD;AAKA,CAnCD;;ACFA,IAAMyB,WAAW,GAAG,SAAdA,WAAc,CAAC/F,KAAD,EAAW;AAAA,kBACAuD,cAAQ,WAAKvD,KAAK,CAACgG,YAAX,EADR;AAAA,MACvBC,OADuB;AAAA,MACdC,UADc;;AAG9B,MAAM3B,UAAU,GAAG,SAAbA,UAAa,CAACF,EAAD,EAAK8B,OAAL,EAAiB;AAAA,sBAET3B,UAAU,CAACH,EAAD,CAFD;AAAA,QAE3BzB,MAF2B,eAE3BA,MAF2B;AAAA,QAEnB8B,KAFmB,eAEnBA,KAFmB;;AAGnCwB,IAAAA,UAAU,CACTE,MAAM,CAACH,OAAD,EAAU;AACfI,MAAAA,OAAO,EAAE,CACR,CAAC3B,KAAD,EAAQ,CAAR,CADQ,EAER,CAACyB,OAAD,EAAU,CAAV,EAAavD,MAAb,CAFQ;AADM,KAAV,CADG,CAAV;AAQA,QAAI0D,MAAM,GAAG,EAAb;AACA,QAAIC,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,GAAGH,MAAM,CAACH,OAAD,EAAU;AACtBI,MAAAA,OAAO,EAAE,CACR,CAAC3B,KAAD,EAAQ,CAAR,CADQ,EAER,CAACyB,OAAD,EAAU,CAAV,EAAavD,MAAb,CAFQ;AADa,KAAV,CAAb;AAMA2D,IAAAA,IAAI,CAACC,OAAL,CAAa,UAAC/F,IAAD,EAAU;AACtB6F,MAAAA,MAAM,CAACG,IAAP,CAAYhG,IAAI,CAAC4D,EAAjB;AACA,KAFD;AAIArE,IAAAA,KAAK,CAAC0G,iBAAN,CAAwBJ,MAAxB;AACA,GAxBD;;AA0BA,MAAM9B,UAAU,GAAG,SAAbA,UAAa,CAACH,EAAD,EAAQ;AAC1B,QAAMzB,MAAM,GAAGqD,OAAO,CAACU,MAAR,CAAe,UAACC,CAAD;AAAA,aAAO,KAAGA,CAAC,CAACvC,EAAL,KAAcA,EAArB;AAAA,KAAf,EAAwC,CAAxC,CAAf;AACA,WAAO;AACNzB,MAAAA,MAAM,EAANA,MADM;AAEN8B,MAAAA,KAAK,EAAEuB,OAAO,CAACY,OAAR,CAAgBjE,MAAhB;AAFD,KAAP;AAIA,GAND;;AA7B8B,iBAqCb0C,gBAAO,CAAC;AAAEC,IAAAA,MAAM,EAAEvB,SAAS,CAACC;AAApB,GAAD,CArCM;AAAA,MAqCrB2B,IArCqB;;AAuC9B1C,EAAAA,cAAK,CAACQ,SAAN,CAAgB,YAAM;AACrBwC,IAAAA,UAAU,CAAClG,KAAK,CAACgG,YAAP,CAAV;AACA,GAFD,EAEG,CAAChG,KAAK,CAACgG,YAAP,CAFH;AAIA,sBACC9C,6BAACA,cAAD,CAAO,QAAP,qBACCA;AAAK,IAAA,GAAG,EAAE0C,IAAV;AAAgB,IAAA,KAAK,EAAE;AAAEkB,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B;AAAvB,KACEd,OAAO,CAACe,GAAR,CAAY,UAACpE,MAAD;AAAA,wBACZM,6BAAC,UAAD;AACC,MAAA,GAAG,EAAEN,MAAM,CAACyB,EADb;AAEC,MAAA,EAAE,OAAKzB,MAAM,CAACyB,EAFf;AAGC,MAAA,IAAI,EAAEzB,MAAM,CAAC0B,IAHd;AAIC,MAAA,UAAU,EAAEC,UAJb;AAKC,MAAA,UAAU,EAAEC;AALb,MADY;AAAA,GAAZ,CADF,CADD,CADD;AAeA,CA1DD;;ICCMyC;;;AACJ,4BAAYjH,KAAZ,EAAmB;AAAA;;AACjB,wCAAMA,KAAN;;AADiB,UAiCnBkH,sBAjCmB,GAiCM,YAAM;AAC7B,YAAKnE,QAAL,CAAc;AACZoE,QAAAA,uBAAuB,EAAE,MAAKnH,KAAL,CAAWiG,OAAX,CAAmBe,GAAnB,CAAuB,UAACvG,IAAD;AAAA,iBAAUA,IAAI,CAAC2G,IAAf;AAAA,SAAvB,CADb;AAEZC,QAAAA,mBAAmB,EAAE,EAFT;AAGZC,QAAAA,aAAa,EAAE;AAHH,OAAd;AAKD,KAvCkB;;AAAA,UA4CnBC,4BA5CmB,GA4CY,YAAM;AACnC,YAAKL,sBAAL;;AACA,UAAIM,+BAA+B,GAAG,MAAK5F,KAAL,CAAWuF,uBAAjD;AACA,UAAIM,mBAAmB,GAAG,MAAK7F,KAAL,CAAW0F,aAArC;;AACA,UAAI,CAACG,mBAAL,EAA0B;AACxBD,QAAAA,+BAA+B,GAAG,MAAKxH,KAAL,CAAWiG,OAAX,CAAmBe,GAAnB,CAChC,UAACvG,IAAD;AAAA,iBAAUA,IAAI,CAAC2G,IAAf;AAAA,SADgC,CAAlC;AAGAK,QAAAA,mBAAmB,GAAG,IAAtB;AACD,OALD,MAKO;AACLD,QAAAA,+BAA+B,GAAG,EAAlC;AACAC,QAAAA,mBAAmB,GAAG,KAAtB;AACD;;AACD,YAAK1E,QAAL,CAAc;AACZoE,QAAAA,uBAAuB,EAAEK,+BADb;AAEZF,QAAAA,aAAa,EAAEG,mBAFH;AAGZJ,QAAAA,mBAAmB,EAAE;AAHT,OAAd;AAKD,KA9DkB;;AAAA,UAoEnBK,4BApEmB,GAoEY,UAACC,aAAD,EAAmB;AAChD,UAAIH,+BAA+B,GAAG,MAAK5F,KAAL,CAAWuF,uBAAjD;AACA,UAAIS,sBAAsB,GAAG,MAAKhG,KAAL,CAAWyF,mBAAxC;;AACA,UAAI,CAACG,+BAA+B,CAACK,QAAhC,CAAyCF,aAAzC,CAAL,EAA8D;AAC5D,YAAIG,gBAAgB,GAAG,MAAKlG,KAAL,CAAWmG,gBAAX,CAA4BC,SAA5B,CACrB,UAACvH,IAAD;AAAA,iBAAUA,IAAI,KAAKkH,aAAnB;AAAA,SADqB,CAAvB;;AAGA,eAAOG,gBAAgB,GAAG,CAA1B,EAA6B;AAC3B,cACEN,+BAA+B,CAACK,QAAhC,CACE,MAAKjG,KAAL,CAAWmG,gBAAX,CAA4BD,gBAAgB,GAAG,CAA/C,CADF,CADF,EAIE;AACA,gBACE,CAACF,sBAAsB,CAACC,QAAvB,CACC,MAAKjG,KAAL,CAAWmG,gBAAX,CAA4BD,gBAAgB,GAAG,CAA/C,CADD,CADH,EAIE;AACAA,cAAAA,gBAAgB,GAAGN,+BAA+B,CAACQ,SAAhC,CACjB,UAACvH,IAAD;AAAA,uBACEA,IAAI,KAAK,MAAKmB,KAAL,CAAWmG,gBAAX,CAA4BD,gBAAgB,GAAG,CAA/C,CADX;AAAA,eADiB,CAAnB;AAIAA,cAAAA,gBAAgB,GAAGA,gBAAgB,GAAG,CAAtC;AACA;AACD,aAXD,MAWO;AACLA,cAAAA,gBAAgB,GAAGA,gBAAgB,GAAG,CAAtC;AACD;AACF,WAnBD,MAmBO;AACLA,YAAAA,gBAAgB,GAAGA,gBAAgB,GAAG,CAAtC;AACD;AACF;;AACDN,QAAAA,+BAA+B,CAACS,MAAhC,CACEH,gBADF,EAEE,CAFF,EAGEH,aAHF;AAKD,OAjCD,MAiCO;AACLH,QAAAA,+BAA+B,GAAGA,+BAA+B,CAACb,MAAhC,CAChC,UAAClG,IAAD,EAAU;AACR,cAAIA,IAAI,KAAKkH,aAAb,EAA4B,OAAOlH,IAAP;AAC7B,SAH+B,CAAlC;;AAKA,YAAImH,sBAAsB,CAACC,QAAvB,CAAgCF,aAAhC,CAAJ,EAAoD;AAClDC,UAAAA,sBAAsB,GAAGA,sBAAsB,CAACjB,MAAvB,CACvB,UAAClG,IAAD;AAAA,mBAAUA,IAAI,KAAKkH,aAAnB;AAAA,WADuB,CAAzB;AAGD;AACF;;AACD,YAAK5E,QAAL,CAAc;AACZoE,QAAAA,uBAAuB,EAAEK,+BADb;AAEZF,QAAAA,aAAa,EAAE,KAFH;AAGZD,QAAAA,mBAAmB,EAAEO;AAHT,OAAd;AAKD,KAzHkB;;AAAA,UA+HnBM,uBA/HmB,GA+HO,UAACrE,CAAD,EAAO;AAC/B,UAAIsE,SAAS,GAAGC,MAAM,CAACvE,CAAC,CAACb,MAAF,CAASlC,KAAV,CAAN,CAAuBuH,WAAvB,EAAhB;;AACA,UAAIC,YAAY,GAAG,MAAKtI,KAAL,CAAWiG,OAAX,CAAmBe,GAAnB,CAAuB,UAACvG,IAAD;AAAA,eAAUA,IAAI,CAAC2G,IAAf;AAAA,OAAvB,CAAnB;;AACA,UAAImB,0BAA0B,GAAG,EAAjC;;AACA,UAAIJ,SAAS,CAACnH,MAAV,GAAmB,CAAvB,EAA0B;AACxBuH,QAAAA,0BAA0B,GAAGD,YAAY,CAAC3B,MAAb,CAAoB,UAAClG,IAAD,EAAU;AACzD,iBAAOA,IAAI,CAAC4H,WAAL,GAAmBR,QAAnB,CAA4BM,SAA5B,CAAP;AACD,SAF4B,CAA7B;AAGD,OAJD,MAIO;AACLI,QAAAA,0BAA0B,GAAG,MAAKvI,KAAL,CAAWiG,OAAX,CAAmBe,GAAnB,CAAuB,UAACvG,IAAD;AAAA,iBAAUA,IAAI,CAAC2G,IAAf;AAAA,SAAvB,CAA7B;AACD;;AACD,YAAKrE,QAAL,CAAc;AACZgF,QAAAA,gBAAgB,EAAEQ;AADN,OAAd;AAGD,KA7IkB;;AAAA,UA+InBC,2BA/ImB,GA+IW,UAACC,QAAD,EAAc;AAC1C,aAAOA,QAAQ,CAACzB,GAAT,CAAa,UAACvG,IAAD,EAAU;AAC5B,eAAO;AACL4D,UAAAA,EAAE,EAAE5D,IADC;AAEL6D,UAAAA,IAAI,eACFpB;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAiC,YAAA,GAAG,EAAEzC;AAAtC,0BACEyC;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA,6BAACS,gCAAD;AAAiB,YAAA,IAAI,EAAE+E;AAAvB,YADF,CADF,eAIExF;AAAK,YAAA,SAAS,EAAC;AAAf,aAAwCzC,IAAxC,CAJF,eAKEyC;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,OAAO,EAAE,MAAKtB,KAAL,CAAWyF,mBAAX,CAA+BQ,QAA/B,CAAwCpH,IAAxC,CAFX;AAGE,YAAA,QAAQ,EACN,MAAKmB,KAAL,CAAW+G,mBAAX,GACE,MAAK/G,KAAL,CAAWyF,mBAAX,CAA+BrG,MADjC,IAEA,CAFA,GAGI,MAAKY,KAAL,CAAWyF,mBAAX,CAA+BQ,QAA/B,CAAwCpH,IAAxC,IACE,KADF,GAEE,IALN,GAMI,KAVR;AAYE,YAAA,QAAQ,EAAE;AAAA,qBAAM,MAAKmI,yBAAL,CAA+BnI,IAA/B,CAAN;AAAA;AAZZ,YADF,CADF,eAiBEyC;AAAK,YAAA,SAAS,EAAC;AAAf,wBAjBF,CALF;AAHG,SAAP;AA8BD,OA/BM,CAAP;AAgCD,KAhLkB;;AAAA,UAsLnB0F,yBAtLmB,GAsLS,UAACC,eAAD,EAAqB;AAC/C,UAAIjB,sBAAsB,GAAG,MAAKhG,KAAL,CAAWyF,mBAAxC;AACA,UAAIG,+BAA+B,GAAG,MAAK5F,KAAL,CAAWuF,uBAAjD;;AACA,UAAI,CAACS,sBAAsB,CAACC,QAAvB,CAAgCgB,eAAhC,CAAL,EAAuD;AACrDjB,QAAAA,sBAAsB,CAACkB,OAAvB,CAA+BD,eAA/B;AACD,OAFD,MAEO;AACLjB,QAAAA,sBAAsB,GAAGA,sBAAsB,CAACjB,MAAvB,CACvB,UAAClG,IAAD;AAAA,iBAAUA,IAAI,KAAKoI,eAAnB;AAAA,SADuB,CAAzB;AAGD;;AACD,YAAK9F,QAAL,CAAc;AACZsE,QAAAA,mBAAmB,EAAEO;AADT,OAAd;;AAIAA,MAAAA,sBAAsB,CAACZ,GAAvB,CAA2B,UAACvG,IAAD,EAAU;AACnC+G,QAAAA,+BAA+B,GAAGA,+BAA+B,CAACb,MAAhC,CAChC,UAACoC,OAAD;AAAA,iBAAaA,OAAO,KAAKtI,IAAzB;AAAA,SADgC,CAAlC;AAGA+G,QAAAA,+BAA+B,CAACsB,OAAhC,CAAwCrI,IAAxC;AACD,OALD;;AAMA,YAAKsC,QAAL,CAAc;AACZoE,QAAAA,uBAAuB,EAAEK;AADb,OAAd;AAGD,KA7MkB;;AAAA,UA8MnBd,iBA9MmB,GA8MC,UAACsC,SAAD,EAAe;AACjC,YAAKhJ,KAAL,CAAWiJ,oBAAX,CAAgCD,SAAhC;AACD,KAhNkB;;AAEjB,UAAKpH,KAAL,GAAa;AACXuF,MAAAA,uBAAuB,EAAE,MAAKnH,KAAL,CAAWkJ,UADzB;AAEXnB,MAAAA,gBAAgB,EAAE,MAAK/H,KAAL,CAAWiG,OAAX,CAAmBe,GAAnB,CAAuB,UAACvG,IAAD;AAAA,eAAUA,IAAI,CAAC2G,IAAf;AAAA,OAAvB,CAFP;AAGXC,MAAAA,mBAAmB,EAAE,MAAKrH,KAAL,CAAWmJ,yBAHrB;AAIX7B,MAAAA,aAAa,EAAE,IAJJ;AAKXqB,MAAAA,mBAAmB,EAAE,MAAK3I,KAAL,CAAW2I;AALrB,KAAb;AAOA,UAAKS,aAAL,GAAqB,MAAKA,aAAL,CAAmBpH,IAAnB,+BAArB;AACA,UAAKqH,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBrH,IAAxB,+BAA1B;AAViB;AAWlB;;;;SACDxC,oBAAA,6BAAoB;AAClBG,IAAAA,QAAQ,CAACG,gBAAT,CAA0B,WAA1B,EAAuC,KAAKuJ,kBAA5C;AACD;;SAEDlJ,uBAAA,gCAAuB;AACrBR,IAAAA,QAAQ,CAACS,mBAAT,CAA6B,WAA7B,EAA0C,KAAKiJ,kBAA/C;AACD;;SAEDD,gBAAA,uBAActD,IAAd,EAAoB;AAClB,SAAKwD,UAAL,GAAkBxD,IAAlB;AACD;;SAEDuD,qBAAA,4BAAmBE,KAAnB,EAA0B;AACxB,QAAI,KAAKD,UAAL,IAAmB,CAAC,KAAKA,UAAL,CAAgBE,QAAhB,CAAyBD,KAAK,CAACvG,MAA/B,CAAxB,EAAgE;AAC9D,WAAKhD,KAAL,CAAWyJ,qBAAX;AACD;AACF;;SAqLDxG,SAAA,kBAAS;AAAA;;AACP,wBACEC;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAE,KAAKkG;AAAzC,oBACElG;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,8DADF,CADF,CADF,eAMEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,uDACEA;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,QAAQ,EAAE,KAAKgF;AAJjB,MADF,CADF,eASEhF;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAM,MAAI,CAACqE,4BAAL,EAAN;AAAA,OAFZ;AAGE,MAAA,OAAO,EACL,KAAK3F,KAAL,CAAWuF,uBAAX,CAAmCnG,MAAnC,KACA,KAAKhB,KAAL,CAAWiG,OAAX,CAAmBjF;AALvB,MADF,CADF,eAWEkC;AAAK,MAAA,SAAS,EAAC;AAAf,oBAXF,CATF,EAsBG,KAAKtB,KAAL,CAAWmG,gBAAX,CAA4Bf,GAA5B,CAAgC,UAACvG,IAAD,EAAU;AACzC,0BACEyC;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAEzC;AAAnC,sBACEyC;AAAK,QAAA,SAAS,EAAC;AAAf,sBACEA;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAE,MAAI,CAACtB,KAAL,CAAWuF,uBAAX,CAAmCU,QAAnC,CACPpH,IADO,CAFX;AAKE,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACiH,4BAAL,CAAkCjH,IAAlC,CAAN;AAAA;AALZ,QADF,CADF,eAUEyC;AAAK,QAAA,SAAS,EAAC;AAAf,SAA8BzC,IAA9B,CAVF,CADF;AAcD,KAfA,CAtBH,CANF,CADF,eA+CEyC;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,8DADF,CADF,eAIEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,6BAACS,gCAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,IAAI,EAAEC,yBAFR;AAGE,MAAA,OAAO,EAAE;AAAA,eAAM,MAAI,CAAC5D,KAAL,CAAWyJ,qBAAX,EAAN;AAAA;AAHX,MADF,CAJF,CADF,eAaEvG;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,kFACwC,GADxC,EAEG,KAAKtB,KAAL,CAAWuF,uBAAX,CAAmCnG,MAFtC,CADF,CADF,eAOEkC;AAAK,MAAA,SAAS,EAAC;AAAf,OACG,KAAKtB,KAAL,CAAW+G,mBAAX,GACC,KAAK/G,KAAL,CAAWyF,mBAAX,CAA+BrG,MADhC,GAED,CAFC,gBAGCkC,+FACqD,GADrD,EAEG,KAAKtB,KAAL,CAAW+G,mBAAX,GACC,KAAK/G,KAAL,CAAWyF,mBAAX,CAA+BrG,MAHnC,CAHD,gBASCkC;AAAQ,MAAA,KAAK,EAAE;AAAEwG,QAAAA,KAAK,EAAE;AAAT;AAAf,6DAVJ,CAPF,CAbF,eAoCExG;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,6BAACyG,oBAAD;AACE,MAAA,OAAO,EAAEC,iCADX;AAEE,MAAA,OAAO,EAAE;AAAEC,QAAAA,iBAAiB,EAAE;AAArB;AAFX,oBAIE3G,6BAAC,WAAD;AACE,MAAA,YAAY,EAAE,KAAKsF,2BAAL,CACZ,KAAK5G,KAAL,CAAWuF,uBADC,CADhB;AAIE,MAAA,iBAAiB,EAAE,KAAKT;AAJ1B,MAJF,CADF,CApCF,eAiDExD;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,OAAO,EAAE;AAAA,eAAM,MAAI,CAACgE,sBAAL,EAAN;AAAA;AAFX,eADF,eAOEhE;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,OAAO,EAAE;AAAA,eAAM,MAAI,CAAClD,KAAL,CAAWyJ,qBAAX,EAAN;AAAA;AAFX,gBAPF,eAaEvG;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAE;AAAA,eACP,MAAI,CAAClD,KAAL,CAAW8J,0BAAX,CACE,MAAI,CAAClI,KAAL,CAAWuF,uBADb,EAEE,MAAI,CAACvF,KAAL,CAAWyF,mBAFb,CADO;AAAA;AAFX,cAbF,CADF,CAjDF,CA/CF,CADF,CADF;AAiID;;;EApV4BnE,cAAK,CAACE;;ACP9B,IAAMY,WAAS,GAAG;AACvB+F,EAAAA,IAAI,EAAE;AADiB,CAAlB;;ACIP,IAAM7F,OAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AADI,CAAd;;AAIA,IAAM6F,IAAI,GAAG,SAAPA,IAAO,OAAsC;AAAA,MAAnC3F,EAAmC,QAAnCA,EAAmC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzB2F,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACjD,MAAMzF,aAAa,GAAGyF,QAAQ,CAAC7F,EAAD,CAAR,CAAaK,KAAnC;;AADiD,iBAGlBC,gBAAO,CAAC;AACrClE,IAAAA,IAAI,EAAE;AAAEmE,MAAAA,IAAI,EAAEZ,WAAS,CAAC+F,IAAlB;AAAwB1F,MAAAA,EAAE,EAAFA,EAAxB;AAA4BI,MAAAA,aAAa,EAAbA;AAA5B,KAD+B;AAErCI,IAAAA,OAAO,EAAE,iBAACC,OAAD;AAAA,aAAc;AACrBC,QAAAA,UAAU,EAAED,OAAO,CAACC,UAAR;AADS,OAAd;AAAA,KAF4B;AAKrCC,IAAAA,GAAG,EAAE,aAACC,UAAD,EAAaH,OAAb,EAAyB;AAAA,6BACaA,OAAO,CAACI,OAAR,EADb;AAAA,UAChBC,SADgB,oBACpBd,EADoB;AAAA,UACLI,aADK,oBACLA,aADK;;AAE5B,UAAMW,OAAO,GAAGN,OAAO,CAACM,OAAR,EAAhB;;AACA,UAAI,CAACA,OAAL,EAAc;AACZ6E,QAAAA,QAAQ,CAAC9E,SAAD,EAAYV,aAAZ,CAAR;AACD;AACF;AAXoC,GAAD,CAHW;AAAA,MAGxCM,UAHwC,eAGxCA,UAHwC;AAAA,MAG1BM,IAH0B;;AAAA,iBAiBhCC,gBAAO,CAAC;AACvBC,IAAAA,MAAM,EAAEvB,WAAS,CAAC+F,IADK;AAEvBvE,IAAAA,OAAO,EAAE;AAAA,aAAM,KAAN;AAAA,KAFc;AAGvBC,IAAAA,KAHuB,wBAGE;AAAA,UAAbC,SAAa,SAAjBrB,EAAiB;;AACvB,UAAIqB,SAAS,KAAKrB,EAAlB,EAAsB;AAAA,wBACS6F,QAAQ,CAAC7F,EAAD,CADjB;AAAA,YACLsB,SADK,aACZjB,KADY;;AAEpBuF,QAAAA,QAAQ,CAACvE,SAAD,EAAYC,SAAZ,CAAR;AACD;AACF;AARsB,GAAD,CAjByB;AAAA,MAiBxCC,IAjBwC;;AA4BjD,MAAMC,OAAO,GAAGd,UAAU,GAAG,GAAH,GAAS,CAAnC;AAEA,sBACE7B;AAAK,IAAA,GAAG,EAAE,aAAC4C,IAAD;AAAA,aAAUT,IAAI,CAACO,IAAI,CAACE,IAAD,CAAL,CAAd;AAAA,KAAV;AAAsC,IAAA,KAAK,eAAO5B,OAAP;AAAc2B,MAAAA,OAAO,EAAPA;AAAd;AAA3C,KACGvB,IADH,CADF;AAKD,CAnCD;;ACFA,IAAM6F,WAAW,GAAG,SAAdA,WAAc,CAACnK,KAAD,EAAW;AAAA,kBACHuD,cAAQ,WAAKvD,KAAK,CAACoK,UAAX,EADL;AAAA,MACtBC,KADsB;AAAA,MACfC,QADe;;AAG7B,MAAML,QAAQ,GAAG,SAAXA,QAAW,CAAC5F,EAAD,EAAK8B,OAAL,EAAiB;AAAA,oBACR+D,QAAQ,CAAC7F,EAAD,CADA;AAAA,QACxBkG,IADwB,aACxBA,IADwB;AAAA,QAClB7F,KADkB,aAClBA,KADkB;;AAEhC4F,IAAAA,QAAQ,CACNlE,MAAM,CAACiE,KAAD,EAAQ;AACZhE,MAAAA,OAAO,EAAE,CACP,CAAC3B,KAAD,EAAQ,CAAR,CADO,EAEP,CAACyB,OAAD,EAAU,CAAV,EAAaoE,IAAb,CAFO;AADG,KAAR,CADA,CAAR;AAQD,GAVD;;AAYA,MAAML,QAAQ,GAAG,SAAXA,QAAW,CAAC7F,EAAD,EAAQ;AACvB,QAAMkG,IAAI,GAAGF,KAAK,CAAC1D,MAAN,CAAa,UAACC,CAAD;AAAA,aAAO,KAAGA,CAAC,CAACvC,EAAL,KAAcA,EAArB;AAAA,KAAb,EAAsC,CAAtC,CAAb;AACA,WAAO;AACLkG,MAAAA,IAAI,EAAJA,IADK;AAEL7F,MAAAA,KAAK,EAAE2F,KAAK,CAACxD,OAAN,CAAc0D,IAAd;AAFF,KAAP;AAID,GAND;;AAf6B,iBAuBZjF,gBAAO,CAAC;AAAEC,IAAAA,MAAM,EAAEvB,WAAS,CAAC+F;AAApB,GAAD,CAvBK;AAAA,MAuBpBnE,IAvBoB;;AAyB7B1C,EAAAA,cAAK,CAACQ,SAAN,CAAgB,YAAM;AACpB4G,IAAAA,QAAQ,CAACtK,KAAK,CAACoK,UAAP,CAAR;AACD,GAFD,EAEG,CAACpK,KAAK,CAACoK,UAAP,CAFH;AAIA,sBACElH,6BAACA,cAAD,CAAO,QAAP,qBACEA;AAAK,IAAA,GAAG,EAAE0C,IAAV;AAAgB,IAAA,KAAK,EAAE;AAAEkB,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B;AAAvB,KACGsD,KAAK,CAACrD,GAAN,CAAU,UAACuD,IAAD;AAAA,wBACTrH,6BAAC,IAAD;AACE,MAAA,GAAG,EAAEqH,IAAI,CAAClG,EADZ;AAEE,MAAA,EAAE,OAAKkG,IAAI,CAAClG,EAFd;AAGE,MAAA,IAAI,EAAEkG,IAAI,CAACjG,IAHb;AAIE,MAAA,QAAQ,EAAE2F,QAJZ;AAKE,MAAA,QAAQ,EAAEC;AALZ,MADS;AAAA,GAAV,CADH,CADF,CADF;AAeD,CA5CD;;ICOMM;;;AACJ,iBAAc;AAAA;;AACZ;;AADY,UAoCdC,GApCc,GAoCR,YAAM;AACV,UAAIC,OAAO,aAAO,MAAK9I,KAAL,CAAW8I,OAAlB,CAAX;AACAA,MAAAA,OAAO,CAACjE,IAAR,CAAa,IAAb;AACA,UAAIkE,wBAAwB,GAAG,MAAK/I,KAAL,CAAWgJ,gBAA1C;AACAD,MAAAA,wBAAwB,CAAClE,IAAzB,CAA8B;AAC5BoE,QAAAA,MAAM,EAAE,UADoB;AAE5BC,QAAAA,KAAK,EAAE,WAFqB;AAG5BC,QAAAA,MAAM,EAAE;AAHoB,OAA9B;;AAKA,YAAKhI,QAAL,CAAc;AACZ2H,QAAAA,OAAO,EAAPA,OADY;AAEZE,QAAAA,gBAAgB,EAAED;AAFN,OAAd;AAID,KAjDa;;AAAA,UAmDdK,IAnDc,GAmDP,UAACC,CAAD,EAAO;AACZ,UAAIP,OAAO,aAAO,MAAK9I,KAAL,CAAWgJ,gBAAlB,CAAX;AACAF,MAAAA,OAAO,CAACjE,IAAR,CAAayE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,OAAO,CAACO,CAAD,CAAtB,CAAX,CAAb;;AACA,YAAKlI,QAAL,CAAc;AAAE6H,QAAAA,gBAAgB,EAAEF;AAApB,OAAd;AACD,KAvDa;;AAAA,UAyDdW,QAzDc,GAyDH,YAAM;AACf,YAAKtI,QAAL,CAAc;AAAE6H,QAAAA,gBAAgB,EAAE;AAApB,OAAd;AACD,KA3Da;;AAAA,UA6DdU,MA7Dc,GA6DL,UAACL,CAAD,EAAO;AACd,UAAIL,gBAAgB,aAAO,MAAKhJ,KAAL,CAAWgJ,gBAAlB,CAApB;AACAA,MAAAA,gBAAgB,CAAC3C,MAAjB,CAAwBgD,CAAxB,EAA2B,CAA3B;;AACA,YAAKlI,QAAL,CAAc;AAAE6H,QAAAA,gBAAgB,EAAhBA;AAAF,OAAd;AACD,KAjEa;;AAAA,UAmEdpC,2BAnEc,GAmEgB,UAAC+C,SAAD,EAAe;AAC3C,aAAOA,SAAS,CAACvE,GAAV,CAAc,UAACwE,GAAD,EAAM9G,KAAN,EAAgB;AACnC,eAAO;AACLL,UAAAA,EAAE,EAAEK,KADC;AAELJ,UAAAA,IAAI,eACFpB;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAmC,YAAA,GAAG,EAAEwB;AAAxC,0BACExB;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA,iDADF,CADF,eAKEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA,6BAACS,gCAAD;AAAiB,YAAA,IAAI,EAAE+E;AAAvB,YADF,CALF,CADF,eAWExF;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA,oDADF,CADF,eAKEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,IAAI,EAAE,QAFR;AAGE,YAAA,QAAQ,EAAE,kBAACW,CAAD;AAAA,qBACR,MAAK4H,yBAAL,CAA+B5H,CAA/B,EAAkCa,KAAlC,EAAyC,QAAzC,CADQ;AAAA,aAHZ;AAME,YAAA,KAAK,EAAE8G,GAAG,CAACX;AANb,aAQG,MAAK7K,KAAL,CAAW0L,gBAAX,CAA4B1E,GAA5B,CAAgC,UAACvG,IAAD,EAAOiE,KAAP;AAAA,gCAC/BxB;AAAQ,cAAA,GAAG,EAAEwB;AAAb,eAAqBjE,IAArB,CAD+B;AAAA,WAAhC,CARH,CADF,CALF,CAXF,eAgCEyC;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA,oDADF,CADF,eAKEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,IAAI,EAAE,QAFR;AAGE,YAAA,QAAQ,EAAE,kBAACW,CAAD;AAAA,qBACR,MAAK4H,yBAAL,CAA+B5H,CAA/B,EAAkCa,KAAlC,EAAyC,QAAzC,CADQ;AAAA,aAHZ;AAME,YAAA,KAAK,EAAE8G,GAAG,CAACT;AANb,0BAQE7H,qDARF,CADF,CALF,CAhCF,eAmDEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA,kDADF,CADF,eAKEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,IAAI,EAAE,OAFR;AAGE,YAAA,QAAQ,EAAE,kBAACW,CAAD;AAAA,qBACR,MAAK4H,yBAAL,CAA+B5H,CAA/B,EAAkCa,KAAlC,EAAyC,OAAzC,CADQ;AAAA,aAHZ;AAME,YAAA,KAAK,EAAE8G,GAAG,CAACV;AANb,0BAQE5H,yDARF,eASEA,0DATF,CADF,CALF,CAnDF,eAuEEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA,iDADF,CADF,eAKEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA,6BAACS,gCAAD;AACE,YAAA,IAAI,EAAEgI,wBADR;AAEE,YAAA,KAAK,EAAC,MAFR;AAGE,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAKX,IAAL,CAAUtG,KAAV,CAAN;AAAA;AAHX,YADF,CALF,CAvEF,eAqFExB;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA,iDADF,CADF,eAKEA;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA,6BAACS,gCAAD;AACE,YAAA,IAAI,EAAEiI,yBADR;AAEE,YAAA,KAAK,EAAC,QAFR;AAGE,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAKN,MAAL,CAAY5G,KAAZ,CAAN;AAAA;AAHX,YADF,CALF,CArFF;AAHG,SAAP;AAwGD,OAzGM,CAAP;AA0GD,KA9Ka;;AAAA,UAgLd+G,yBAhLc,GAgLc,UAAClC,KAAD,EAAQ7E,KAAR,EAAemH,UAAf,EAA8B;AACxD,AAIA,UAAIlB,wBAAwB,GAAG,MAAK/I,KAAL,CAAWgJ,gBAA1C;;AAEA,UAAIiB,UAAU,KAAK,QAAnB,EAA6B;AAC3BlB,QAAAA,wBAAwB,CAACjG,KAAD,CAAxB,CAAgC,QAAhC,IAA4C6E,KAAK,CAACvG,MAAN,CAAalC,KAAzD;AACD;;AACD,UAAI+K,UAAU,KAAK,OAAnB,EAA4B;AAC1BlB,QAAAA,wBAAwB,CAACjG,KAAD,CAAxB,CAAgC,OAAhC,IAA2C6E,KAAK,CAACvG,MAAN,CAAalC,KAAxD;AACD;;AACD,UACE6J,wBAAwB,CAACjG,KAAD,CAAxB,CAAgC,QAAhC,MAA8C,EAA9C,IACAiG,wBAAwB,CAACjG,KAAD,CAAxB,CAAgC,QAAhC,MAA8CoH,SAFhD,EAGE;AACAnB,QAAAA,wBAAwB,CAACjG,KAAD,CAAxB,CAAgC,QAAhC,IAA4C,OAA5C;AACD;;AACD,YAAK3B,QAAL,CAAc;AACZ6H,QAAAA,gBAAgB,EAAED;AADN,OAAd;AAGD,KAtMa;;AAAA,UAwMdoB,6BAxMc,GAwMkB,YAAM;AACpC,UAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AACA,UAAMC,SAAS,GAAG,MAAKtK,KAAL,CAAWgJ,gBAAX,CAA4BuB,IAA5B,CAChB,UAACC,OAAD;AAAA,eAAaJ,MAAM,CAACK,IAAP,KAAgBL,MAAM,CAACvB,GAAP,CAAW2B,OAAO,CAACvB,MAAnB,EAA2BwB,IAAxD;AAAA,OADgB,CAAlB;;AAGAH,MAAAA,SAAS,GACL,MAAKnJ,QAAL,CAAc;AACZuJ,QAAAA,YAAY,EAAE;AADF,OAAd,CADK,GAIL,MAAKvJ,QAAL,CAAc;AACZuJ,QAAAA,YAAY,EAAE;AADF,OAAd,CAJJ;AAOA7K,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4C,MAAKE,KAAL,CAAWgJ,gBAAvD;;AACA,YAAK5K,KAAL,CAAWuM,0BAAX,CAAsC,MAAK3K,KAAL,CAAWgJ,gBAAjD;AACD,KAtNa;;AAEZ,UAAKhJ,KAAL,GAAa;AACX8I,MAAAA,OAAO,EAAE,CAAC,IAAD,CADE;AAEX8B,MAAAA,IAAI,EAAE,EAFK;AAGX5B,MAAAA,gBAAgB,EAAE,CAChB;AACEC,QAAAA,MAAM,EAAE,UADV;AAEEC,QAAAA,KAAK,EAAE,WAFT;AAGEC,QAAAA,MAAM,EAAE;AAHV,OADgB,CAHP;AAUXuB,MAAAA,YAAY,EAAE;AAVH,KAAb;AAYA,UAAKlD,aAAL,GAAqB,MAAKA,aAAL,CAAmBpH,IAAnB,+BAArB;AACA,UAAKqH,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBrH,IAAxB,+BAA1B;AAfY;AAgBb;;;;SAEDxC,oBAAA,6BAAoB;AAClBG,IAAAA,QAAQ,CAACG,gBAAT,CAA0B,WAA1B,EAAuC,KAAKuJ,kBAA5C;AACD;;SAEDlJ,uBAAA,gCAAuB;AACrBR,IAAAA,QAAQ,CAACS,mBAAT,CAA6B,WAA7B,EAA0C,KAAKiJ,kBAA/C;AACD;;SAEDD,gBAAA,uBAActD,IAAd,EAAoB;AAClB,SAAKwD,UAAL,GAAkBxD,IAAlB;AACD;;SAEDuD,qBAAA,4BAAmBE,KAAnB,EAA0B;AACxB,QAAI,KAAKD,UAAL,IAAmB,CAAC,KAAKA,UAAL,CAAgBE,QAAhB,CAAyBD,KAAK,CAACvG,MAA/B,CAAxB,EAAgE;AAC9D,WAAKhD,KAAL,CAAWyM,YAAX;AACD;AACF;;SAsLDxJ,SAAA,kBAAS;AAAA;AAEP,wBACEC;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAE,KAAKkG;AAAvC,oBACElG;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,qDADF,CADF,eAKEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,6BAACS,gCAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,IAAI,EAAEC,yBAFR;AAGE,MAAA,OAAO,EAAE;AAAA,eAAM,MAAI,CAAC5D,KAAL,CAAWyM,YAAX,EAAN;AAAA;AAHX,MADF,CALF,CADF,eAeEvJ;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,6BAACyG,oBAAD;AACE,MAAA,OAAO,EAAEC,iCADX;AAEE,MAAA,OAAO,EAAE;AAAEC,QAAAA,iBAAiB,EAAE;AAArB;AAFX,oBAIE3G,6BAAC,WAAD;AACE,MAAA,UAAU,EAAE,KAAKsF,2BAAL,CACV,KAAK5G,KAAL,CAAWgJ,gBADD;AADd,MAJF,CADF,eAWE1H;AAAK,MAAA,SAAS,EAAC;AAAf,OACG,KAAKtB,KAAL,CAAW0K,YAAX,gBACCpJ;AACE,MAAA,KAAK,EAAE;AAAE4D,QAAAA,OAAO,EAAE,KAAKlF,KAAL,CAAW8K;AAAtB,OADT;AAEE,MAAA,SAAS,EAAC;AAFZ,iEADD,GAQC,EATJ,CAXF,CAfF,eAuCExJ;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,6BAACS,gCAAD;AACE,MAAA,IAAI,EAAEgJ,wBADR;AAEE,MAAA,SAAS,EAAC;AAFZ,MADF,eAMEzJ;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,OAAO,EAAE;AAAA,eAAM,MAAI,CAACuH,GAAL,EAAN;AAAA;AAApC,kBANF,CADF,CAvCF,eAmDEvH;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKmI;AAAvC,mBADF,eAKEnI;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAE;AAAA,eAAM,MAAI,CAAC6I,6BAAL,EAAN;AAAA;AAFX,YALF,CADF,CAnDF,CADF,CADF,CADF;AAwED;;;EAnSe7I,cAAK,CAACE;;ACCxB,IAAIwJ,gBAAgB,GAAG,EAAvB;;IACMC;;;AACJ,sBAAY7M,KAAZ,EAAmB;AAAA;;AACjB,wCAAMA,KAAN;;AADiB,UAkCnB8M,qBAlCmB,GAkCK,YAAM;AAC5B,YAAK/J,QAAL,CAAc;AACZgK,QAAAA,gBAAgB,EAAE,EADN;AAEZzF,QAAAA,aAAa,EAAE;AAFH,OAAd;AAID,KAvCkB;;AAAA,UAyCnB0F,qBAzCmB,GAyCK,YAAM;AAC5B,YAAKF,qBAAL;;AACA,YAAK/J,QAAL,CAAc;AACZgK,QAAAA,gBAAgB,EAAE,CAAC,MAAKnL,KAAL,CAAW0F,aAAZ,GAA4B,MAAKtH,KAAL,CAAWiN,WAAvC,GAAqD,EAD3D;AAEZ3F,QAAAA,aAAa,EAAE,CAAC,MAAK1F,KAAL,CAAW0F;AAFf,OAAd;AAID,KA/CkB;;AAAA,UAiDnB4F,qBAjDmB,GAiDK,UAACvF,aAAD,EAAmB;AACzC,UAAIwF,wBAAwB,GAAG,MAAKvL,KAAL,CAAWmL,gBAA1C;;AACA,UAAI,CAACI,wBAAwB,CAACtF,QAAzB,CAAkCF,aAAlC,CAAL,EAAuD;AACrDwF,QAAAA,wBAAwB,CAAC1G,IAAzB,CAA8BkB,aAA9B;AACD,OAFD,MAEO;AACLwF,QAAAA,wBAAwB,GAAGA,wBAAwB,CAACxG,MAAzB,CAAgC,UAAClG,IAAD,EAAU;AACnE,iBAAOA,IAAI,KAAKkH,aAAhB;AACD,SAF0B,CAA3B;AAGD;;AACD,YAAK5E,QAAL,CAAc;AACZgK,QAAAA,gBAAgB,EAAEI,wBADN;AAEZ7F,QAAAA,aAAa,EAAE;AAFH,OAAd;AAID,KA9DkB;;AAAA,UAgEnB8F,kBAhEmB,GAgEE,UAAC7D,KAAD,EAAW;AAC9B,UACEA,KAAK,CAACvG,MAAN,CAAaqK,OAAb,IACA,CAAC,MAAKzL,KAAL,CAAWgL,gBAAX,CAA4B/E,QAA5B,CAAqC0B,KAAK,CAACvG,MAAN,CAAalC,KAAlD,CAFH,EAGE;AACA8L,QAAAA,gBAAgB,CAACnG,IAAjB,CAAsB8C,KAAK,CAACvG,MAAN,CAAalC,KAAnC;;AACA,cAAKiC,QAAL,CAAc;AAAE6J,UAAAA,gBAAgB,EAAhBA;AAAF,SAAd;AACD,OAND,MAMO;AACLA,QAAAA,gBAAgB,CAAC5F,GAAjB,CAAqB,UAAUlG,KAAV,EAAiB4D,KAAjB,EAAwB;AAC3C,cAAI5D,KAAK,KAAKyI,KAAK,CAACvG,MAAN,CAAalC,KAA3B,EAAkC;AAChC8L,YAAAA,gBAAgB,GAAGA,gBAAgB,CAAC3E,MAAjB,CAAwBvD,KAAxB,EAA+B5D,KAA/B,CAAnB;AACD;AACF,SAJD;;AAKA,cAAKiC,QAAL,CAAc;AAAE6J,UAAAA,gBAAgB,EAAhBA;AAAF,SAAd;AACD;AACF,KA/EkB;;AAAA,UAiFnBU,aAjFmB,GAiFH,YAAM;AACpB,UAAMC,eAAe,GAAG,MAAK3L,KAAL,CAAWmL,gBAAnC;;AACA,UAAIQ,eAAe,CAACvM,MAAhB,GAAyB,CAAzB,IAA8B,MAAKY,KAAL,CAAWgL,gBAAX,CAA4B5L,MAA5B,GAAqC,CAAvE,EAA0E;AACxE,cAAKhB,KAAL,CAAWwM,IAAX,CAAgBhG,OAAhB,CAAwB,UAACgF,GAAD,EAAS;AAC/B,cAAMgC,IAAI,GAAGC,MAAM,CAACC,mBAAP,CAA2BlC,GAA3B,CAAb;AACA,cAAImC,iBAAiB,GAAG,EAAxB;AACAH,UAAAA,IAAI,CAAChH,OAAL,CAAa,UAAU3D,GAAV,EAAe;AAC1B0K,YAAAA,eAAe,CAAC/G,OAAhB,CAAwB,UAAChG,UAAD,EAAgB;AACtC,kBAAIA,UAAU,CAACqC,GAAX,KAAmBA,GAAvB,EAA4B8K,iBAAiB,CAAC9K,GAAD,CAAjB,GAAyB2I,GAAG,CAAC3I,GAAD,CAA5B;AAC7B,aAFD;AAGD,WAJD;;AAKA,gBAAKjB,KAAL,CAAWgM,WAAX,CAAuBnH,IAAvB,CAA4BkH,iBAA5B;AACD,SATD;;AAWA,cAAK/L,KAAL,CAAWgL,gBAAX,CAA4B5F,GAA5B,CAAgC,UAACvG,IAAD,EAAU;AACxC,cAAIA,IAAI,KAAK,KAAb,EAAoB,MAAKoN,WAAL,GAApB,KACK,IAAIpN,IAAI,KAAK,OAAb,EAAsB,MAAKqN,eAAL,GAAtB,KACA,MAAKC,eAAL;AACN,SAJD;AAKD;AACF,KArGkB;;AAAA,UAuGnBF,WAvGmB,GAuGL,YAAM;AAClB,UAAMG,IAAI,GAAG,IAAb;AACA,UAAM3B,IAAI,GAAG,IAAb;AACA,UAAM4B,WAAW,GAAG,WAApB;AAEA,UAAMC,UAAU,GAAG,GAAnB;AACA,UAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAUH,WAAV,EAAuBD,IAAvB,EAA6B3B,IAA7B,CAAZ;AAEA8B,MAAAA,GAAG,CAACE,WAAJ,CAAgB,EAAhB;AAEA,UAAMC,KAAK,GAAG,eAAd;AACA,UAAMC,OAAO,GAAG,CACd,MAAK3M,KAAL,CAAWmL,gBAAX,CAA4B/F,GAA5B,CAAgC,UAACpE,MAAD,EAAY;AAC1C,eAAOA,MAAM,CAACwE,IAAd;AACD,OAFD,CADc,CAAhB;AAKA,UAAIoH,UAAU,GAAG,EAAjB;;AACA,YAAKxO,KAAL,CAAWwM,IAAX,CAAgBhG,OAAhB,CAAwB,UAACgF,GAAD,EAAS;AAC/B,YAAMgC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYhC,GAAZ,CAAb;AACA,YAAImC,iBAAiB,GAAG,EAAxB;;AACA,cAAK/L,KAAL,CAAWmL,gBAAX,CAA4BvG,OAA5B,CAAoC,UAAChG,UAAD,EAAgB;AAClDgN,UAAAA,IAAI,CAAChH,OAAL,CAAa,UAAC3D,GAAD,EAAS;AACpB,gBAAIrC,UAAU,CAACqC,GAAX,KAAmBA,GAAvB,EAA4B8K,iBAAiB,CAAClH,IAAlB,CAAuB+E,GAAG,CAAC3I,GAAD,CAA1B;AAC7B,WAFD;AAGD,SAJD;;AAKA2L,QAAAA,UAAU,CAAC/H,IAAX,CAAgBkH,iBAAhB;AACD,OATD;;AAWA,UAAIc,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAE,EADI;AAEZC,QAAAA,IAAI,EAAEJ,OAFM;AAGZK,QAAAA,IAAI,EAAEJ;AAHM,OAAd;AAMAL,MAAAA,GAAG,CAAC7J,IAAJ,CAASgK,KAAT,EAAgBJ,UAAhB,EAA4B,EAA5B;AACAC,MAAAA,GAAG,CAACU,SAAJ,CAAcJ,OAAd;AACAN,MAAAA,GAAG,CAACW,IAAJ,CAAS,YAAT;AACD,KA5IkB;;AAAA,UA8InBf,eA9ImB,GA8ID,YAAM;AACtB,UAAMgB,QAAQ,GACZ,iFADF;AAEA,UAAMC,aAAa,GAAG,MAAtB;AACA,UAAMC,QAAQ,GAAG,aAAjB;AACA,UAAMC,EAAE,GAAGC,UAAA,CAAWC,aAAX,CAAyB,MAAKxN,KAAL,CAAWgM,WAApC,CAAX;AACA,UAAMyB,EAAE,GAAG;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAEL;AAAR,SAAV;AAAwBM,QAAAA,UAAU,EAAE,CAAC,MAAD;AAApC,OAAX;AACA,UAAMC,WAAW,GAAGN,UAAA,CAAWE,EAAX,EAAe;AAAEK,QAAAA,QAAQ,EAAE,KAAZ;AAAmB9K,QAAAA,IAAI,EAAE;AAAzB,OAAf,CAApB;AACA,UAAM2K,IAAI,GAAG,IAAII,IAAJ,CAAS,CAACF,WAAD,CAAT,EAAwB;AAAE7K,QAAAA,IAAI,EAAEmK;AAAR,OAAxB,CAAb;AACAa,MAAAA,gBAAA,CAAiBL,IAAjB,EAAuBN,QAAQ,GAAGD,aAAlC;AACD,KAxJkB;;AAAA,UA0JnBlB,eA1JmB,GA0JD,YAAM;AACtB,UAAMiB,QAAQ,GACZ,iFADF;AAEA,UAAMC,aAAa,GAAG,OAAtB;AACA,UAAMC,QAAQ,GAAG,cAAjB;AACA,UAAMC,EAAE,GAAGC,UAAA,CAAWC,aAAX,CAAyB,MAAKxN,KAAL,CAAWgM,WAApC,CAAX;AACA,UAAMyB,EAAE,GAAG;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAEL;AAAR,SAAV;AAAwBM,QAAAA,UAAU,EAAE,CAAC,MAAD;AAApC,OAAX;AACA,UAAMC,WAAW,GAAGN,UAAA,CAAWE,EAAX,EAAe;AAAEK,QAAAA,QAAQ,EAAE,MAAZ;AAAoB9K,QAAAA,IAAI,EAAE;AAA1B,OAAf,CAApB;AACA,UAAM2K,IAAI,GAAG,IAAII,IAAJ,CAAS,CAACF,WAAD,CAAT,EAAwB;AAAE7K,QAAAA,IAAI,EAAEmK;AAAR,OAAxB,CAAb;AACAa,MAAAA,gBAAA,CAAiBL,IAAjB,EAAuBN,QAAQ,GAAGD,aAAlC;AACD,KApKkB;;AAAA,UAsKnBa,iBAtKmB,GAsKC,UAAChM,CAAD,EAAO;AACzB,UAAMsE,SAAS,GAAGC,MAAM,CAACvE,CAAC,CAACb,MAAF,CAASlC,KAAV,CAAN,CAAuBuH,WAAvB,EAAlB;;AACA,UAAIyH,YAAY,GAAG,MAAK9P,KAAL,CAAWiN,WAAX,CAAuBtG,MAAvB,CAA8B,UAAClG,IAAD,EAAU;AACzD,eAAOA,IAAI,CAAC2G,IAAL,CAAUiB,WAAV,GAAwBR,QAAxB,CAAiCM,SAAjC,CAAP;AACD,OAFkB,CAAnB;;AAGA,UAAI,CAAC2H,YAAY,CAAC9O,MAAlB,EAA0B;AACxB,cAAK+B,QAAL,CAAc;AAAEgN,UAAAA,eAAe,EAAE,MAAK/P,KAAL,CAAWiN;AAA9B,SAAd;AACD,OAFD,MAEO;AACL,cAAKlK,QAAL,CAAc;AAAEgN,UAAAA,eAAe,EAAED;AAAnB,SAAd;AACD;AACF,KAhLkB;;AAAA,UAkLnBE,gBAlLmB,GAkLA,YAAM;AACvB,UAAIC,YAAY,GAAG,MAAKrO,KAAL,CAAWmL,gBAAX,CAA4B/L,MAA/C;AACA,UAAIkP,UAAU,GAAG,MAAKtO,KAAL,CAAWgL,gBAAX,CAA4B5L,MAA7C;;AACA,UAAIiP,YAAY,GAAG,CAAf,IAAoBC,UAAU,GAAG,CAArC,EAAwC;AACtC,cAAK5C,aAAL;;AACA,cAAKvK,QAAL,CAAc;AAAE2J,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD,OAHD,MAGO,IAAIuD,YAAY,KAAK,CAArB,EAAwB;AAC7B,cAAKlN,QAAL,CAAc;AAAEoN,UAAAA,OAAO,EAAE;AAAX,SAAd;;AACA,cAAKpN,QAAL,CAAc;AAAE2J,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD,OAHM,MAGA,IAAIwD,UAAU,KAAK,CAAnB,EAAsB;AAC3B,cAAKnN,QAAL,CAAc;AAAEoN,UAAAA,OAAO,EAAE;AAAX,SAAd;;AACA,cAAKpN,QAAL,CAAc;AAAE2J,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD;;AACD,UAAIuD,YAAY,KAAK,CAAjB,IAAsBC,UAAU,KAAK,CAAzC,EAA4C;AAC1C,cAAKnN,QAAL,CAAc;AAAEoN,UAAAA,OAAO,EAAE;AAAX,SAAd;;AACA,cAAKpN,QAAL,CAAc;AAAE2J,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD;AACF,KAnMkB;;AAEjB,UAAK9K,KAAL,GAAa;AACXmO,MAAAA,eAAe,EAAE,MAAK/P,KAAL,CAAWiN,WADjB;AAEXF,MAAAA,gBAAgB,EAAE,EAFP;AAGXzF,MAAAA,aAAa,EAAE,KAHJ;AAIXsF,MAAAA,gBAAgB,EAAE,EAJP;AAKXgB,MAAAA,WAAW,EAAE,EALF;AAMXuC,MAAAA,OAAO,EAAE,EANE;AAOXzD,MAAAA,QAAQ,EAAE;AAPC,KAAb;AASA,UAAKtD,aAAL,GAAqB,MAAKA,aAAL,CAAmBpH,IAAnB,+BAArB;AACA,UAAKqH,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBrH,IAAxB,+BAA1B;AACA,UAAKoL,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBpL,IAAxB,+BAA1B;AACA,UAAKgO,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBhO,IAAtB,+BAAxB;AAdiB;AAelB;;;;SACDxC,oBAAA,6BAAoB;AAClBG,IAAAA,QAAQ,CAACG,gBAAT,CAA0B,WAA1B,EAAuC,KAAKuJ,kBAA5C;AACD;;SAEDlJ,uBAAA,gCAAuB;AACrBR,IAAAA,QAAQ,CAACS,mBAAT,CAA6B,WAA7B,EAA0C,KAAKiJ,kBAA/C;AACD;;SAEDD,gBAAA,uBAActD,IAAd,EAAoB;AAClB,SAAKwD,UAAL,GAAkBxD,IAAlB;AACD;;SAEDuD,qBAAA,4BAAmBE,KAAnB,EAA0B;AACxB,QAAI,KAAKD,UAAL,IAAmB,CAAC,KAAKA,UAAL,CAAgBE,QAAhB,CAAyBD,KAAK,CAACvG,MAA/B,CAAxB,EAAgE;AAC9D,WAAKhD,KAAL,CAAWoQ,WAAX;AACD;AACF;;SAoKDnN,SAAA,kBAAS;AAAA;;AACP,wBACEC;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAE,KAAKkG;AAAzC,oBACElG;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,2DADF,CADF,CADF,eAMEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,uDACEA;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,QAAQ,EAAE,KAAK2M;AAJjB,MADF,CADF,eASE3M;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAM,MAAI,CAAC8J,qBAAL,EAAN;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAE,KAAKpL,KAAL,CAAW0F;AAHtB,MADF,CADF,eAQEpE;AAAK,MAAA,SAAS,EAAC;AAAf,oBARF,CATF,EAmBG,KAAKtB,KAAL,CAAWmO,eAAX,CAA2B/O,MAA3B,GAAoC,CAApC,GACG,KAAKY,KAAL,CAAWmO,eAAX,CAA2B/I,GAA3B,CAA+B,UAACpE,MAAD,EAAS8B,KAAT,EAAmB;AAChD,0BACExB;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAEN,MAAM,CAACC;AAA1C,sBACEK;AAAK,QAAA,SAAS,EAAC;AAAf,sBACEA;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAE,MAAI,CAACtB,KAAL,CAAWmL,gBAAX,CAA4BlF,QAA5B,CACPjF,MADO,CAFX;AAKE,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACsK,qBAAL,CAA2BtK,MAA3B,CAAN;AAAA;AALZ,QADF,CADF,eAUEM;AAAK,QAAA,SAAS,EAAC;AAAf,SAA8BN,MAAM,CAACwE,IAArC,CAVF,CADF;AAcD,KAfD,CADH,GAiBG,EApCN,CANF,CADF,eA8CElE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,MADF,eAEEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,6BAACS,gCAAD;AACE,MAAA,IAAI,EAAEC,yBADR;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,OAAO,EAAE,KAAK5D,KAAL,CAAWoQ;AAHtB,MADF,CAFF,CADF,eAWElN;AAAK,MAAA,SAAS,EAAC;AAAf,mBAXF,eAYEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,KAAK,EAAC,KAHR;AAIE,MAAA,QAAQ,EAAE,KAAKkK;AAJjB,MADF,CADF,eASElK;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,6BAACS,gCAAD;AACE,MAAA,IAAI,EAAE0M,2BADR;AAEE,MAAA,SAAS,EAAC;AAFZ,MADF,CATF,CADF,eAiBEnN;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,QAAQ,EAAE,KAAKkK;AAJjB,MADF,CADF,eASElK;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,6BAACS,gCAAD;AACE,MAAA,IAAI,EAAE2M,6BADR;AAEE,MAAA,SAAS,EAAC;AAFZ,MADF,CATF,CAjBF,eAiCEpN;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,KAAK,EAAC,KAHR;AAIE,MAAA,QAAQ,EAAE,KAAKkK;AAJjB,MADF,CADF,eASElK;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,6BAACS,gCAAD;AACE,MAAA,IAAI,EAAE4M,2BADR;AAEE,MAAA,SAAS,EAAC;AAFZ,MADF,CATF,CAjCF,eAiDErN;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AACE,MAAA,KAAK,EAAE;AAAE4D,QAAAA,OAAO,EAAE,KAAKlF,KAAL,CAAW8K;AAAtB,OADT;AAEE,MAAA,SAAS,EAAC;AAFZ,6CAIuBxJ,6CAAS,KAAKtB,KAAL,CAAWuO,OAApB,CAJvB,CADF,CAjDF,CAZF,eAsEEjN;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,OAAO,EAAE;AAAA,eAAM,MAAI,CAAClD,KAAL,CAAWoQ,WAAX,EAAN;AAAA;AAFX,gBADF,eAOElN;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAE,iBAACW,CAAD,EAAO;AACd,QAAA,MAAI,CAACmM,gBAAL;AACD;AAJH,gBAPF,CADF,CAtEF,CA9CF,CADF,CADF;AA4ID;;;EAlVsB9M,cAAK,CAACE;;eCU3BoN,OAAO,CAAC,wBAAD;IADUC,8BAAnBC,gBAAmBD;;IAGbE,iBAAmBC,4BAAnBD;;AAER,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD;AAAA,SAASA,GAAG,CAACjQ,KAAJ,CAAU,YAAV,EAAwBmG,GAAxB,CAA4B,UAACwE,GAAD;AAAA,WAASA,GAAG,CAAC3K,KAAJ,CAAU,IAAV,CAAT;AAAA,GAA5B,CAAT;AAAA,CAA1B;;AACA,IAAMkQ,SAAS,GAAGC,wBAAI,CAACC,SAAvB;AACA,IAAIC,QAAQ,GAAG,EAAf;IACQC,qBAAsCC,4BAAtCD;IAAoBE,gBAAkBD,4BAAlBC;;IACtBC;;;AACJ,uBAAYtR,KAAZ,EAAmB;AAAA;;AACjB,kCAAMA,KAAN;;AADiB,UA0DnBuR,UA1DmB,GA0DN,UAACC,QAAD,EAAWC,OAAX,EAAuB;AAClC,YAAK1O,QAAL,CAAc,UAACnB,KAAD,EAAW;AACvB,YAAM4K,IAAI,GAAG5K,KAAK,CAAC4K,IAAN,CAAWkF,KAAX,EAAb;;AACA,aAAK,IAAIzG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwG,OAAO,CAACzQ,MAA5B,EAAoCiK,CAAC,EAArC,EAAyC;AACvC,cAAIuG,QAAQ,GAAGvG,CAAX,GAAeuB,IAAI,CAACxL,MAAxB,EAAgC;AAC9BwL,YAAAA,IAAI,CAACgF,QAAQ,GAAGvG,CAAZ,CAAJ,gBACKuB,IAAI,CAACgF,QAAQ,GAAGvG,CAAZ,CADT,EAEKwG,OAAO,CAACxG,CAAD,CAFZ;AAID;AACF;;AACD,eAAO;AACLuB,UAAAA,IAAI,EAAJA;AADK,SAAP;AAGD,OAbD;AAcD,KAzEkB;;AAAA,UA2EnBmF,SA3EmB,GA2EP,UAAC1G,CAAD,EAAO;AAAA,UACTuB,IADS,GACA,MAAK5K,KADL,CACT4K,IADS;AAEjB,aAAOA,IAAI,CAACvB,CAAD,CAAX;AACD,KA9EkB;;AAAA,UAgFnB2G,UAhFmB,GAgFN,UAAC/N,CAAD,EAAO;AAClBA,MAAAA,CAAC,CAACgO,cAAF;AADkB,wBAEY,MAAKjQ,KAFjB;AAAA,UAEVkQ,OAFU,eAEVA,OAFU;AAAA,UAEDC,QAFC,eAEDA,QAFC;AAGlB,UAAMzN,IAAI,GAAG0N,YAAK,CAACF,OAAO,CAACG,MAAT,EAAiBF,QAAQ,CAACE,MAAT,GAAkB,CAAnC,CAAL,CACVjL,GADU,CACN,UAACiL,MAAD;AAAA,eACH,MAAKrQ,KAAL,CAAWqE,OAAX,CACGyL,KADH,CACSI,OAAO,CAACI,MAAR,GAAiB,CAD1B,EAC6BH,QAAQ,CAACG,MADtC,EAEGlL,GAFH,CAEO,UAACmL,GAAD;AAAA,iBAAS,MAAKR,SAAL,CAAeM,MAAf,EAAuBE,GAAG,CAACtP,GAA3B,CAAT;AAAA,SAFP,EAGGuP,IAHH,CAGQ,IAHR,CADG;AAAA,OADM,EAOVA,IAPU,CAOL,IAPK,CAAb;AAQAvO,MAAAA,CAAC,CAACwO,aAAF,CAAgBC,OAAhB,CAAwB,YAAxB,EAAsChO,IAAtC;AACD,KA5FkB;;AAAA,UA8FnBiO,WA9FmB,GA8FL,UAAC1O,CAAD,EAAO;AACnBA,MAAAA,CAAC,CAACgO,cAAF;AADmB,UAEXC,OAFW,GAEC,MAAKlQ,KAFN,CAEXkQ,OAFW;AAGnB,UAAML,OAAO,GAAG,EAAhB;AACA,UAAMe,SAAS,GAAG3B,iBAAiB,CAAChN,CAAC,CAACwO,aAAF,CAAgBI,OAAhB,CAAwB,YAAxB,CAAD,CAAnC;AACAD,MAAAA,SAAS,CAAChM,OAAV,CAAkB,UAACgF,GAAD,EAAS;AACzB,YAAMkH,OAAO,GAAG,EAAhB;;AAEA,cAAK9Q,KAAL,CAAWqE,OAAX,CAAmByL,KAAnB,CAAyBI,OAAO,CAACI,MAAR,GAAiB,CAA1C,EAA6CJ,OAAO,CAACI,MAAR,GAAiB,CAAjB,GAAqB1G,GAAG,CAACxK,MAAtE,EAA8EwF,OAA9E,CAAsF,UAAC2L,GAAD,EAAMQ,CAAN,EAAY;AAChGD,UAAAA,OAAO,CAACP,GAAG,CAACtP,GAAL,CAAP,GAAmB2I,GAAG,CAACmH,CAAD,CAAtB;AACD,SAFD;;AAGAlB,QAAAA,OAAO,CAAChL,IAAR,CAAaiM,OAAb;AACD,OAPD;;AAQA,YAAKnB,UAAL,CAAgBO,OAAO,CAACG,MAAxB,EAAgCR,OAAhC;AACD,KA5GkB;;AAAA,UA8GnBmB,YA9GmB,GA8GJ,UAACC,IAAD,EAAU;AACvB,YAAK9P,QAAL,CAAc;AACZ+O,QAAAA,OAAO,EAAE;AACPG,UAAAA,MAAM,EAAEY,IAAI,CAACf,OAAL,CAAaG,MADd;AAEPC,UAAAA,MAAM,EAAEW,IAAI,CAACf,OAAL,CAAagB;AAFd,SADG;AAKZf,QAAAA,QAAQ,EAAE;AACRE,UAAAA,MAAM,EAAEY,IAAI,CAACE,WAAL,CAAiBd,MADjB;AAERC,UAAAA,MAAM,EAAEW,IAAI,CAACE,WAAL,CAAiBD;AAFjB;AALE,OAAd;AAUD,KAzHkB;;AAAA,UA2HnBE,mBA3HmB,GA2HG,YAAM;AAC1B,YAAKjQ,QAAL,CAAc;AAAEkQ,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD,KA7HkB;;AAAA,UA8HnBnP,kBA9HmB,GA8HE,YAAM;AACzB,YAAKf,QAAL,CAAc;AAAEkQ,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD,KAhIkB;;AAAA,UAsJnBC,iBAtJmB,GAsJC,gBAAyC;AAAA,UAAtCC,OAAsC,QAAtCA,OAAsC;AAAA,UAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,UAAtBjR,OAAsB,QAAtBA,OAAsB;AAAA,UAAbkR,MAAa,QAAbA,MAAa;AAC3D,UAAI7S,UAAU,GAAG,EAAjB;;AACA,UAAMmG,MAAM,GAAG,MAAK2M,kBAAL,CAAwB3M,MAAxB,CAA+B,UAAClG,IAAD,EAAU;AACtD,YAAI0B,OAAO,CAAC1B,IAAI,CAACoC,GAAN,CAAP,KAAsB,IAAtB,IAA8BV,OAAO,CAAC1B,IAAI,CAACoC,GAAN,CAAP,KAAsBiJ,SAAxD,EAAmE;AACjEtL,UAAAA,UAAU,GAAGC,IAAI,CAACoC,GAAlB;AACA,iBAAO,IAAP;AACD,SAHD,MAGO,OAAO,KAAP;AACR,OALc,CAAf;;AAOA,UAAI8D,MAAM,CAAC3F,MAAP,GAAgB,CAApB,EAAuB;AACrBmB,QAAAA,OAAO,GAAG7B,YAAY,CAAC6B,OAAD,EAAU3B,UAAV,CAAtB;AACD;;AAED,UAAI6S,MAAM,KAAK,YAAf,EAA6B;AAC3B,cAAKtQ,QAAL,CAAc,UAACnB,KAAD,EAAW;AACvB,cAAM4K,IAAI,GAAG5K,KAAK,CAAC4K,IAAN,CAAWkF,KAAX,EAAb;;AACA,eAAK,IAAIzG,CAAC,GAAGkI,OAAb,EAAsBlI,CAAC,IAAImI,KAA3B,EAAkCnI,CAAC,EAAnC,EAAuC;AACrCuB,YAAAA,IAAI,CAACvB,CAAD,CAAJ,gBACKuB,IAAI,CAACvB,CAAD,CADT,EAEK9I,OAFL;AAID;;AAED,iBAAO;AACLqK,YAAAA,IAAI,EAAJA;AADK,WAAP;AAGD,SAZD;;AAaA,cAAKzJ,QAAL,CAAc,UAACnB,KAAD,EAAW;AACvB,cAAM2R,aAAa,GAAG3R,KAAK,CAAC2R,aAAN,CAAoB7B,KAApB,EAAtB;;AACA,eAAK,IAAIzG,CAAC,GAAGkI,OAAb,EAAsBlI,CAAC,IAAImI,KAA3B,EAAkCnI,CAAC,EAAnC,EAAuC;AACrCsI,YAAAA,aAAa,CAACtI,CAAD,CAAb,gBACKsI,aAAa,CAACtI,CAAD,CADlB,EAEK9I,OAFL;AAID;;AAED,iBAAO;AACLoR,YAAAA,aAAa,EAAbA;AADK,WAAP;AAGD,SAZD;;AAaA,cAAKxQ,QAAL,CAAc,UAACnB,KAAD,EAAW;AACvB,cAAM4R,QAAQ,GAAG5R,KAAK,CAAC4R,QAAN,CAAe9B,KAAf,EAAjB;;AACA,eAAK,IAAIzG,CAAC,GAAGkI,OAAb,EAAsBlI,CAAC,IAAImI,KAA3B,EAAkCnI,CAAC,EAAnC,EAAuC;AACrCuI,YAAAA,QAAQ,CAACvI,CAAD,CAAR,gBACKuI,QAAQ,CAACvI,CAAD,CADb,EAEK9I,OAFL;AAID;;AAED,iBAAO;AACLqR,YAAAA,QAAQ,EAARA;AADK,WAAP;AAGD,SAZD;AAaD;;AACD,UAAI,MAAKxT,KAAL,CAAWyT,cAAf,EAA+B;AAC7B,cAAKzT,KAAL,CAAWyT,cAAX,CAA0B,MAAK7R,KAAL,CAAW4R,QAAX,CAAoBL,OAApB,CAA1B,EAAwD,MAAKvR,KAAL,CAAW4R,QAAX,CAAoBJ,KAApB,CAAxD,EAAoFjR,OAApF,EAA6FkR,MAA7F;AACD;AACF,KA/MkB;;AAAA,UAoNnBK,cApNmB,GAoNF,UAAClH,IAAD,EAAU;AACzB,YAAKzJ,QAAL,CAAc;AACZ4Q,QAAAA,eAAe,EAAE,MAAK/R,KAAL,CAAW+R,eAAX,CAA2BC,MAA3B,CAAkCpH,IAAI,CAACxF,GAAL,CAAS,UAAC6M,CAAD;AAAA,iBAAOA,CAAC,CAAC5B,MAAT;AAAA,SAAT,CAAlC;AADL,OAAd;;AAGA,UAAI,MAAKjS,KAAL,CAAW8T,cAAf,EAA+B;AAC7B,cAAK9T,KAAL,CAAW8T,cAAX,CAA0BtH,IAA1B;AACD;AACF,KA3NkB;;AAAA,UAgOnBuH,gBAhOmB,GAgOA,UAACvH,IAAD,EAAU;AAC3B,UAAIwH,UAAU,GAAGxH,IAAI,CAACxF,GAAL,CAAS,UAAC6M,CAAD;AAAA,eAAOA,CAAC,CAAC5B,MAAT;AAAA,OAAT,CAAjB;;AACA,YAAKlP,QAAL,CAAc;AACZ4Q,QAAAA,eAAe,EAAE,MAAK/R,KAAL,CAAW+R,eAAX,CAA2BhN,MAA3B,CAAkC,UAACsE,CAAD;AAAA,iBAAO+I,UAAU,CAACnN,OAAX,CAAmBoE,CAAnB,MAA0B,CAAC,CAAlC;AAAA,SAAlC;AADL,OAAd;AAGD,KArOkB;;AAAA,UA2OnBgJ,kBA3OmB,GA2OE,UAACnT,KAAD,EAAW;AAC9B,UAAIoT,IAAI,GAAG,MAAKtS,KAAL,CAAWsS,IAAtB;;AACA,UAAI,EAAEpT,KAAK,CAACqT,UAAN,IAAoB,IAAtB,KAA+B,EAAErT,KAAK,CAACqT,UAAN,CAAiBnT,MAAjB,IAA2B,CAA7B,CAAnC,EAAoE;AAClEkT,QAAAA,IAAI,CAACpT,KAAK,CAAC8B,MAAN,CAAaC,GAAd,CAAJ,GAAyB/B,KAAzB;AACD,OAFD,MAEO;AACL,eAAOoT,IAAI,CAACpT,KAAK,CAAC8B,MAAN,CAAaC,GAAd,CAAX;AACD;;AACD,YAAKE,QAAL,CAAc;AAAEmR,QAAAA,IAAI,EAAJA;AAAF,OAAd;;AACA,UAAM3E,IAAI,GAAG,MAAK6E,OAAL,CAAa,MAAKxS,KAAL,CAAW2R,aAAxB,EAAuC,MAAK3R,KAAL,CAAWsS,IAAlD,CAAb;;AACA,YAAKnR,QAAL,CAAc;AACZyJ,QAAAA,IAAI,EAAE+C,IADM;AAEZiE,QAAAA,QAAQ,EAAEjE,IAFE;AAGZ8E,QAAAA,KAAK,EAAE9E,IAAI,CAACvO;AAHA,OAAd;;AAKA,UAAIuO,IAAI,CAACvO,MAAL,KAAgB,CAApB,EAAuB;AACrB,cAAKgS,mBAAL;AACD,OAFD,MAGK;AACH,cAAKlP,kBAAL;AACD;AACF,KA/PkB;;AAAA,UAgQnBsQ,OAhQmB,GAgQT,UAAC5H,IAAD,EAAO8H,OAAP,EAAmB;AAC3B,UAAI7G,MAAM,CAACD,IAAP,CAAY8G,OAAZ,EAAqBtT,MAArB,IAA+B,CAAnC,EAAsC;AACpCsT,QAAAA,OAAO,GAAG,EAAV;AACD;;AACDvD,MAAAA,SAAS,CAACwD,OAAV,CAAkB;AAAE/H,QAAAA,IAAI,EAAE,EAAR;AAAY8H,QAAAA,OAAO,EAAE;AAArB,OAAlB;AACA,aAAOvD,SAAS,CAACwD,OAAV,CAAkB;AAAE/H,QAAAA,IAAI,EAAEA,IAAR;AAAc8H,QAAAA,OAAO,EAAEA;AAAvB,OAAlB,CAAP;AACD,KAtQkB;;AAAA,UA0RnBE,QA1RmB,GA0RR,UAACjF,IAAD,EAAOkF,UAAP,EAAmBC,aAAnB,EAAqC;AAC9C,UAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACzT,CAAD,EAAIC,CAAJ,EAAU;AACzB,YAAIuT,aAAa,KAAK,KAAtB,EAA6B;AAC3B,iBAAOxT,CAAC,CAACuT,UAAD,CAAD,GAAgBtT,CAAC,CAACsT,UAAD,CAAjB,GAAgC,CAAhC,GAAoC,CAAC,CAA5C;AACD,SAFD,MAEO,IAAIC,aAAa,KAAK,MAAtB,EAA8B;AACnC,iBAAOxT,CAAC,CAACuT,UAAD,CAAD,GAAgBtT,CAAC,CAACsT,UAAD,CAAjB,GAAgC,CAAhC,GAAoC,CAAC,CAA5C;AACD;AACF,OAND;;AAOA,YAAK1R,QAAL,CAAc;AACZyJ,QAAAA,IAAI,EAAE,UAAI+C,IAAJ,EAAUqF,IAAV,CAAeD,QAAf;AADM,OAAd;;AAGA,aAAOD,aAAa,KAAK,MAAlB,GAA2BnF,IAA3B,GAAkC,MAAK3N,KAAL,CAAW4K,IAApD;AACD,KAtSkB;;AAAA,UA4SnBqI,YA5SmB,GA4SJ,UAACC,MAAD,EAAS9R,MAAT,EAAoB;AACjC,UAAM+R,SAAS,GAAGtH,MAAM,CAACuH,MAAP,CAAc,EAAd,EAAkB,MAAKpT,KAAvB,CAAlB;;AACA,UAAMqT,iBAAiB,GAAG,MAAKrT,KAAL,CAAWqE,OAAX,CAAmB+B,SAAnB,CAA6B,UAACiD,CAAD;AAAA,eAAOA,CAAC,CAACpI,GAAF,KAAUiS,MAAjB;AAAA,OAA7B,CAA1B;;AACA,UAAMI,iBAAiB,GAAG,MAAKtT,KAAL,CAAWqE,OAAX,CAAmB+B,SAAnB,CAA6B,UAACiD,CAAD;AAAA,eAAOA,CAAC,CAACpI,GAAF,KAAUG,MAAjB;AAAA,OAA7B,CAA1B;;AAEA+R,MAAAA,SAAS,CAAC9O,OAAV,CAAkBgC,MAAlB,CAAyBiN,iBAAzB,EAA4C,CAA5C,EAA+CH,SAAS,CAAC9O,OAAV,CAAkBgC,MAAlB,CAAyBgN,iBAAzB,EAA4C,CAA5C,EAA+C,CAA/C,CAA/C;AAEA,UAAME,YAAY,GAAG1H,MAAM,CAACuH,MAAP,CAAc,EAAd,EAAkB,MAAKpT,KAAvB,EAA8B;AACjDqE,QAAAA,OAAO,EAAE;AADwC,OAA9B,CAArB;;AAGA,YAAKlD,QAAL,CAAcoS,YAAd;;AAEA,UAAMC,gBAAgB,GAAG3H,MAAM,CAACuH,MAAP,CAAc,EAAd,EAAkB,MAAKpT,KAAvB,EAA8B;AACrDqE,QAAAA,OAAO,EAAE8O,SAAS,CAAC9O;AADkC,OAA9B,CAAzB;;AAGA,YAAKlD,QAAL,CAAcqS,gBAAd;AACD,KA5TkB;;AAAA,UAiUnBnM,oBAjUmB,GAiUI,UAACD,SAAD,EAAe;AACpCkI,MAAAA,QAAQ,GAAGlI,SAAX;AACD,KAnUkB;;AAAA,UAoUnBc,0BApUmB,GAoUU,UAACuL,yBAAD,EAA4BC,iBAA5B,EAAkD;AAC7E,UAAIC,yBAAyB,GAAG,MAAKvV,KAAL,CAAWiG,OAA3C;AACAsP,MAAAA,yBAAyB,GAAGA,yBAAyB,CAAC5O,MAA1B,CAAiC,UAAClG,IAAD,EAAU;AACrE,eAAO4U,yBAAyB,CAACxN,QAA1B,CAAmCpH,IAAI,CAAC2G,IAAxC,CAAP;AACD,OAF2B,CAA5B;AAGA,UAAIoO,iBAAiB,GAAGD,yBAAxB;AACA,UAAIE,mBAAJ;;AACA,UAAIH,iBAAiB,CAACtU,MAAlB,GAA2B,CAA/B,EAAkC;AAChCsU,QAAAA,iBAAiB,CACd5D,KADH,CACS,CADT,EAEGgE,OAFH,GAGG1O,GAHH,CAGO,UAACvG,IAAD,EAAOiE,KAAP,EAAiB;AACpB+Q,UAAAA,mBAAmB,GAAGF,yBAAyB,CAAC5O,MAA1B,CAAiC,UAACoC,OAAD;AAAA,mBAAatI,IAAI,KAAKsI,OAAO,CAAC3B,IAA9B;AAAA,WAAjC,CAAtB;AACAoO,UAAAA,iBAAiB,GAAG,MAAKG,UAAL,CAClBJ,yBADkB,EAElBA,yBAAyB,CAAC1O,OAA1B,CAAkC4O,mBAAmB,CAAC,CAAD,CAArD,CAFkB,EAGlB/Q,KAHkB,CAApB;AAKD,SAVH;AAWD;;AACD,UAAIwM,QAAQ,CAAClQ,MAAT,GAAkB,CAAtB,EAAyB;AACvBkQ,QAAAA,QAAQ,CACLlK,GADH,CACO,UAACvG,IAAD,EAAOiE,KAAP,EAAiB;AACpB+Q,UAAAA,mBAAmB,GAAGF,yBAAyB,CAAC5O,MAA1B,CAAiC,UAACoC,OAAD;AAAA,mBAAatI,IAAI,KAAKsI,OAAO,CAAC3B,IAA9B;AAAA,WAAjC,CAAtB;AACAoO,UAAAA,iBAAiB,GAAG,MAAKG,UAAL,CAClBJ,yBADkB,EAElBA,yBAAyB,CAAC1O,OAA1B,CAAkC4O,mBAAmB,CAAC,CAAD,CAArD,CAFkB,EAGlB/Q,KAHkB,CAApB;AAKD,SARH;AASD;;AAED6Q,MAAAA,yBAAyB,GAAGC,iBAA5B;AAKAD,MAAAA,yBAAyB,CAACvO,GAA1B,CAA8B,UAAC4O,UAAD,EAAalR,KAAb,EAAuB;AACnD,YAAIkR,UAAU,CAACC,MAAX,KAAsB/J,SAAtB,IAAmC8J,UAAU,CAACC,MAAX,KAAsB,IAA7D,EAAmE;AACjEN,UAAAA,yBAAyB,CAAC7Q,KAAD,CAAzB,CAAiC,QAAjC,IAA6C,KAA7C;AACD;;AACD,YAAI4Q,iBAAiB,CAACzN,QAAlB,CAA2B+N,UAAU,CAACxO,IAAtC,CAAJ,EAAiD;AAC/CmO,UAAAA,yBAAyB,CAAC7Q,KAAD,CAAzB,CAAiC,QAAjC,IAA6C,IAA7C;AACD;AACF,OAPD;AASAjD,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0C6T,yBAA1C;;AAEA,YAAKxS,QAAL,CAAc;AACZkD,QAAAA,OAAO,EAAEsP;AADG,OAAd;;AAIA,YAAK9L,qBAAL;;AACAyH,MAAAA,QAAQ,GAAC,EAAT;AACD,KA1XkB;;AAAA,UAkYnByE,UAlYmB,GAkYN,UAACG,GAAD,EAAMC,SAAN,EAAiBC,SAAjB,EAA+B;AAC1C,UAAIA,SAAS,IAAIF,GAAG,CAAC9U,MAArB,EAA6B;AAC3B,YAAIiV,CAAC,GAAGD,SAAS,GAAGF,GAAG,CAAC9U,MAAhB,GAAyB,CAAjC;;AACA,eAAOiV,CAAC,EAAR,EAAY;AACVH,UAAAA,GAAG,CAACrP,IAAJ,CAASqF,SAAT;AACD;AACF;;AACDgK,MAAAA,GAAG,CAAC7N,MAAJ,CAAW+N,SAAX,EAAsB,CAAtB,EAAyBF,GAAG,CAAC7N,MAAJ,CAAW8N,SAAX,EAAsB,CAAtB,EAAyB,CAAzB,CAAzB;AACA,aAAOD,GAAP;AACD,KA3YkB;;AAAA,UAgZnBI,sBAhZmB,GAgZM,YAAM;AAC7B,UAAIC,cAAc,GAAG,EAArB;AACA,UAAIhN,yBAAyB,GAAG,EAAhC;;AACA,YAAKvH,KAAL,CAAWqE,OAAX,CACGU,MADH,CACU,UAAClG,IAAD;AAAA,eAAUA,IAAI,CAACoV,MAAL,KAAgB/J,SAAhB,IAA6BrL,IAAI,CAACoV,MAAL,KAAgB,IAAvD;AAAA,OADV,EAEG7O,GAFH,CAEO,UAACvG,IAAD;AAAA,eAAU0I,yBAAyB,CAAC1C,IAA1B,CAA+BhG,IAAI,CAAC2G,IAApC,CAAV;AAAA,OAFP;;AAGA,YAAKxF,KAAL,CAAWqE,OAAX,CAAmBe,GAAnB,CAAuB,UAACvG,IAAD;AAAA,eAAU0V,cAAc,CAAC1P,IAAf,CAAoBhG,IAAI,CAAC2G,IAAzB,CAAV;AAAA,OAAvB;;AACA,YAAKrE,QAAL,CAAc;AACZqT,QAAAA,yBAAyB,eACvBlT,6BAAC,gBAAD;AACE,UAAA,mBAAmB,EAAE,MAAKlD,KAAL,CAAW2I,mBADlC;AAEE,UAAA,0BAA0B,EAAE,MAAKmB,0BAFnC;AAGE,UAAA,UAAU,EAAEqM,cAHd;AAIE,UAAA,qBAAqB,EAAE,MAAK1M,qBAJ9B;AAKE,UAAA,yBAAyB,EAAEN,yBAL7B;AAME,UAAA,oBAAoB,EAAE,MAAKF;AAN7B,WAOM,MAAKjJ,KAPX;AAFU,OAAd;AAaD,KApakB;;AAAA,UAyanByJ,qBAzamB,GAyaK,YAAM;AAC5B,YAAK1G,QAAL,CAAc;AACZqT,QAAAA,yBAAyB,EAAE;AADf,OAAd;AAGD,KA7akB;;AAAA,UA8anBC,iBA9amB,GA8aC,UAACvV,KAAD,EAAW;AAC7B,YAAKiC,QAAL,CAAc;AAAEuT,QAAAA,WAAW,EAAExV;AAAf,OAAd;AACD,KAhbkB;;AAAA,UAibnBiD,gBAjbmB,GAibA,YAAM;AACvB,YAAKhB,QAAL,CAAc;AAAEuT,QAAAA,WAAW,EAAE;AAAf,OAAd;;AACA,YAAKvT,QAAL,CAAc;AAAEwQ,QAAAA,aAAa,EAAE,MAAK3R,KAAL,CAAW2R;AAA5B,OAAd;AACD,KApbkB;;AAAA,UAsbnBgD,YAtbmB,GAsbJ,YAAM;AACnB,UAAIC,WAAW,GAAG,EAAlB;;AACA,YAAK5U,KAAL,CAAWqE,OAAX,CAAmBe,GAAnB,CAAuB,UAACvG,IAAD;AAAA,eAAU+V,WAAW,CAAC/P,IAAZ,CAAiBhG,IAAI,CAAC2G,IAAtB,CAAV;AAAA,OAAvB;;AACA,YAAKrE,QAAL,CAAc;AACZ0T,QAAAA,qBAAqB,eAAEvT,6BAACwT,GAAD;AAAS,UAAA,0BAA0B,EAAE,oCAAC7D,IAAD;AAAA,mBAAS,MAAKtG,0BAAL,CAAgCsG,IAAhC,CAAT;AAAA,WAArC;AACvB,UAAA,gBAAgB,EAAE2D,WADK;AAEvB,UAAA,YAAY,EAAE,MAAK/J;AAFI;AADX,OAAd;AAKD,KA9bkB;;AAAA,UAgcnBA,YAhcmB,GAgcJ,YAAM;AACnB,YAAK1J,QAAL,CAAc;AACZ0T,QAAAA,qBAAqB,EAAE;AADX,OAAd;AAGD,KApckB;;AAAA,UAucnBE,gBAvcmB,GAucA,YAAM;AACvB,YAAK5T,QAAL,CAAc;AACZ6T,QAAAA,eAAe,eACb1T,6BAAC,UAAD;AAAY,UAAA,IAAI,EAAE,MAAKtB,KAAL,CAAW4K,IAA7B;AAAmC,UAAA,WAAW,EAAE,MAAK5K,KAAL,CAAWqE,OAA3D;AAAoE,UAAA,WAAW,EAAE,MAAKmK;AAAtF;AAFU,OAAd;AAKD,KA7ckB;;AAAA,UA+cnBA,WA/cmB,GA+cL,YAAM;AAClB,YAAKrN,QAAL,CAAc;AACZ6T,QAAAA,eAAe,EAAE;AADL,OAAd;AAGD,KAndkB;;AAAA,UAqdnBrK,0BArdmB,GAqdU,UAACsK,aAAD,EAAmB;AAE9C,UAAIC,YAAY,GAAG,MAAKlV,KAAL,CAAW4K,IAA9B;AACA,UAAIuK,oBAAoB,GAAG,EAA3B;AACAF,MAAAA,aAAa,CAAC7P,GAAd,CAAkB,UAACvG,IAAD,EAAOiE,KAAP,EAAiB;AACjC,YAAIsS,UAAU,GAAG,EAAjB;AACAvJ,QAAAA,MAAM,CAACD,IAAP,CAAY,MAAK5L,KAAL,CAAW4K,IAAX,CAAgB,CAAhB,CAAZ,EAAgCxF,GAAhC,CAAoC,UAAAiQ,OAAO,EAAE;AAC3C,cAAGxW,IAAI,CAACoK,MAAL,KAAgB,UAAhB,IAA8BoM,OAAO,KAAK,UAA7C,EAAwD;AACtDD,YAAAA,UAAU,GAAG,UAAb;AACD,WAFD,MAGK,IAAGC,OAAO,CAAC5O,WAAR,OAA0B,MAAK6O,WAAL,CAAiBzW,IAAI,CAACoK,MAAtB,EAA8BxC,WAA9B,EAA7B,EAAyE;AAC5E2O,YAAAA,UAAU,GAAEC,OAAZ;AACD;AACF,SAPD;AAQAxV,QAAAA,OAAO,CAACC,GAAR,CAAYsV,UAAZ;AACA,YAAIG,UAAU,GAAG,MAAKvV,KAAL,CAAW4K,IAAX,CAAgB,CAAhB,EACf/L,IAAI,CAACoK,MAAL,KAAgB,UAAhB,GAA6B,UAA7B,GAA0CmM,UAD3B,CAAjB;;AAGA,YAAI,OAAOG,UAAP,KAAsB,QAA1B,EAAoC;AAClCJ,UAAAA,oBAAoB,CAACtQ,IAArB,CAA0B;AACxBW,YAAAA,IAAI,EAAC4P,UADmB;AAExBI,YAAAA,MAAM,EAAEC,QAFgB;AAGxB3B,YAAAA,OAAO,EAAEjV,IAAI,CAACqK,KAAL,KAAe,WAAf,GAA6B,KAA7B,GAAqC;AAHtB,WAA1B;AAKD,SAND,MAMO;AACLiM,UAAAA,oBAAoB,CAACtQ,IAArB,CAA0B;AACxBW,YAAAA,IAAI,EAAE4P,UADkB;AAExBtB,YAAAA,OAAO,EAAEjV,IAAI,CAACqK,KAAL,KAAe,WAAf,GAA6B,KAA7B,GAAqC;AAFtB,WAA1B;AAID;AACF,OA1BD;AA2BAgM,MAAAA,YAAY,CAAClC,IAAb,CAAkB0C,OAAO,MAAP,SAAWP,oBAAX,CAAlB;;AACA,YAAKhU,QAAL,CAAc;AACZyJ,QAAAA,IAAI,EAAEsK;AADM,OAAd;;AAIA,YAAKrK,YAAL;AACD,KA1fkB;;AAAA,UA4fnByK,WA5fmB,GA4fL,UAACpG,GAAD,EAAS;AACrB,aAAOA,GAAG,CACPyG,OADI,CACI,QADJ,EACc,UAAUC,EAAV,EAAc;AAC/B,eAAOA,EAAE,CAACC,WAAH,EAAP;AACD,OAHI,EAIJF,OAJI,CAII,KAJJ,EAIW,EAJX,EAKJA,OALI,CAKI,MALJ,EAKY,UAAUC,EAAV,EAAc;AAC7B,eAAOA,EAAE,CAACnP,WAAH,EAAP;AACD,OAPI,CAAP;AAQD,KArgBkB;;AAEjB,QAAMqP,YAAY,GAAG,EAArB;;AACA,UAAK1X,KAAL,CAAW0X,YAAX,CAAwBlR,OAAxB,CAAgC,UAAC/F,IAAD,EAAU;AACxCiX,MAAAA,YAAY,CAACjR,IAAb,CAAkB;AAAEpC,QAAAA,EAAE,EAAE5D,IAAN;AAAYK,QAAAA,KAAK,EAAEL;AAAnB,OAAlB;AACD,KAFD;;AAGA,UAAKmB,KAAL,GAAa;AACXqR,MAAAA,aAAa,EAAE,EADJ;AAEX0E,MAAAA,MAAM,EAAE,GAFG;AAGXC,MAAAA,aAAa,EAAE,MAHJ;AAIXC,MAAAA,iBAAiB,EAAE,EAJR;AAKXvB,MAAAA,WAAW,EAAE,EALF;AAMX3P,MAAAA,MAAM,EAAE,EANG;AAOX6F,MAAAA,IAAI,EAAE,MAAKxM,KAAL,CAAWwM,IAPN;AAQXmH,MAAAA,eAAe,EAAE,EARN;AASXO,MAAAA,IAAI,EAAE,EATK;AAUXpC,MAAAA,OAAO,EAAE,EAVE;AAWXsE,MAAAA,yBAAyB,EAAE,IAXhB;AAYXQ,MAAAA,eAAe,EAAE,IAZN;AAaXrD,MAAAA,aAAa,EAAE,MAAKvT,KAAL,CAAWwM,IAbf;AAcXgH,MAAAA,QAAQ,EAAE,MAAKxT,KAAL,CAAWwM,IAdV;AAeXiK,MAAAA,qBAAqB,EAAE,IAfZ;AAgBXpC,MAAAA,KAAK,EAAE,MAAKrU,KAAL,CAAWwM,IAAX,CAAgBxL,MAhBZ;AAiBXiF,MAAAA,OAAO,EAAE,MAAKjG,KAAL,CAAWiG,OAAX,CAAmBe,GAAnB,CAAuB,UAACvG,IAAD,EAAU;AACxC,YAAIA,IAAI,CAACqX,MAAL,KAAgB,YAApB,EAAkC;AAChCrX,UAAAA,IAAI,CAACqX,MAAL,GAAcnW,UAAd;AACD,SAFD,MAEO,IAAIlB,IAAI,CAACqX,MAAL,KAAgB,UAApB,EAAgC;AACrCrX,UAAAA,IAAI,CAACqX,MAAL,gBAAc5U,6BAAC,cAAD;AAAgB,YAAA,OAAO,EAAEwU;AAAzB,YAAd;AACD,SAFM,MAEA,IAAIjX,IAAI,CAACqX,MAAL,KAAgB,MAApB,EAA4B;AACjCrX,UAAAA,IAAI,CAACqX,MAAL,GAAc,MAAd;AACD,SAFM,MAEA;AACLrX,UAAAA,IAAI,CAACqX,MAAL,GAAc,IAAd;AACD;;AACD,YAAIrX,IAAI,CAACsX,UAAL,KAAoB,SAAxB,EAAmC;AACjCtX,UAAAA,IAAI,CAACuX,cAAL,GAAsB3G,aAAtB;AACD,SAFD,MAGK;AACH5Q,UAAAA,IAAI,CAACuX,cAAL,GAAsB7G,kBAAtB;AACD;;AACD,eAAO1Q,IAAP;AACD,OAjBQ;AAjBE,KAAb;AAoCAd,IAAAA,QAAQ,CAACG,gBAAT,CAA0B,MAA1B,EAAkC,MAAK8R,UAAvC;AACAjS,IAAAA,QAAQ,CAACG,gBAAT,CAA0B,OAA1B,EAAmC,MAAKyS,WAAxC;AACA,UAAK8D,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBrU,IAAvB,+BAAzB;AACA,UAAK+B,gBAAL,GAAwB,MAAKA,gBAAL,CAAsB/B,IAAtB,+BAAxB;AACA,UAAKiS,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBjS,IAAxB,+BAA1B;AAEA,UAAKsR,kBAAL,GAA0B,MAAKtT,KAAL,CAAWiG,OAAX,CAAmBU,MAAnB,CAA0B,UAAClG,IAAD,EAAU;AAC5D,aAAOA,IAAI,CAACwX,iBAAZ;AACD,KAFyB,CAA1B;AAhDiB;AAmDlB;;;;SACDC,qBAAA,4BAAmBC,SAAnB,EAA8B;AAE5B,QAAMC,WAAW,GAAGzY,QAAQ,CAAC0Y,WAAT,CAAqB,YAArB,CAApB;AACAD,IAAAA,WAAW,CAACE,SAAZ,CAAsB,QAAtB,EAAgC,IAAhC,EAAsC,KAAtC;AACAzY,IAAAA,MAAM,CAAC0Y,aAAP,CAAqBH,WAArB;AACD;;SAwEDI,4BAAA,mCAA0BxY,KAA1B,EAAiC;AAC/B,SAAK+C,QAAL,CAAc;AACZyJ,MAAAA,IAAI,EAAExM,KAAK,CAACwM;AADA,KAAd;AAGA,SAAKzJ,QAAL,CAAc;AACZS,MAAAA,MAAM,EAAExD,KAAK,CAACwD;AADF,KAAd;AAGA,SAAKT,QAAL,CAAc;AACZ0V,MAAAA,SAAS,EAAEzY,KAAK,CAACyY;AADL,KAAd;AAGA,SAAK1V,QAAL,CAAc;AAAEsR,MAAAA,KAAK,EAAErU,KAAK,CAACqU;AAAf,KAAd;AACA,SAAKtR,QAAL,CAAc;AAAEkQ,MAAAA,aAAa,EAAEjT,KAAK,CAACwD;AAAvB,KAAd;AACD;;SAgIDkV,uBAAA,8BAAqBlM,IAArB,EAA2BmM,QAA3B,EAAqC;AACnC,WAAOnM,IAAI,CACRxF,GADI,CACA,UAAC6M,CAAD;AAAA,aAAOA,CAAC,CAAC8E,QAAD,CAAR;AAAA,KADA,EAEJhS,MAFI,CAEG,UAAClG,IAAD,EAAOwK,CAAP,EAAU/J,CAAV,EAAgB;AACtB,aAAO+J,CAAC,KAAK/J,CAAC,CAAC2F,OAAF,CAAUpG,IAAV,CAAb;AACD,KAJI,CAAP;AAKD;;SAoPDwC,SAAA,kBAAS;AAAA;;AACP,wBACEC,uDACEA;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAK,MAAA,SAAS,EAAC;AAAf,gCACUA,kDAAU,KAAKtB,KAAL,CAAWyS,KAArB,MADV,aADF,eAIEnR;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA;AAAG,MAAA,SAAS,EAAC;AAAb,MADF,eAEEA,6BAAC0V,0BAAD;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,QAHd;AAIE,MAAA,QAAQ,EAAE,kBAAC/U,CAAD,EAAO;AACf,QAAA,MAAI,CAACwS,iBAAL,CAAuBxS,CAAC,CAACb,MAAF,CAASlC,KAAhC;;AACA,QAAA,MAAI,CAACd,KAAL,CAAW6Y,iBAAX,CAA6BhV,CAA7B,EAAgC,MAAI,CAACjC,KAAL,CAAW4R,QAA3C;AACD,OAPH;AAQE,MAAA,KAAK,EAAE,KAAK5R,KAAL,CAAW0U;AARpB,MAFF,CAJF,eAoBEpT;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAE,KAAKqT;AAA3C,oBACErT,6BAACS,gCAAD;AAAiB,MAAA,KAAK,EAAC,YAAvB;AAAoC,MAAA,IAAI,EAAEmV;AAA1C,MADF,eAEE5V,6BAACS,gCAAD;AAAiB,MAAA,IAAI,EAAEoV,4BAAvB;AAAmC,MAAA,SAAS,EAAC;AAA7C,MAFF,CApBF,EAwBG,KAAKnX,KAAL,CAAW6U,qBAxBd,eAyBEvT;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAE,KAAKgT;AAA3C,oBACEhT,6BAACS,gCAAD;AAAiB,MAAA,KAAK,EAAC,gBAAvB;AAAwC,MAAA,IAAI,EAAEqV;AAA9C,MADF,eAEE9V,6BAACS,gCAAD;AAAiB,MAAA,IAAI,EAAEoV,4BAAvB;AAAmC,MAAA,SAAS,EAAC;AAA7C,MAFF,CAzBF,EA6BG,KAAKnX,KAAL,CAAWwU,yBA7Bd,eA8BElT;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,6BAACS,gCAAD;AAAiB,MAAA,KAAK,EAAC,QAAvB;AAAgC,MAAA,IAAI,EAAEsV,4BAAtC;AAAkD,MAAA,OAAO,EAAE,KAAKtC;AAAhE,MADF,CA9BF,EAiCG,KAAK/U,KAAL,CAAWgV,eAjCd,CADF,eA0CE1T,6BAAC,YAAD;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWqR,aAFrB;AAGE,MAAA,kBAAkB,EAAE,4BAACpP,CAAD,EAAO;AACzB,QAAA,MAAI,CAAC7D,KAAL,CAAW8D,kBAAX;;AACA,QAAA,MAAI,CAACA,kBAAL;AACD,OANH;AAOE,MAAA,gBAAgB,EAAE,KAAKC;AAPzB,MA1CF,eAmDEb,6BAAC,kBAAD;AAAoB,MAAA,SAAS,EAAC,SAA9B;AAAwC,MAAA,YAAY,EAAE,KAAK2R;AAA3D,oBACE3R,6BAAC,WAAD;AACE,MAAA,OAAO,eAAEA,6BAACgW,2BAAD;AAAS,QAAA,YAAY,EAAE;AAAvB,QADX;AAEE,MAAA,oBAAoB,EAAE,8BAACC,SAAD;AAAA,eAAe,MAAI,CAACT,oBAAL,CAA0B,MAAI,CAAC9W,KAAL,CAAW2R,aAArC,EAAoD4F,SAApD,CAAf;AAAA,OAFxB;AAGE,MAAA,SAAS,EAAE,KAAKvX,KAAL,CAAW+V,MAHxB;AAIE,MAAA,OAAO,EAAE,KAAK/V,KAAL,CAAWqE,OAJtB;AAKE,MAAA,SAAS,EAAE,mBAACgF,CAAD;AAAA,eAAO,MAAI,CAACrJ,KAAL,CAAW4K,IAAX,CAAgBvB,CAAhB,CAAP;AAAA,OALb;AAME,MAAA,SAAS,EAAE,KAAKrJ,KAAL,CAAW4K,IAAX,CAAgBxL,MAN7B;AAOE,MAAA,iBAAiB,EAAE,KAAKkS,iBAP1B;AAQE,MAAA,gBAAgB,EAAE,IARpB;AASE,MAAA,cAAc,EAAE,0BAAM;AACpB,QAAA,MAAI,CAACnQ,QAAL,CAAc;AAAEmR,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAXH;AAYE,MAAA,cAAc,EAAE,wBAACpB,GAAD,EAAMsG,KAAN;AAAA,eAAgB3X,OAAO,CAACC,GAAR,aAAsBoR,GAAtB,6BAAiDsG,KAAjD,CAAhB;AAAA,OAZlB;AAaE,MAAA,WAAW,EAAE,qBAACzS,MAAD;AAAA,eAAY,MAAI,CAACsN,kBAAL,CAAwBtN,MAAxB,CAAZ;AAAA,OAbf;AAcE,MAAA,YAAY,EAAE;AACZ0S,QAAAA,YAAY,EAAE,IADF;AAEZC,QAAAA,iBAAiB,EAAE,IAFP;AAGZ5F,QAAAA,cAAc,EAAE,KAAKA,cAHT;AAIZK,QAAAA,gBAAgB,EAAE,KAAKA,gBAJX;AAKZwF,QAAAA,QAAQ,EAAE;AACRC,UAAAA,OAAO,EAAE,KAAK5X,KAAL,CAAW+R;AADZ;AALE,OAdhB;AAuBE,MAAA,UAAU,EAAE,oBAACc,UAAD,EAAaC,aAAb;AAAA,eAA+B,MAAI,CAACF,QAAL,CAAc,MAAI,CAAC5S,KAAL,CAAW2R,aAAzB,EAAwCkB,UAAxC,EAAoDC,aAApD,CAA/B;AAAA;AAvBd,MADF,CAnDF,CADF;AAoFD;;;EA7lBuBtR;;AAmmB1B,IAAIkU,OAAJ;;AACA,CAAC,YAAY;AAEX,MAAImC,WAAW,GAAG,SAAdA,WAAc,CAAUvY,CAAV,EAAaC,CAAb,EAAgB;AAC9B,QAAID,CAAC,IAAIC,CAAT,EAAY,OAAO,CAAP;AACZ,WAAOD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAApB;AACD,GAHH;AAAA,MAIEuY,UAAU,GAAG,SAAbA,UAAa,CAAUtC,MAAV,EAAkB1B,OAAlB,EAA2B;AACtC,QAAIiE,GAAG,GAAGF,WAAV;;AACA,QAAIrC,MAAJ,EAAY;AACVuC,MAAAA,GAAG,GAAG,aAAUzY,CAAV,EAAaC,CAAb,EAAgB;AACpB,eAAOsY,WAAW,CAACrC,MAAM,CAAClW,CAAD,CAAP,EAAYkW,MAAM,CAACjW,CAAD,CAAlB,CAAlB;AACD,OAFD;AAGD;;AACD,QAAIuU,OAAJ,EAAa;AACX,aAAO,UAAUxU,CAAV,EAAaC,CAAb,EAAgB;AACrB,eAAO,CAAC,CAAD,GAAKwY,GAAG,CAACzY,CAAD,EAAIC,CAAJ,CAAf;AACD,OAFD;AAGD;;AACD,WAAOwY,GAAP;AACD,GAjBH;;AAoBArC,EAAAA,OAAO,GAAG,mBAAY;AACpB,QAAIsC,MAAM,GAAG,EAAb;AAAA,QACEC,QAAQ,GAAGC,SAAS,CAAC9Y,MADvB;AAAA,QAEE+Y,KAFF;AAAA,QAGE3S,IAHF;AAAA,QAIEsO,AACAiE,GALF;;AAQA,SAAK,IAAI1O,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4O,QAApB,EAA8B5O,CAAC,EAA/B,EAAmC;AACjC8O,MAAAA,KAAK,GAAGD,SAAS,CAAC7O,CAAD,CAAjB;;AACA,UAAI,OAAO8O,KAAP,KAAiB,QAArB,EAA+B;AAC7B3S,QAAAA,IAAI,GAAG2S,KAAP;AACAJ,QAAAA,GAAG,GAAGF,WAAN;AACD,OAHD,MAGO;AACLrS,QAAAA,IAAI,GAAG2S,KAAK,CAAC3S,IAAb;AACAuS,QAAAA,GAAG,GAAGD,UAAU,CAACK,KAAK,CAAC3C,MAAP,EAAe2C,KAAK,CAACrE,OAArB,CAAhB;AACD;;AACDkE,MAAAA,MAAM,CAACnT,IAAP,CAAY;AACVW,QAAAA,IAAI,EAAEA,IADI;AAEVuS,QAAAA,GAAG,EAAEA;AAFK,OAAZ;AAID;;AAED,WAAO,UAAUK,CAAV,EAAaC,CAAb,EAAgB;AACrB,UAAU7S,IAAV,EAAgBuS,GAAhB,EAAqBO,MAArB;;AACA,WAAK,IAAIjP,CAAC,GAAG,CAAR,EAAWkP,CAAC,GAAGN,QAApB,EAA8B5O,CAAC,GAAGkP,CAAlC,EAAqClP,CAAC,EAAtC,EAA0C;AACxCiP,QAAAA,MAAM,GAAG,CAAT;AACAH,QAAAA,KAAK,GAAGH,MAAM,CAAC3O,CAAD,CAAd;AACA7D,QAAAA,IAAI,GAAG2S,KAAK,CAAC3S,IAAb;AACAuS,QAAAA,GAAG,GAAGI,KAAK,CAACJ,GAAZ;AAEAO,QAAAA,MAAM,GAAGP,GAAG,CAACK,CAAC,CAAC5S,IAAD,CAAF,EAAU6S,CAAC,CAAC7S,IAAD,CAAX,CAAZ;AACA,YAAI8S,MAAM,KAAK,CAAf,EAAkB;AACnB;;AACD,aAAOA,MAAP;AACD,KAZD;AAaD,GArCD;AAsCD,CA5DD;;;;"}